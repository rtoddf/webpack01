{"map":"{\"version\":3,\"sources\":[\"webpack/bootstrap\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-selection/src/namespaces.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-selection/src/namespace.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-selection/src/creator.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-selection/src/selector.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-selection/src/selectorAll.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-selection/src/matcher.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-selection/src/selection/sparse.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-selection/src/selection/enter.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-selection/src/constant.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-selection/src/selection/data.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-selection/src/selection/sort.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-selection/src/selection/attr.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-selection/src/window.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-selection/src/selection/style.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-selection/src/selection/classed.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-selection/src/selection/text.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-selection/src/selection/html.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-selection/src/selection/raise.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-selection/src/selection/lower.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-selection/src/selection/insert.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-selection/src/selection/remove.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-selection/src/selection/clone.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-selection/src/selection/on.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-selection/src/selection/dispatch.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-selection/src/selection/index.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-selection/src/selection/select.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-selection/src/selection/selectAll.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-selection/src/selection/filter.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-selection/src/selection/exit.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-selection/src/selection/join.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-selection/src/selection/merge.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-selection/src/selection/order.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-selection/src/selection/call.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-selection/src/selection/nodes.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-selection/src/selection/node.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-selection/src/selection/size.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-selection/src/selection/empty.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-selection/src/selection/each.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-selection/src/selection/property.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-selection/src/selection/append.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-selection/src/selection/datum.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-selection/src/select.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-selection/src/create.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-selection/src/local.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-selection/src/sourceEvent.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-selection/src/point.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-selection/src/mouse.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-selection/src/selectAll.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-selection/src/touch.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-selection/src/touches.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-selection/src/index.js\",\"/Users/toddfleeman/Desktop/development/webpack01/src/js/story.js\",\"/Users/toddfleeman/Desktop/development/webpack01/src/js/story01.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3/dist/package.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-array/src/ascending.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-array/src/bisector.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-array/src/bisect.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-array/src/pairs.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-array/src/cross.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-array/src/descending.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-array/src/number.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-array/src/variance.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-array/src/deviation.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-array/src/extent.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-array/src/array.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-array/src/constant.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-array/src/identity.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-array/src/range.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-array/src/ticks.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-array/src/threshold/sturges.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-array/src/histogram.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-array/src/quantile.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-array/src/threshold/freedmanDiaconis.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-array/src/threshold/scott.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-array/src/max.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-array/src/mean.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-array/src/median.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-array/src/merge.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-array/src/min.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-array/src/permute.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-array/src/scan.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-array/src/shuffle.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-array/src/sum.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-array/src/transpose.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-array/src/zip.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-axis/src/array.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-axis/src/identity.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-axis/src/axis.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-dispatch/src/dispatch.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-drag/src/noevent.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-drag/src/nodrag.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-drag/src/constant.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-drag/src/event.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-drag/src/drag.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-color/src/define.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-color/src/color.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-color/src/math.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-color/src/lab.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-color/src/cubehelix.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-interpolate/src/basis.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-interpolate/src/basisClosed.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-interpolate/src/constant.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-interpolate/src/color.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-interpolate/src/rgb.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-interpolate/src/array.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-interpolate/src/date.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-interpolate/src/number.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-interpolate/src/object.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-interpolate/src/string.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-interpolate/src/transform/parse.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-interpolate/src/value.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-interpolate/src/discrete.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-interpolate/src/hue.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-interpolate/src/round.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-interpolate/src/transform/decompose.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-interpolate/src/transform/index.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-interpolate/src/zoom.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-interpolate/src/hsl.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-interpolate/src/lab.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-interpolate/src/hcl.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-interpolate/src/cubehelix.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-interpolate/src/piecewise.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-interpolate/src/quantize.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-timer/src/timer.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-timer/src/timeout.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-timer/src/interval.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-transition/src/transition/schedule.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-transition/src/interrupt.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-transition/src/transition/tween.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-transition/src/transition/interpolate.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-transition/src/transition/remove.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-transition/src/transition/selection.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-transition/src/transition/style.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-transition/src/transition/text.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-transition/src/transition/index.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-ease/src/linear.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-ease/src/quad.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-ease/src/cubic.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-transition/src/transition/select.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-transition/src/transition/selectAll.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-transition/src/transition/filter.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-transition/src/transition/merge.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-transition/src/transition/transition.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-transition/src/transition/on.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-transition/src/transition/attr.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-transition/src/transition/attrTween.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-transition/src/transition/styleTween.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-transition/src/transition/delay.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-transition/src/transition/duration.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-transition/src/transition/ease.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-transition/src/transition/end.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-ease/src/poly.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-ease/src/sin.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-ease/src/exp.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-ease/src/circle.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-ease/src/bounce.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-ease/src/back.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-ease/src/elastic.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-transition/src/selection/transition.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-transition/src/selection/index.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-transition/src/selection/interrupt.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-transition/src/active.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-brush/src/constant.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-brush/src/event.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-brush/src/noevent.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-brush/src/brush.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-chord/src/math.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-chord/src/chord.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-chord/src/array.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-chord/src/constant.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-path/src/path.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-chord/src/ribbon.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-collection/src/map.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-collection/src/nest.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-collection/src/set.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-collection/src/keys.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-collection/src/values.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-collection/src/entries.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-contour/src/array.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-contour/src/ascending.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-contour/src/area.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-contour/src/constant.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-contour/src/contains.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-contour/src/noop.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-contour/src/contours.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-contour/src/blur.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-contour/src/density.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-dsv/src/dsv.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-dsv/src/csv.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-dsv/src/tsv.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-dsv/src/autoType.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-fetch/src/blob.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-fetch/src/buffer.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-fetch/src/text.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-fetch/src/dsv.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-fetch/src/image.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-fetch/src/json.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-fetch/src/xml.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-force/src/center.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-force/src/constant.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-force/src/jiggle.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-quadtree/src/add.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-quadtree/src/cover.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-quadtree/src/quad.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-quadtree/src/x.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-quadtree/src/y.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-quadtree/src/quadtree.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-force/src/collide.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-quadtree/src/data.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-quadtree/src/extent.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-quadtree/src/find.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-quadtree/src/remove.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-quadtree/src/root.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-quadtree/src/size.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-quadtree/src/visit.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-quadtree/src/visitAfter.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-force/src/link.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-force/src/simulation.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-force/src/manyBody.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-force/src/radial.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-force/src/x.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-force/src/y.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-format/src/formatDecimal.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-format/src/exponent.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-format/src/formatSpecifier.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-format/src/formatTrim.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-format/src/formatPrefixAuto.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-format/src/defaultLocale.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-format/src/formatRounded.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-format/src/formatTypes.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-format/src/identity.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-format/src/locale.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-format/src/formatGroup.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-format/src/formatNumerals.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-format/src/precisionFixed.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-format/src/precisionPrefix.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-format/src/precisionRound.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-geo/src/adder.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-geo/src/math.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-geo/src/noop.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-geo/src/stream.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-geo/src/area.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-geo/src/cartesian.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-geo/src/bounds.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-geo/src/centroid.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-geo/src/constant.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-geo/src/compose.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-geo/src/rotation.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-geo/src/circle.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-geo/src/clip/buffer.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-geo/src/pointEqual.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-geo/src/clip/rejoin.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-geo/src/polygonContains.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-geo/src/clip/index.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-geo/src/clip/antimeridian.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-geo/src/clip/circle.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-geo/src/clip/line.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-geo/src/clip/rectangle.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-geo/src/clip/extent.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-geo/src/length.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-geo/src/distance.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-geo/src/contains.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-geo/src/graticule.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-geo/src/interpolate.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-geo/src/path/area.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-geo/src/identity.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-geo/src/path/bounds.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-geo/src/path/centroid.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-geo/src/path/context.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-geo/src/path/measure.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-geo/src/path/string.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-geo/src/path/index.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-geo/src/transform.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-geo/src/projection/fit.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-geo/src/projection/resample.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-geo/src/projection/index.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-geo/src/projection/conic.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-geo/src/projection/conicEqualArea.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-geo/src/projection/cylindricalEqualArea.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-geo/src/projection/albers.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-geo/src/projection/albersUsa.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-geo/src/projection/azimuthal.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-geo/src/projection/azimuthalEqualArea.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-geo/src/projection/azimuthalEquidistant.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-geo/src/projection/mercator.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-geo/src/projection/conicConformal.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-geo/src/projection/equirectangular.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-geo/src/projection/conicEquidistant.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-geo/src/projection/equalEarth.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-geo/src/projection/gnomonic.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-geo/src/projection/identity.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-geo/src/projection/naturalEarth1.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-geo/src/projection/orthographic.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-geo/src/projection/stereographic.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-geo/src/projection/transverseMercator.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-hierarchy/src/cluster.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-hierarchy/src/hierarchy/count.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-hierarchy/src/hierarchy/index.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-hierarchy/src/hierarchy/each.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-hierarchy/src/hierarchy/eachAfter.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-hierarchy/src/hierarchy/eachBefore.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-hierarchy/src/hierarchy/sum.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-hierarchy/src/hierarchy/sort.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-hierarchy/src/hierarchy/path.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-hierarchy/src/hierarchy/ancestors.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-hierarchy/src/hierarchy/descendants.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-hierarchy/src/hierarchy/leaves.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-hierarchy/src/hierarchy/links.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-hierarchy/src/array.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-hierarchy/src/pack/enclose.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-hierarchy/src/pack/siblings.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-hierarchy/src/accessors.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-hierarchy/src/constant.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-hierarchy/src/pack/index.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-hierarchy/src/treemap/round.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-hierarchy/src/treemap/dice.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-hierarchy/src/partition.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-hierarchy/src/stratify.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-hierarchy/src/tree.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-hierarchy/src/treemap/slice.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-hierarchy/src/treemap/squarify.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-hierarchy/src/treemap/index.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-hierarchy/src/treemap/binary.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-hierarchy/src/treemap/sliceDice.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-hierarchy/src/treemap/resquarify.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-polygon/src/area.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-polygon/src/centroid.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-polygon/src/cross.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-polygon/src/hull.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-polygon/src/contains.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-polygon/src/length.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-random/src/defaultSource.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-random/src/uniform.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-random/src/normal.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-random/src/logNormal.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-random/src/irwinHall.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-random/src/bates.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-random/src/exponential.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-scale/src/init.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-scale/src/array.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-scale/src/ordinal.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-scale/src/band.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-scale/src/constant.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-scale/src/number.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-scale/src/continuous.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-scale/src/tickFormat.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-scale/src/linear.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-scale/src/identity.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-scale/src/nice.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-scale/src/log.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-scale/src/symlog.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-scale/src/pow.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-scale/src/quantile.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-scale/src/quantize.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-scale/src/threshold.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-time/src/interval.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-time/src/millisecond.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-time/src/duration.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-time/src/second.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-time/src/minute.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-time/src/hour.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-time/src/day.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-time/src/week.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-time/src/month.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-time/src/year.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-time/src/utcMinute.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-time/src/utcHour.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-time/src/utcDay.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-time/src/utcWeek.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-time/src/utcMonth.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-time/src/utcYear.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-time-format/src/locale.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-time-format/src/defaultLocale.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-time-format/src/isoFormat.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-time-format/src/isoParse.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-scale/src/time.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-scale/src/utcTime.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-scale/src/sequential.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-scale/src/sequentialQuantile.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-scale/src/diverging.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-scale-chromatic/src/colors.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-scale-chromatic/src/categorical/category10.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-scale-chromatic/src/categorical/Accent.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-scale-chromatic/src/categorical/Dark2.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-scale-chromatic/src/categorical/Paired.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-scale-chromatic/src/categorical/Pastel1.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-scale-chromatic/src/categorical/Pastel2.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-scale-chromatic/src/categorical/Set1.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-scale-chromatic/src/categorical/Set2.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-scale-chromatic/src/categorical/Set3.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-scale-chromatic/src/ramp.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-scale-chromatic/src/diverging/BrBG.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-scale-chromatic/src/diverging/PRGn.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-scale-chromatic/src/diverging/PiYG.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-scale-chromatic/src/diverging/PuOr.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-scale-chromatic/src/diverging/RdBu.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-scale-chromatic/src/diverging/RdGy.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-scale-chromatic/src/diverging/RdYlBu.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-scale-chromatic/src/diverging/RdYlGn.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-scale-chromatic/src/diverging/Spectral.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-scale-chromatic/src/sequential-multi/BuGn.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-scale-chromatic/src/sequential-multi/BuPu.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-scale-chromatic/src/sequential-multi/GnBu.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-scale-chromatic/src/sequential-multi/OrRd.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-scale-chromatic/src/sequential-multi/PuBuGn.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-scale-chromatic/src/sequential-multi/PuBu.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-scale-chromatic/src/sequential-multi/PuRd.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-scale-chromatic/src/sequential-multi/RdPu.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-scale-chromatic/src/sequential-multi/YlGnBu.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-scale-chromatic/src/sequential-multi/YlGn.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-scale-chromatic/src/sequential-multi/YlOrBr.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-scale-chromatic/src/sequential-multi/YlOrRd.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-scale-chromatic/src/sequential-single/Blues.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-scale-chromatic/src/sequential-single/Greens.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-scale-chromatic/src/sequential-single/Greys.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-scale-chromatic/src/sequential-single/Purples.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-scale-chromatic/src/sequential-single/Reds.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-scale-chromatic/src/sequential-single/Oranges.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-scale-chromatic/src/sequential-multi/cubehelix.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-scale-chromatic/src/sequential-multi/rainbow.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-scale-chromatic/src/sequential-multi/sinebow.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-scale-chromatic/src/sequential-multi/viridis.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-shape/src/constant.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-shape/src/math.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-shape/src/arc.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-shape/src/curve/linear.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-shape/src/point.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-shape/src/line.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-shape/src/area.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-shape/src/descending.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-shape/src/identity.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-shape/src/pie.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-shape/src/curve/radial.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-shape/src/lineRadial.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-shape/src/areaRadial.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-shape/src/pointRadial.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-shape/src/array.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-shape/src/link/index.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-shape/src/symbol/circle.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-shape/src/symbol/cross.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-shape/src/symbol/diamond.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-shape/src/symbol/star.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-shape/src/symbol/square.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-shape/src/symbol/triangle.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-shape/src/symbol/wye.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-shape/src/symbol.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-shape/src/noop.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-shape/src/curve/basis.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-shape/src/curve/basisClosed.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-shape/src/curve/basisOpen.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-shape/src/curve/bundle.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-shape/src/curve/cardinal.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-shape/src/curve/cardinalClosed.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-shape/src/curve/cardinalOpen.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-shape/src/curve/catmullRom.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-shape/src/curve/catmullRomClosed.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-shape/src/curve/catmullRomOpen.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-shape/src/curve/linearClosed.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-shape/src/curve/monotone.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-shape/src/curve/natural.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-shape/src/curve/step.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-shape/src/offset/none.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-shape/src/order/none.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-shape/src/stack.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-shape/src/offset/expand.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-shape/src/offset/diverging.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-shape/src/offset/silhouette.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-shape/src/offset/wiggle.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-shape/src/order/appearance.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-shape/src/order/ascending.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-shape/src/order/descending.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-shape/src/order/insideOut.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-shape/src/order/reverse.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-voronoi/src/constant.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-voronoi/src/point.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-voronoi/src/RedBlackTree.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-voronoi/src/Edge.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-voronoi/src/Cell.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-voronoi/src/Circle.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-voronoi/src/Beach.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-voronoi/src/Diagram.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-voronoi/src/voronoi.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-zoom/src/constant.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-zoom/src/event.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-zoom/src/transform.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-zoom/src/noevent.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3-zoom/src/zoom.js\",\"/Users/toddfleeman/Desktop/development/webpack01/node_modules/d3/index.js\"],\"names\":[\"installedModules\",\"__webpack_require__\",\"moduleId\",\"exports\",\"module\",\"i\",\"l\",\"modules\",\"call\",\"m\",\"c\",\"d\",\"name\",\"getter\",\"o\",\"Object\",\"defineProperty\",\"enumerable\",\"get\",\"r\",\"Symbol\",\"toStringTag\",\"value\",\"t\",\"mode\",\"__esModule\",\"ns\",\"create\",\"key\",\"bind\",\"n\",\"object\",\"property\",\"prototype\",\"hasOwnProperty\",\"p\",\"s\",\"xhtml\",\"namespaces\",\"svg\",\"xlink\",\"xml\",\"xmlns\",\"namespace\",\"prefix\",\"indexOf\",\"slice\",\"space\",\"local\",\"creator\",\"fullname\",\"this\",\"ownerDocument\",\"createElementNS\",\"document\",\"uri\",\"namespaceURI\",\"documentElement\",\"createElement\",\"none\",\"src_selector\",\"selector\",\"querySelector\",\"empty\",\"selectorAll\",\"querySelectorAll\",\"matcher\",\"matches\",\"sparse\",\"update\",\"Array\",\"length\",\"EnterNode\",\"parent\",\"datum\",\"_next\",\"_parent\",\"__data__\",\"constructor\",\"appendChild\",\"child\",\"insertBefore\",\"next\",\"keyPrefix\",\"bindIndex\",\"group\",\"enter\",\"exit\",\"data\",\"node\",\"groupLength\",\"dataLength\",\"bindKey\",\"keyValue\",\"nodeByKeyValue\",\"keyValues\",\"ascending\",\"a\",\"b\",\"NaN\",\"src_window\",\"defaultView\",\"styleValue\",\"style\",\"getPropertyValue\",\"getComputedStyle\",\"classArray\",\"string\",\"trim\",\"split\",\"classList\",\"ClassList\",\"_node\",\"_names\",\"getAttribute\",\"classedAdd\",\"names\",\"list\",\"add\",\"classedRemove\",\"remove\",\"push\",\"setAttribute\",\"join\",\"splice\",\"contains\",\"textRemove\",\"textContent\",\"htmlRemove\",\"innerHTML\",\"raise\",\"nextSibling\",\"parentNode\",\"lower\",\"previousSibling\",\"firstChild\",\"constantNull\",\"removeChild\",\"selection_cloneShallow\",\"cloneNode\",\"selection_cloneDeep\",\"filterEvents\",\"on_event\",\"mouseenter\",\"mouseleave\",\"filterContextListener\",\"listener\",\"index\",\"contextListener\",\"event\",\"related\",\"relatedTarget\",\"compareDocumentPosition\",\"event1\",\"event0\",\"onRemove\",\"typename\",\"on\",\"__on\",\"j\",\"type\",\"removeEventListener\",\"capture\",\"onAdd\",\"wrap\",\"addEventListener\",\"customEvent\",\"that\",\"args\",\"sourceEvent\",\"apply\",\"dispatchEvent\",\"params\",\"window\",\"CustomEvent\",\"createEvent\",\"initEvent\",\"bubbles\",\"cancelable\",\"detail\",\"root\",\"Selection\",\"groups\",\"parents\",\"_groups\",\"_parents\",\"selection_selection\",\"select\",\"subgroups\",\"subnode\",\"subgroup\",\"selectAll\",\"filter\",\"match\",\"size\",\"each\",\"x\",\"enterGroup\",\"updateGroup\",\"previous\",\"i0\",\"i1\",\"_enter\",\"_exit\",\"map\",\"onenter\",\"onupdate\",\"onexit\",\"append\",\"merge\",\"order\",\"selection\",\"groups0\",\"groups1\",\"m0\",\"m1\",\"Math\",\"min\",\"merges\",\"group0\",\"group1\",\"sort\",\"compare\",\"compareNode\",\"sortgroups\",\"sortgroup\",\"callback\",\"arguments\",\"nodes\",\"attr\",\"getAttributeNS\",\"removeAttributeNS\",\"removeAttribute\",\"v\",\"setAttributeNS\",\"priority\",\"removeProperty\",\"setProperty\",\"classed\",\"text\",\"html\",\"insert\",\"before\",\"clone\",\"deep\",\"typenames\",\"parseTypenames\",\"dispatch\",\"src_selection\",\"src_select\",\"src_create\",\"nextId\",\"Local\",\"_\",\"toString\",\"id\",\"set\",\"source\",\"current\",\"point\",\"ownerSVGElement\",\"createSVGPoint\",\"clientX\",\"y\",\"clientY\",\"matrixTransform\",\"getScreenCTM\",\"inverse\",\"rect\",\"getBoundingClientRect\",\"left\",\"clientLeft\",\"top\",\"clientTop\",\"mouse\",\"changedTouches\",\"src_selectAll\",\"src_touch\",\"touches\",\"identifier\",\"touch\",\"src_touches\",\"points\",\"__webpack_exports__\",\"d3\",\"vis\",\"vis_group\",\"container_parent\",\"chart_container\",\"margins\",\"width\",\"offsetWidth\",\"height\",\"svgWidth\",\"svgHeight\",\"offsetHeight\",\"parseTime\",\"timeParse\",\"scaleTime\",\"range\",\"scaleLinear\",\"valueline\",\"line\",\"date\",\"close\",\"curve\",\"curveLinear\",\"csv\",\"then\",\"error\",\"forEach\",\"domain\",\"extent\",\"max\",\"attrs\",\"fill\",\"stroke\",\"stroke-width\",\"cx\",\"cy\",\"axisBottom\",\"axisLeft\",\"bisector\",\"f\",\"lo\",\"hi\",\"mid\",\"right\",\"ascendingBisect\",\"bisectRight\",\"bisectLeft\",\"bisect\",\"pairs\",\"array\",\"pair\",\"cross\",\"values0\",\"values1\",\"reduce\",\"value0\",\"n0\",\"n1\",\"values\",\"descending\",\"number\",\"variance\",\"valueof\",\"delta\",\"mean\",\"sum\",\"isNaN\",\"deviation\",\"sqrt\",\"src_extent\",\"array_array\",\"constant\",\"identity\",\"src_range\",\"start\",\"stop\",\"step\",\"ceil\",\"e10\",\"e5\",\"e2\",\"ticks\",\"count\",\"reverse\",\"tickIncrement\",\"isFinite\",\"floor\",\"power\",\"log\",\"LN10\",\"pow\",\"tickStep\",\"step0\",\"abs\",\"step1\",\"sturges\",\"LN2\",\"src_histogram\",\"threshold\",\"histogram\",\"xz\",\"x0\",\"x1\",\"tz\",\"isArray\",\"shift\",\"pop\",\"bin\",\"bins\",\"thresholds\",\"quantile\",\"freedmanDiaconis\",\"scott\",\"src_max\",\"src_mean\",\"median\",\"numbers\",\"src_merge\",\"arrays\",\"merged\",\"src_min\",\"permute\",\"indexes\",\"permutes\",\"scan\",\"xi\",\"xj\",\"shuffle\",\"random\",\"src_sum\",\"src_transpose\",\"matrix\",\"transpose_length\",\"transpose\",\"row\",\"zip\",\"array_slice\",\"src_identity\",\"axis_top\",\"axis_right\",\"axis_bottom\",\"axis_left\",\"epsilon\",\"translateX\",\"translateY\",\"entering\",\"__axis\",\"axis_axis\",\"orient\",\"scale\",\"tickArguments\",\"tickValues\",\"tickFormat\",\"tickSizeInner\",\"tickSizeOuter\",\"tickPadding\",\"k\",\"transform\",\"axis\",\"context\",\"format\",\"spacing\",\"range0\",\"range1\",\"position\",\"bandwidth\",\"offset\",\"round\",\"copy\",\"path\",\"tick\",\"tickExit\",\"tickEnter\",\"transition\",\"tickSize\",\"axisTop\",\"axisRight\",\"noop\",\"Error\",\"Dispatch\",\"concat\",\"types\",\"T\",\"src_dispatch\",\"nopropagation\",\"src\",\"stopImmediatePropagation\",\"noevent\",\"preventDefault\",\"nodrag\",\"view\",\"__noselect\",\"MozUserSelect\",\"yesdrag\",\"noclick\",\"setTimeout\",\"src_constant\",\"DragEvent\",\"target\",\"subject\",\"active\",\"dx\",\"dy\",\"defaultFilter\",\"button\",\"defaultContainer\",\"defaultSubject\",\"defaultTouchable\",\"src_drag\",\"mousedownx\",\"mousedowny\",\"mousemoving\",\"touchending\",\"container\",\"touchable\",\"gestures\",\"listeners\",\"clickDistance2\",\"drag\",\"mousedowned\",\"touchstarted\",\"touchmoved\",\"touchended\",\"gesture\",\"beforestart\",\"mousemoved\",\"mouseupped\",\"clearTimeout\",\"sublisteners\",\"p0\",\"clickDistance\",\"define\",\"factory\",\"extend\",\"definition\",\"Color\",\"reI\",\"reN\",\"reP\",\"reHex3\",\"reHex6\",\"reRgbInteger\",\"RegExp\",\"reRgbPercent\",\"reRgbaInteger\",\"reRgbaPercent\",\"reHslPercent\",\"reHslaPercent\",\"named\",\"aliceblue\",\"antiquewhite\",\"aqua\",\"aquamarine\",\"azure\",\"beige\",\"bisque\",\"black\",\"blanchedalmond\",\"blue\",\"blueviolet\",\"brown\",\"burlywood\",\"cadetblue\",\"chartreuse\",\"chocolate\",\"coral\",\"cornflowerblue\",\"cornsilk\",\"crimson\",\"cyan\",\"darkblue\",\"darkcyan\",\"darkgoldenrod\",\"darkgray\",\"darkgreen\",\"darkgrey\",\"darkkhaki\",\"darkmagenta\",\"darkolivegreen\",\"darkorange\",\"darkorchid\",\"darkred\",\"darksalmon\",\"darkseagreen\",\"darkslateblue\",\"darkslategray\",\"darkslategrey\",\"darkturquoise\",\"darkviolet\",\"deeppink\",\"deepskyblue\",\"dimgray\",\"dimgrey\",\"dodgerblue\",\"firebrick\",\"floralwhite\",\"forestgreen\",\"fuchsia\",\"gainsboro\",\"ghostwhite\",\"gold\",\"goldenrod\",\"gray\",\"green\",\"greenyellow\",\"grey\",\"honeydew\",\"hotpink\",\"indianred\",\"indigo\",\"ivory\",\"khaki\",\"lavender\",\"lavenderblush\",\"lawngreen\",\"lemonchiffon\",\"lightblue\",\"lightcoral\",\"lightcyan\",\"lightgoldenrodyellow\",\"lightgray\",\"lightgreen\",\"lightgrey\",\"lightpink\",\"lightsalmon\",\"lightseagreen\",\"lightskyblue\",\"lightslategray\",\"lightslategrey\",\"lightsteelblue\",\"lightyellow\",\"lime\",\"limegreen\",\"linen\",\"magenta\",\"maroon\",\"mediumaquamarine\",\"mediumblue\",\"mediumorchid\",\"mediumpurple\",\"mediumseagreen\",\"mediumslateblue\",\"mediumspringgreen\",\"mediumturquoise\",\"mediumvioletred\",\"midnightblue\",\"mintcream\",\"mistyrose\",\"moccasin\",\"navajowhite\",\"navy\",\"oldlace\",\"olive\",\"olivedrab\",\"orange\",\"orangered\",\"orchid\",\"palegoldenrod\",\"palegreen\",\"paleturquoise\",\"palevioletred\",\"papayawhip\",\"peachpuff\",\"peru\",\"pink\",\"plum\",\"powderblue\",\"purple\",\"rebeccapurple\",\"red\",\"rosybrown\",\"royalblue\",\"saddlebrown\",\"salmon\",\"sandybrown\",\"seagreen\",\"seashell\",\"sienna\",\"silver\",\"skyblue\",\"slateblue\",\"slategray\",\"slategrey\",\"snow\",\"springgreen\",\"steelblue\",\"tan\",\"teal\",\"thistle\",\"tomato\",\"turquoise\",\"violet\",\"wheat\",\"white\",\"whitesmoke\",\"yellow\",\"yellowgreen\",\"color_color\",\"toLowerCase\",\"exec\",\"Rgb\",\"parseInt\",\"rgbn\",\"rgba\",\"hsla\",\"g\",\"rgbConvert\",\"rgb\",\"opacity\",\"color_rgb\",\"hex\",\"h\",\"Hsl\",\"hsl\",\"hslConvert\",\"hsl2rgb\",\"m2\",\"displayable\",\"brighter\",\"darker\",\"deg2rad\",\"PI\",\"rad2deg\",\"Xn\",\"Yn\",\"Zn\",\"lab_t0\",\"lab_t1\",\"lab_t2\",\"t3\",\"labConvert\",\"Lab\",\"Hcl\",\"cos\",\"sin\",\"z\",\"rgb2lrgb\",\"xyz2lab\",\"lab\",\"lab2xyz\",\"lrgb2rgb\",\"hclConvert\",\"atan2\",\"lch\",\"hcl\",\"C\",\"cubehelix_D\",\"cubehelix_E\",\"ED\",\"EB\",\"BC_DA\",\"cubehelix_cubehelix\",\"Cubehelix\",\"bl\",\"cubehelixConvert\",\"basis\",\"t1\",\"v0\",\"v1\",\"v2\",\"v3\",\"t2\",\"cosh\",\"sinh\",\"src_basis\",\"basisClosed\",\"d3_interpolate_src_constant\",\"linear\",\"color_hue\",\"gamma\",\"nogamma\",\"exponential\",\"src_rgb\",\"rgbGamma\",\"color\",\"end\",\"rgbSpline\",\"spline\",\"colors\",\"rgbBasis\",\"rgbBasisClosed\",\"src_array\",\"nb\",\"na\",\"src_value\",\"src_date\",\"Date\",\"setTime\",\"src_number\",\"src_object\",\"reA\",\"reB\",\"cssNode\",\"cssRoot\",\"cssView\",\"svgNode\",\"src_string\",\"am\",\"bm\",\"bs\",\"bi\",\"lastIndex\",\"q\",\"one\",\"string_zero\",\"valueOf\",\"discrete\",\"src_hue\",\"src_round\",\"degrees\",\"decompose_identity\",\"rotate\",\"skewX\",\"scaleX\",\"scaleY\",\"decompose\",\"e\",\"atan\",\"interpolateTransform\",\"parse\",\"pxComma\",\"pxParen\",\"degParen\",\"xa\",\"ya\",\"xb\",\"yb\",\"translate\",\"interpolateTransformCss\",\"interpolateTransformSvg\",\"baseVal\",\"consolidate\",\"rho\",\"SQRT2\",\"zoom_cosh\",\"exp\",\"src_zoom\",\"p1\",\"S\",\"ux0\",\"uy0\",\"w0\",\"ux1\",\"uy1\",\"w1\",\"d2\",\"d1\",\"b0\",\"b1\",\"r0\",\"r1\",\"coshr0\",\"u\",\"zoom_sinh\",\"duration\",\"hsl_hsl\",\"hue\",\"src_hsl\",\"hslLong\",\"lab_lab\",\"hcl_hcl\",\"src_hcl\",\"hclLong\",\"src_cubehelix_cubehelix\",\"cubehelixGamma\",\"cubehelix\",\"src_cubehelix\",\"cubehelixLong\",\"piecewise_piecewise\",\"interpolate\",\"I\",\"taskHead\",\"taskTail\",\"quantize\",\"interpolator\",\"samples\",\"timer_frame\",\"timeout\",\"timer_interval\",\"pokeDelay\",\"clockLast\",\"clockNow\",\"clockSkew\",\"clock\",\"performance\",\"now\",\"setFrame\",\"requestAnimationFrame\",\"clearNow\",\"Timer\",\"_call\",\"_time\",\"timer\",\"delay\",\"time\",\"restart\",\"timerFlush\",\"wake\",\"t0\",\"Infinity\",\"sleep\",\"nap\",\"poke\",\"clearInterval\",\"setInterval\",\"TypeError\",\"src_timeout\",\"elapsed\",\"src_interval\",\"total\",\"emptyOn\",\"emptyTween\",\"CREATED\",\"SCHEDULED\",\"STARTING\",\"STARTED\",\"RUNNING\",\"ENDING\",\"ENDED\",\"transition_schedule\",\"timing\",\"schedules\",\"__transition\",\"self\",\"tween\",\"state\",\"ease\",\"schedule_init\",\"schedule\",\"schedule_get\",\"schedule_set\",\"interrupt\",\"tweenValue\",\"_id\",\"transition_interpolate\",\"styleRemove\",\"transition_id\",\"Transition\",\"_name\",\"src_transition_transition\",\"newId\",\"selection_prototype\",\"linear_linear\",\"quadIn\",\"quadOut\",\"quadInOut\",\"cubicIn\",\"cubicOut\",\"cubicInOut\",\"children\",\"inherit\",\"id0\",\"id1\",\"on0\",\"on1\",\"sit\",\"every\",\"on_start\",\"onFunction\",\"attrTween\",\"string00\",\"string10\",\"interpolate0\",\"string0\",\"string1\",\"value1\",\"_value\",\"attrInterpolateNS\",\"attrInterpolate\",\"styleTween\",\"styleNull\",\"styleFunction\",\"listener0\",\"undefined\",\"styleMaybeRemove\",\"styleConstant\",\"styleInterpolate\",\"textFunction\",\"textConstant\",\"tween0\",\"tween1\",\"easeConstant\",\"Promise\",\"resolve\",\"reject\",\"cancel\",\"polyIn\",\"custom\",\"exponent\",\"polyOut\",\"polyInOut\",\"pi\",\"halfPi\",\"sinIn\",\"sinOut\",\"sinInOut\",\"expIn\",\"expOut\",\"expInOut\",\"circleIn\",\"circleOut\",\"circleInOut\",\"bounce_b1\",\"b2\",\"b3\",\"b4\",\"b5\",\"b6\",\"b7\",\"b8\",\"b9\",\"bounce_b0\",\"bounceIn\",\"bounceOut\",\"bounceInOut\",\"backIn\",\"overshoot\",\"backOut\",\"backInOut\",\"tau\",\"elasticIn\",\"asin\",\"amplitude\",\"period\",\"elasticOut\",\"elasticInOut\",\"defaultTiming\",\"transition_inherit\",\"active_root\",\"src_active\",\"d3_brush_src_constant\",\"src_event\",\"noevent_nopropagation\",\"src_noevent\",\"MODE_DRAG\",\"MODE_SPACE\",\"MODE_HANDLE\",\"MODE_CENTER\",\"brush_X\",\"handles\",\"brush_type\",\"input\",\"output\",\"xy\",\"brush_Y\",\"XY\",\"cursors\",\"overlay\",\"w\",\"nw\",\"ne\",\"se\",\"sw\",\"flipX\",\"flipY\",\"signsX\",\"signsY\",\"brush_defaultFilter\",\"defaultExtent\",\"__brush\",\"brush_empty\",\"brushSelection\",\"dim\",\"brushX\",\"brush_brush\",\"brushY\",\"src_brush\",\"brush\",\"handleSize\",\"initialize\",\"handle\",\"redraw\",\"started\",\"emitter\",\"Emitter\",\"e0\",\"e1\",\"s0\",\"s1\",\"moving\",\"lockX\",\"lockY\",\"metaKey\",\"altKey\",\"signX\",\"signY\",\"W\",\"N\",\"E\",\"shifting\",\"shiftKey\",\"point0\",\"emit\",\"moved\",\"ended\",\"keyCode\",\"move\",\"point1\",\"selection0\",\"selection1\",\"starting\",\"math_pi\",\"math_halfPi\",\"math_tau\",\"math_max\",\"src_chord\",\"padAngle\",\"sortGroups\",\"sortSubgroups\",\"sortChords\",\"chord\",\"groupSums\",\"groupIndex\",\"subgroupIndex\",\"chords\",\"di\",\"dj\",\"a0\",\"a1\",\"subindex\",\"startAngle\",\"endAngle\",\"src_array_slice\",\"d3_chord_src_constant\",\"path_pi\",\"path_tau\",\"tauEpsilon\",\"Path\",\"_x0\",\"_y0\",\"_x1\",\"_y1\",\"path_path\",\"moveTo\",\"closePath\",\"lineTo\",\"quadraticCurveTo\",\"y1\",\"bezierCurveTo\",\"x2\",\"y2\",\"arcTo\",\"y0\",\"x21\",\"y21\",\"x01\",\"y01\",\"l01_2\",\"x20\",\"y20\",\"l21_2\",\"l20_2\",\"l21\",\"l01\",\"acos\",\"t01\",\"t21\",\"arc\",\"ccw\",\"cw\",\"da\",\"src_path\",\"defaultSource\",\"defaultTarget\",\"defaultRadius\",\"radius\",\"defaultStartAngle\",\"defaultEndAngle\",\"src_ribbon\",\"ribbon\",\"buffer\",\"argv\",\"sr\",\"sa0\",\"sa1\",\"sx0\",\"sy0\",\"tr\",\"ta0\",\"ta1\",\"Map\",\"map_map\",\"has\",\"clear\",\"keys\",\"entries\",\"src_map\",\"src_nest\",\"sortValues\",\"rollup\",\"nest\",\"sortKeys\",\"depth\",\"createResult\",\"setResult\",\"valuesByKey\",\"result\",\"createObject\",\"setObject\",\"createMap\",\"setMap\",\"sortKey\",\"Set\",\"proto\",\"set_set\",\"src_set\",\"src_keys\",\"src_values\",\"src_entries\",\"d3_contour_src_array_slice\",\"src_ascending\",\"src_area\",\"ring\",\"area\",\"d3_contour_src_constant\",\"hole\",\"ringContains\",\"yi\",\"pj\",\"yj\",\"segmentContains\",\"collinear\",\"src_noop\",\"cases\",\"src_contours\",\"smooth\",\"smoothLinear\",\"contours\",\"contour\",\"polygons\",\"holes\",\"fragmentByStart\",\"fragmentByEnd\",\"stitch\",\"startIndex\",\"endIndex\",\"unshift\",\"isorings\",\"polygon\",\"coordinates\",\"xt\",\"yt\",\"_0\",\"_1\",\"blurX\",\"blurY\",\"defaultX\",\"defaultY\",\"defaultWeight\",\"src_density\",\"weight\",\"density\",\"Float32Array\",\"wi\",\"geometry\",\"transformPolygon\",\"transformRing\",\"transformPoint\",\"resize\",\"cellSize\",\"EOL\",\"EOF\",\"QUOTE\",\"NEWLINE\",\"RETURN\",\"objectConverter\",\"columns\",\"Function\",\"JSON\",\"stringify\",\"inferColumns\",\"rows\",\"columnSet\",\"column\",\"pad\",\"formatDate\",\"year\",\"hours\",\"getUTCHours\",\"minutes\",\"getUTCMinutes\",\"seconds\",\"getUTCSeconds\",\"milliseconds\",\"getUTCMilliseconds\",\"getUTCFullYear\",\"getUTCMonth\",\"getUTCDate\",\"dsv\",\"delimiter\",\"reFormat\",\"DELIMITER\",\"charCodeAt\",\"parseRows\",\"eof\",\"eol\",\"token\",\"replace\",\"preformatBody\",\"formatValue\",\"formatRow\",\"test\",\"convert\",\"customConverter\",\"formatBody\",\"formatRows\",\"csvParse\",\"csvParseRows\",\"csvFormat\",\"csvFormatBody\",\"csvFormatRows\",\"tsv\",\"tsvParse\",\"tsvParseRows\",\"tsvFormat\",\"tsvFormatBody\",\"tsvFormatRows\",\"autoType\",\"responseBlob\",\"response\",\"ok\",\"status\",\"statusText\",\"blob\",\"init\",\"fetch\",\"responseArrayBuffer\",\"arrayBuffer\",\"src_buffer\",\"responseText\",\"src_text\",\"dsvParse\",\"dsv_dsv\",\"dsv_csv\",\"dsv_tsv\",\"src_image\",\"image\",\"Image\",\"onerror\",\"onload\",\"responseJson\",\"json\",\"parser\",\"DOMParser\",\"parseFromString\",\"src_center\",\"force\",\"sx\",\"sy\",\"d3_force_src_constant\",\"jiggle\",\"add_add\",\"tree\",\"xm\",\"ym\",\"xp\",\"yp\",\"bottom\",\"_root\",\"leaf\",\"_x\",\"_y\",\"src_quad\",\"x_defaultX\",\"y_defaultY\",\"quadtree\",\"Quadtree\",\"addAll\",\"leaf_copy\",\"treeProto\",\"collide_x\",\"vx\",\"collide_y\",\"vy\",\"cover\",\"yz\",\"visit\",\"find\",\"x3\",\"y3\",\"quads\",\"retainer\",\"removeAll\",\"visitAfter\",\"collide\",\"radii\",\"strength\",\"iterations\",\"ri\",\"ri2\",\"prepare\",\"quad\",\"rj\",\"link_index\",\"link_find\",\"nodeById\",\"nodeId\",\"src_link\",\"links\",\"strengths\",\"distances\",\"bias\",\"link\",\"distance\",\"alpha\",\"initializeStrength\",\"initializeDistance\",\"simulation_x\",\"simulation_y\",\"initialRadius\",\"initialAngle\",\"src_simulation\",\"simulation\",\"alphaMin\",\"alphaDecay\",\"alphaTarget\",\"velocityDecay\",\"forces\",\"stepper\",\"fx\",\"fy\",\"initializeNodes\",\"angle\",\"initializeForce\",\"closest\",\"manyBody\",\"distanceMin2\",\"distanceMax2\",\"theta2\",\"accumulate\",\"distanceMin\",\"distanceMax\",\"theta\",\"radial\",\"radiuses\",\"d3_force_src_x\",\"d3_force_src_y\",\"formatDecimal\",\"toExponential\",\"coefficient\",\"src_exponent\",\"re\",\"formatSpecifier\",\"specifier\",\"FormatSpecifier\",\"align\",\"sign\",\"symbol\",\"zero\",\"comma\",\"precision\",\"prefixExponent\",\"defaultLocale_locale\",\"defaultLocale_format\",\"defaultLocale_formatPrefix\",\"formatTrim\",\"out\",\"formatRounded\",\"formatTypes\",\"%\",\"toFixed\",\"toPrecision\",\"X\",\"toUpperCase\",\"d3_format_src_identity\",\"prefixes\",\"src_locale\",\"locale\",\"grouping\",\"thousands\",\"substring\",\"currency\",\"decimal\",\"numerals\",\"formatNumerals\",\"percent\",\"newFormat\",\"suffix\",\"formatType\",\"maybeSuffix\",\"valuePrefix\",\"valueSuffix\",\"valueNegative\",\"padding\",\"formatPrefix\",\"defaultLocale\",\"precisionFixed\",\"precisionPrefix\",\"precisionRound\",\"adder\",\"Adder\",\"reset\",\"adder_add\",\"temp\",\"bv\",\"av\",\"math_epsilon\",\"src_math_pi\",\"src_math_halfPi\",\"quarterPi\",\"src_math_tau\",\"math_degrees\",\"radians\",\"math_cos\",\"math_sin\",\"math_sign\",\"haversin\",\"noop_noop\",\"streamGeometry\",\"stream\",\"streamGeometryType\",\"streamObjectType\",\"Feature\",\"FeatureCollection\",\"features\",\"Sphere\",\"sphere\",\"Point\",\"MultiPoint\",\"LineString\",\"streamLine\",\"MultiLineString\",\"Polygon\",\"streamPolygon\",\"MultiPolygon\",\"GeometryCollection\",\"geometries\",\"closed\",\"coordinate\",\"lineStart\",\"lineEnd\",\"polygonStart\",\"polygonEnd\",\"area_lambda00\",\"phi00\",\"area_lambda0\",\"area_cosPhi0\",\"area_sinPhi0\",\"src_stream\",\"areaRingSum\",\"areaSum\",\"areaStream\",\"areaRingStart\",\"areaRingEnd\",\"areaRing\",\"areaPointFirst\",\"areaPoint\",\"lambda\",\"phi\",\"dLambda\",\"sdLambda\",\"adLambda\",\"cosPhi\",\"sinPhi\",\"d3_geo_src_area\",\"cartesian_spherical\",\"cartesian\",\"cartesian_cartesian\",\"spherical\",\"cartesianDot\",\"cartesianCross\",\"cartesianAddInPlace\",\"cartesianScale\",\"vector\",\"cartesianNormalizeInPlace\",\"bounds_lambda0\",\"bounds_phi0\",\"bounds_lambda1\",\"bounds_phi1\",\"bounds_lambda2\",\"bounds_lambda00\",\"bounds_phi00\",\"bounds_p0\",\"ranges\",\"bounds_range\",\"deltaSum\",\"boundsStream\",\"boundsPoint\",\"boundsLineStart\",\"boundsLineEnd\",\"boundsRingPoint\",\"boundsRingStart\",\"boundsRingEnd\",\"bounds_linePoint\",\"normal\",\"inflection\",\"phii\",\"lambdai\",\"antimeridian\",\"bounds_angle\",\"lambda0\",\"lambda1\",\"rangeCompare\",\"rangeContains\",\"W0\",\"W1\",\"centroid_X0\",\"centroid_Y0\",\"Z0\",\"centroid_X1\",\"centroid_Y1\",\"Z1\",\"X2\",\"Y2\",\"Z2\",\"centroid_lambda00\",\"centroid_phi00\",\"centroid_x0\",\"centroid_y0\",\"z0\",\"bounds\",\"feature\",\"deltaMax\",\"centroidStream\",\"centroidPoint\",\"centroidLineStart\",\"centroidLineEnd\",\"centroidRingStart\",\"centroidRingEnd\",\"centroidPointCartesian\",\"centroidLinePointFirst\",\"centroidLinePoint\",\"centroidRingPointFirst\",\"centroidRingPoint\",\"cz\",\"src_centroid\",\"d3_geo_src_constant\",\"compose\",\"invert\",\"rotationIdentity\",\"rotateRadians\",\"deltaLambda\",\"deltaPhi\",\"deltaGamma\",\"rotationLambda\",\"rotationPhiGamma\",\"forwardRotationLambda\",\"rotation\",\"cosDeltaPhi\",\"sinDeltaPhi\",\"cosDeltaGamma\",\"sinDeltaGamma\",\"src_rotation\",\"forward\",\"circleStream\",\"direction\",\"cosRadius\",\"sinRadius\",\"circleRadius\",\"src_circle\",\"center\",\"circle\",\"clip_buffer\",\"lines\",\"rejoin\",\"pointEqual\",\"Intersection\",\"other\",\"entry\",\"segments\",\"compareIntersection\",\"startInside\",\"clip\",\"segment\",\"rejoin_link\",\"isSubject\",\"polygonContains_sum\",\"polygonContains\",\"winding\",\"phi0\",\"sinPhi0\",\"cosPhi0\",\"sinPhi1\",\"cosPhi1\",\"phi1\",\"absDelta\",\"intersection\",\"phiArc\",\"src_clip\",\"pointVisible\",\"clipLine\",\"sink\",\"ringBuffer\",\"ringSink\",\"polygonStarted\",\"pointRing\",\"ringStart\",\"ringEnd\",\"clip_compareIntersection\",\"pointLine\",\"clean\",\"ringSegments\",\"validSegment\",\"clip_antimeridian\",\"sign0\",\"sign1\",\"sinLambda0Lambda1\",\"clipAntimeridianIntersect\",\"from\",\"to\",\"clip_circle\",\"cr\",\"smallRadius\",\"notHemisphere\",\"visible\",\"intersect\",\"two\",\"n2\",\"n2n2\",\"n1n2\",\"determinant\",\"c1\",\"c2\",\"n1xn2\",\"A\",\"uu\",\"polar\",\"q1\",\"code\",\"c0\",\"v00\",\"point2\",\"clip_line\",\"ax\",\"ay\",\"clipMax\",\"clipMin\",\"clipRectangle\",\"corner\",\"comparePoint\",\"ca\",\"cb\",\"x__\",\"y__\",\"v__\",\"x_\",\"y_\",\"v_\",\"first\",\"activeStream\",\"bufferStream\",\"clipStream\",\"linePoint\",\"polygonInside\",\"cleanInside\",\"length_lambda0\",\"length_sinPhi0\",\"length_cosPhi0\",\"clip_extent\",\"cache\",\"cacheStream\",\"lengthSum\",\"lengthStream\",\"lengthPointFirst\",\"lengthLineEnd\",\"lengthPoint\",\"cosDelta\",\"src_length\",\"distance_coordinates\",\"distance_object\",\"src_distance\",\"containsObjectType\",\"containsGeometry\",\"containsGeometryType\",\"containsPoint\",\"containsLine\",\"containsPolygon\",\"ab\",\"ringRadians\",\"pointRadians\",\"src_contains\",\"graticuleX\",\"graticuleY\",\"graticule_graticule\",\"X1\",\"X0\",\"Y1\",\"Y0\",\"Y\",\"DX\",\"DY\",\"graticule\",\"outline\",\"extentMajor\",\"extentMinor\",\"stepMajor\",\"stepMinor\",\"graticule10\",\"area_x00\",\"area_y00\",\"area_x0\",\"area_y0\",\"src_interpolate\",\"cy0\",\"cy1\",\"sy1\",\"kx0\",\"ky0\",\"kx1\",\"ky1\",\"B\",\"d3_geo_src_identity\",\"area_areaSum\",\"area_areaRingSum\",\"area_areaStream\",\"area_areaRingStart\",\"area_areaRingEnd\",\"area_areaPointFirst\",\"area_areaPoint\",\"path_area\",\"bounds_x0\",\"bounds_y0\",\"bounds_x1\",\"bounds_y1\",\"centroid_x00\",\"centroid_y00\",\"path_centroid_x0\",\"path_centroid_y0\",\"path_bounds\",\"path_centroid_X0\",\"path_centroid_Y0\",\"centroid_Z0\",\"path_centroid_X1\",\"path_centroid_Y1\",\"centroid_Z1\",\"centroid_X2\",\"centroid_Y2\",\"centroid_Z2\",\"centroid_centroidStream\",\"centroid_centroidPoint\",\"centroid_centroidLineStart\",\"centroid_centroidLineEnd\",\"centroid_centroidRingStart\",\"centroid_centroidRingEnd\",\"centroid\",\"centroidPointFirstLine\",\"centroidPointLine\",\"centroidPointFirstRing\",\"centroidPointRing\",\"path_centroid\",\"PathContext\",\"_context\",\"_radius\",\"pointRadius\",\"_line\",\"_point\",\"lengthRing\",\"measure_x00\",\"measure_y00\",\"measure_x0\",\"measure_y0\",\"measure_lengthSum\",\"measure_lengthStream\",\"measure_lengthPointFirst\",\"measure_lengthPoint\",\"measure\",\"PathString\",\"_string\",\"string_circle\",\"_circle\",\"d3_geo_src_path\",\"projection\",\"projectionStream\",\"contextStream\",\"src_transform\",\"methods\",\"transformer\",\"TransformStream\",\"fit\",\"fitBounds\",\"clipExtent\",\"fitExtent\",\"fitSize\",\"fitWidth\",\"fitHeight\",\"maxDepth\",\"cosMinDistance\",\"resample\",\"project\",\"delta2\",\"resampleLineTo\",\"phi2\",\"lambda2\",\"dx2\",\"dy2\",\"dz\",\"lambda00\",\"x00\",\"y00\",\"a00\",\"b00\",\"c00\",\"resampleStream\",\"ringPoint\",\"resample_resample\",\"resampleNone\",\"transformRadians\",\"scaleTranslateRotate\",\"cosAlpha\",\"sinAlpha\",\"ai\",\"ci\",\"fi\",\"projection_projection\",\"projectionMutator\",\"projectAt\",\"projectResample\",\"projectTransform\",\"projectRotateTransform\",\"preclip\",\"postclip\",\"recenter\",\"transformRotate\",\"clipAngle\",\"conicProjection\",\"parallels\",\"conicEqualAreaRaw\",\"cylindricalEqualAreaRaw\",\"r0y\",\"conicEqualArea\",\"albers\",\"projection_albersUsa\",\"lower48Point\",\"alaskaPoint\",\"hawaiiPoint\",\"lower48\",\"alaska\",\"hawaii\",\"pointStream\",\"albersUsa\",\"streams\",\"azimuthalRaw\",\"azimuthalInvert\",\"sc\",\"cc\",\"azimuthalEqualAreaRaw\",\"cxcy\",\"azimuthalEqualArea\",\"azimuthalEquidistantRaw\",\"azimuthalEquidistant\",\"mercatorRaw\",\"mercator\",\"mercatorProjection\",\"reclip\",\"tany\",\"conicConformalRaw\",\"conicConformal\",\"equirectangularRaw\",\"equirectangular\",\"conicEquidistantRaw\",\"gy\",\"nx\",\"conicEquidistant\",\"A1\",\"A2\",\"A3\",\"A4\",\"M\",\"equalEarthRaw\",\"l2\",\"l6\",\"equalEarth\",\"gnomonicRaw\",\"gnomonic\",\"identity_scaleTranslate\",\"kx\",\"ky\",\"tx\",\"ty\",\"projection_identity\",\"reflectX\",\"reflectY\",\"naturalEarth1Raw\",\"phi4\",\"naturalEarth1\",\"orthographicRaw\",\"orthographic\",\"stereographicRaw\",\"stereographic\",\"transverseMercatorRaw\",\"transverseMercator\",\"defaultSeparation\",\"meanXReduce\",\"maxYReduce\",\"cluster\",\"separation\",\"nodeSize\",\"previousNode\",\"eachAfter\",\"meanX\",\"maxY\",\"leafLeft\",\"leafRight\",\"count_count\",\"hierarchy\",\"childs\",\"Node\",\"valued\",\"defaultChildren\",\"eachBefore\",\"computeHeight\",\"copyData\",\"ancestor\",\"aNodes\",\"ancestors\",\"bNodes\",\"leastCommonAncestor\",\"descendants\",\"leaves\",\"d3_hierarchy_src_array_slice\",\"enclose\",\"circles\",\"array_shuffle\",\"enclosesWeak\",\"encloseBasis\",\"extendBasis\",\"enclosesWeakAll\",\"enclosesNot\",\"encloseBasis2\",\"encloseBasis3\",\"dr\",\"r2\",\"r21\",\"r3\",\"a2\",\"a3\",\"c3\",\"place\",\"intersects\",\"score\",\"siblings_Node\",\"packEnclose\",\"aa\",\"sj\",\"sk\",\"pack\",\"siblings\",\"required\",\"constantZero\",\"d3_hierarchy_src_constant\",\"pack_defaultRadius\",\"src_pack\",\"radiusLeaf\",\"packChildren\",\"translateChild\",\"treemap_round\",\"dice\",\"src_partition\",\"partition\",\"positionNode\",\"preroot\",\"ambiguous\",\"defaultId\",\"defaultParentId\",\"parentId\",\"src_stratify\",\"stratify\",\"nodeKey\",\"nodeByKey\",\"tree_defaultSeparation\",\"nextLeft\",\"nextRight\",\"moveSubtree\",\"wm\",\"wp\",\"change\",\"nextAncestor\",\"vim\",\"TreeNode\",\"src_tree\",\"treeRoot\",\"firstWalk\",\"secondWalk\",\"sizeNode\",\"executeShifts\",\"midpoint\",\"vip\",\"vop\",\"vom\",\"sip\",\"sop\",\"sim\",\"som\",\"apportion\",\"treemap_slice\",\"squarify_phi\",\"squarifyRatio\",\"ratio\",\"nodeValue\",\"sumValue\",\"minValue\",\"maxValue\",\"newRatio\",\"minRatio\",\"beta\",\"squarify\",\"src_treemap\",\"tile\",\"paddingStack\",\"paddingInner\",\"paddingTop\",\"paddingRight\",\"paddingBottom\",\"paddingLeft\",\"treemap\",\"paddingOuter\",\"binary\",\"sums\",\"valueOffset\",\"valueTarget\",\"valueLeft\",\"valueRight\",\"xk\",\"yk\",\"sliceDice\",\"treemap_resquarify\",\"resquarify\",\"_squarify\",\"d3_polygon_src_area\",\"d3_polygon_src_centroid\",\"src_cross\",\"lexicographicOrder\",\"computeUpperHullIndexes\",\"hull\",\"sortedPoints\",\"flippedPoints\",\"upperIndexes\",\"lowerIndexes\",\"skipLeft\",\"skipRight\",\"d3_polygon_src_contains\",\"inside\",\"d3_polygon_src_length\",\"perimeter\",\"src_defaultSource\",\"uniform\",\"sourceRandomUniform\",\"randomUniform\",\"src_normal\",\"sourceRandomNormal\",\"randomNormal\",\"mu\",\"sigma\",\"logNormal\",\"sourceRandomLogNormal\",\"randomLogNormal\",\"irwinHall\",\"sourceRandomIrwinHall\",\"randomIrwinHall\",\"bates\",\"sourceRandomBates\",\"randomBates\",\"src_exponential\",\"sourceRandomExponential\",\"randomExponential\",\"initRange\",\"initInterpolator\",\"d3_scale_src_array_array\",\"array_map\",\"d3_scale_src_array_slice\",\"implicit\",\"ordinal\",\"unknown\",\"band\",\"ordinalRange\",\"rescale\",\"rangeRound\",\"band_point\",\"pointish\",\"d3_scale_src_constant\",\"d3_scale_src_number\",\"unit\",\"continuous_identity\",\"normalize\",\"clamper\",\"bimap\",\"d0\",\"polymap\",\"clamp\",\"continuous_transformer\",\"untransform\",\"piecewise\",\"continuous\",\"src_tickFormat\",\"linearish\",\"nice\",\"src_linear_linear\",\"identity_identity\",\"interval\",\"transformLog\",\"transformExp\",\"transformLogn\",\"transformExpn\",\"pow10\",\"reflect\",\"loggish\",\"logs\",\"pows\",\"base\",\"log10\",\"log2\",\"logp\",\"powp\",\"log_log\",\"transformSymlog\",\"log1p\",\"transformSymexp\",\"expm1\",\"symlogish\",\"symlog\",\"transformPow\",\"transformSqrt\",\"transformSquare\",\"powish\",\"pow_pow\",\"pow_sqrt\",\"quantile_quantile\",\"invertExtent\",\"quantiles\",\"quantize_quantize\",\"threshold_threshold\",\"interval_t0\",\"interval_t1\",\"newInterval\",\"floori\",\"offseti\",\"field\",\"millisecond_millisecond\",\"src_millisecond\",\"durationMinute\",\"durationWeek\",\"second_second\",\"getMilliseconds\",\"src_second\",\"minute_minute\",\"getSeconds\",\"getMinutes\",\"src_minute\",\"hour_hour\",\"getHours\",\"src_hour\",\"day_day\",\"setHours\",\"setDate\",\"getDate\",\"getTimezoneOffset\",\"src_day\",\"days\",\"weekday\",\"getDay\",\"sunday\",\"monday\",\"tuesday\",\"wednesday\",\"thursday\",\"friday\",\"saturday\",\"sundays\",\"mondays\",\"tuesdays\",\"wednesdays\",\"thursdays\",\"fridays\",\"saturdays\",\"month_month\",\"setMonth\",\"getMonth\",\"getFullYear\",\"src_month\",\"months\",\"year_year\",\"setFullYear\",\"src_year\",\"years\",\"utcMinute\",\"setUTCSeconds\",\"src_utcMinute\",\"utcMinutes\",\"utcHour\",\"setUTCMinutes\",\"src_utcHour\",\"utcHours\",\"utcDay\",\"setUTCHours\",\"setUTCDate\",\"src_utcDay\",\"utcDays\",\"utcWeekday\",\"getUTCDay\",\"utcSunday\",\"utcMonday\",\"utcTuesday\",\"utcWednesday\",\"utcThursday\",\"utcFriday\",\"utcSaturday\",\"utcSundays\",\"utcMondays\",\"utcTuesdays\",\"utcWednesdays\",\"utcThursdays\",\"utcFridays\",\"utcSaturdays\",\"utcMonth\",\"setUTCMonth\",\"src_utcMonth\",\"utcMonths\",\"utcYear\",\"setUTCFullYear\",\"src_utcYear\",\"utcYears\",\"localDate\",\"H\",\"L\",\"utcDate\",\"UTC\",\"newYear\",\"formatLocale\",\"locale_dateTime\",\"dateTime\",\"locale_date\",\"locale_time\",\"locale_periods\",\"periods\",\"locale_weekdays\",\"locale_shortWeekdays\",\"shortDays\",\"locale_months\",\"locale_shortMonths\",\"shortMonths\",\"periodRe\",\"formatRe\",\"periodLookup\",\"formatLookup\",\"weekdayRe\",\"weekdayLookup\",\"shortWeekdayRe\",\"shortWeekdayLookup\",\"monthRe\",\"monthLookup\",\"shortMonthRe\",\"shortMonthLookup\",\"formats\",\"formatDayOfMonth\",\"formatMicroseconds\",\"formatHour24\",\"formatHour12\",\"formatDayOfYear\",\"formatMilliseconds\",\"formatMonthNumber\",\"formatMinutes\",\"Q\",\"formatUnixTimestamp\",\"formatUnixTimestampSeconds\",\"formatSeconds\",\"formatWeekdayNumberMonday\",\"U\",\"formatWeekNumberSunday\",\"V\",\"formatWeekNumberISO\",\"formatWeekdayNumberSunday\",\"formatWeekNumberMonday\",\"locale_formatYear\",\"formatFullYear\",\"Z\",\"formatZone\",\"formatLiteralPercent\",\"utcFormats\",\"formatUTCDayOfMonth\",\"formatUTCMicroseconds\",\"formatUTCHour24\",\"formatUTCHour12\",\"formatUTCDayOfYear\",\"formatUTCMilliseconds\",\"formatUTCMonthNumber\",\"formatUTCMinutes\",\"formatUTCSeconds\",\"formatUTCWeekdayNumberMonday\",\"formatUTCWeekNumberSunday\",\"formatUTCWeekNumberISO\",\"formatUTCWeekdayNumberSunday\",\"formatUTCWeekNumberMonday\",\"formatUTCYear\",\"formatUTCFullYear\",\"formatUTCZone\",\"parses\",\"parseSpecifier\",\"parseDayOfMonth\",\"parseMicroseconds\",\"parseHour24\",\"parseDayOfYear\",\"parseMilliseconds\",\"parseMonthNumber\",\"parseMinutes\",\"parseUnixTimestamp\",\"parseUnixTimestampSeconds\",\"parseSeconds\",\"parseWeekdayNumberMonday\",\"parseWeekNumberSunday\",\"parseWeekNumberISO\",\"parseWeekdayNumberSunday\",\"parseWeekNumberMonday\",\"parseYear\",\"parseFullYear\",\"parseZone\",\"parseLiteralPercent\",\"pads\",\"charAt\",\"newParse\",\"newDate\",\"week\",\"day\",\"utcFormat\",\"utcParse\",\"src_defaultLocale_locale\",\"timeFormat\",\"-\",\"0\",\"numberRe\",\"percentRe\",\"requoteRe\",\"locale_pad\",\"requote\",\"dow\",\"defaultLocale_defaultLocale\",\"isoFormat\",\"toISOString\",\"isoParse\",\"time_durationSecond\",\"time_durationMinute\",\"time_durationHour\",\"time_durationDay\",\"time_durationWeek\",\"durationMonth\",\"durationYear\",\"time_date\",\"time_number\",\"calendar\",\"month\",\"hour\",\"minute\",\"second\",\"millisecond\",\"formatMillisecond\",\"formatSecond\",\"formatMinute\",\"formatHour\",\"formatDay\",\"formatWeek\",\"formatMonth\",\"formatYear\",\"tickIntervals\",\"tickInterval\",\"src_time\",\"utcTime\",\"sequential_transformer\",\"k10\",\"sequential_copy\",\"sequential\",\"sequentialLog\",\"sequentialSymlog\",\"sequentialPow\",\"sequentialSqrt\",\"sequentialQuantile\",\"diverging_transformer\",\"k21\",\"diverging\",\"divergingLog\",\"divergingSymlog\",\"divergingPow\",\"divergingSqrt\",\"src_colors\",\"category10\",\"Accent\",\"Dark2\",\"Paired\",\"Pastel1\",\"Pastel2\",\"Set1\",\"Set2\",\"Set3\",\"ramp\",\"scheme\",\"BrBG_scheme\",\"BrBG\",\"PRGn_scheme\",\"PRGn\",\"PiYG_scheme\",\"PiYG\",\"PuOr_scheme\",\"PuOr\",\"RdBu_scheme\",\"RdBu\",\"RdGy_scheme\",\"RdGy\",\"RdYlBu_scheme\",\"RdYlBu\",\"RdYlGn_scheme\",\"RdYlGn\",\"Spectral_scheme\",\"Spectral\",\"BuGn_scheme\",\"BuGn\",\"BuPu_scheme\",\"BuPu\",\"GnBu_scheme\",\"GnBu\",\"OrRd_scheme\",\"OrRd\",\"PuBuGn_scheme\",\"PuBuGn\",\"PuBu_scheme\",\"PuBu\",\"PuRd_scheme\",\"PuRd\",\"RdPu_scheme\",\"RdPu\",\"YlGnBu_scheme\",\"YlGnBu\",\"YlGn_scheme\",\"YlGn\",\"YlOrBr_scheme\",\"YlOrBr\",\"YlOrRd_scheme\",\"YlOrRd\",\"Blues_scheme\",\"Blues\",\"Greens_scheme\",\"Greens\",\"Greys_scheme\",\"Greys\",\"Purples_scheme\",\"Purples\",\"Reds_scheme\",\"Reds\",\"Oranges_scheme\",\"Oranges\",\"sequential_multi_cubehelix\",\"warm\",\"cool\",\"rainbow_c\",\"rainbow\",\"ts\",\"sinebow_c\",\"pi_1_3\",\"pi_2_3\",\"sinebow\",\"viridis_ramp\",\"viridis\",\"magma\",\"inferno\",\"plasma\",\"d3_shape_src_constant\",\"math_abs\",\"math_atan2\",\"src_math_cos\",\"src_math_max\",\"math_min\",\"src_math_sin\",\"math_sqrt\",\"src_math_epsilon\",\"d3_shape_src_math_pi\",\"d3_shape_src_math_halfPi\",\"d3_shape_src_math_tau\",\"math_asin\",\"arcInnerRadius\",\"innerRadius\",\"arcOuterRadius\",\"outerRadius\",\"arcStartAngle\",\"arcEndAngle\",\"arcPadAngle\",\"cornerTangents\",\"rc\",\"ox\",\"oy\",\"x11\",\"y11\",\"x10\",\"y10\",\"D\",\"cx0\",\"cx1\",\"dx0\",\"dy0\",\"dx1\",\"dy1\",\"src_arc\",\"cornerRadius\",\"padRadius\",\"a01\",\"a11\",\"a10\",\"da0\",\"da1\",\"ap\",\"rp\",\"rc0\",\"rc1\",\"oc\",\"x32\",\"y32\",\"arc_intersect\",\"bx\",\"by\",\"kc\",\"lc\",\"Linear\",\"areaStart\",\"areaEnd\",\"curve_linear\",\"point_x\",\"point_y\",\"src_line\",\"defined\",\"defined0\",\"d3_shape_src_area\",\"x0z\",\"y0z\",\"arealine\",\"lineX0\",\"lineY0\",\"lineY1\",\"lineX1\",\"src_descending\",\"d3_shape_src_identity\",\"src_pie\",\"pie\",\"arcs\",\"pa\",\"curveRadialLinear\",\"curveRadial\",\"Radial\",\"_curve\",\"lineRadial\",\"src_lineRadial\",\"areaRadial\",\"lineStartAngle\",\"lineEndAngle\",\"lineInnerRadius\",\"lineOuterRadius\",\"pointRadial\",\"d3_shape_src_array_slice\",\"linkSource\",\"linkTarget\",\"link_link\",\"curveHorizontal\",\"curveVertical\",\"link_curveRadial\",\"p2\",\"p3\",\"linkHorizontal\",\"linkVertical\",\"linkRadial\",\"symbol_circle\",\"draw\",\"symbol_cross\",\"tan30\",\"tan30_2\",\"diamond\",\"kr\",\"star_kx\",\"star_ky\",\"star\",\"square\",\"sqrt3\",\"triangle\",\"wye_s\",\"wye_k\",\"wye_a\",\"wye\",\"symbols\",\"src_symbol\",\"d3_shape_src_noop\",\"basis_point\",\"Basis\",\"curve_basis\",\"BasisClosed\",\"_x2\",\"_x3\",\"_x4\",\"_y2\",\"_y3\",\"_y4\",\"curve_basisClosed\",\"BasisOpen\",\"basisOpen\",\"Bundle\",\"_basis\",\"_beta\",\"curve_bundle\",\"bundle\",\"cardinal_point\",\"_k\",\"Cardinal\",\"tension\",\"cardinal\",\"CardinalClosed\",\"_x5\",\"_y5\",\"cardinalClosed\",\"CardinalOpen\",\"cardinalOpen\",\"catmullRom_point\",\"_l01_a\",\"_l01_2a\",\"_l12_a\",\"_l12_2a\",\"_l23_a\",\"_l23_2a\",\"CatmullRom\",\"_alpha\",\"x23\",\"y23\",\"curve_catmullRom\",\"catmullRom\",\"CatmullRomClosed\",\"catmullRomClosed\",\"CatmullRomOpen\",\"catmullRomOpen\",\"LinearClosed\",\"linearClosed\",\"monotone_sign\",\"slope3\",\"h0\",\"h1\",\"slope2\",\"monotone_point\",\"MonotoneX\",\"MonotoneY\",\"ReflectContext\",\"monotoneX\",\"monotoneY\",\"Natural\",\"controlPoints\",\"_t0\",\"px\",\"py\",\"natural\",\"Step\",\"_t\",\"curve_step\",\"stepBefore\",\"stepAfter\",\"series\",\"order_none\",\"stackValue\",\"src_stack\",\"stack\",\"oz\",\"kz\",\"sz\",\"sij\",\"ki\",\"si\",\"expand\",\"offset_diverging\",\"yn\",\"silhouette\",\"wiggle\",\"s2\",\"sij0\",\"s3\",\"appearance\",\"peaks\",\"peak\",\"vi\",\"vj\",\"order_ascending\",\"ascending_sum\",\"order_descending\",\"insideOut\",\"tops\",\"bottoms\",\"order_reverse\",\"d3_voronoi_src_constant\",\"src_point_x\",\"src_point_y\",\"RedBlackTree\",\"RedBlackNode\",\"R\",\"P\",\"RedBlackRotateLeft\",\"RedBlackRotateRight\",\"RedBlackFirst\",\"after\",\"grandpa\",\"uncle\",\"sibling\",\"src_RedBlackTree\",\"createEdge\",\"edge\",\"Diagram_edges\",\"setEdgeEnd\",\"cells\",\"halfedges\",\"createBorderEdge\",\"vertex\",\"clipEdge\",\"connectEdge\",\"fm\",\"fb\",\"lx\",\"ly\",\"rx\",\"ry\",\"cellHalfedgeAngle\",\"cell\",\"site\",\"va\",\"vb\",\"cellHalfedgeStart\",\"cellHalfedgeEnd\",\"firstCircle\",\"circlePool\",\"Circle\",\"attachCircle\",\"lArc\",\"rArc\",\"lSite\",\"cSite\",\"rSite\",\"Diagram_epsilon2\",\"ha\",\"hc\",\"Diagram_circles\",\"detachCircle\",\"beachPool\",\"Beach\",\"createBeach\",\"beach\",\"detachBeach\",\"beaches\",\"removeBeach\",\"disappearing\",\"Diagram_epsilon\",\"iArc\",\"nArcs\",\"addBeach\",\"dxl\",\"dxr\",\"directrix\",\"leftBreakPoint\",\"rightBreakPoint\",\"createCell\",\"newArc\",\"hb\",\"rfocx\",\"rfocy\",\"pby2\",\"lfocx\",\"lfocy\",\"plby2\",\"hl\",\"aby2\",\"lexicographic\",\"Diagram\",\"sites\",\"sortCellHalfedges\",\"clipEdges\",\"iCell\",\"iHalfedge\",\"nHalfedges\",\"startX\",\"startY\",\"endX\",\"endY\",\"nCells\",\"dc\",\"v01\",\"v11\",\"v10\",\"clipCells\",\"edges\",\"triangles\",\"_found\",\"src_voronoi\",\"voronoi\",\"d3_zoom_src_constant\",\"ZoomEvent\",\"Transform\",\"applyX\",\"applyY\",\"location\",\"invertX\",\"invertY\",\"rescaleX\",\"rescaleY\",\"transform_identity\",\"transform_transform\",\"__zoom\",\"src_noevent_nopropagation\",\"d3_zoom_src_noevent\",\"zoom_defaultFilter\",\"zoom_defaultExtent\",\"SVGElement\",\"clientWidth\",\"clientHeight\",\"defaultTransform\",\"defaultWheelDelta\",\"deltaY\",\"deltaMode\",\"zoom_defaultTouchable\",\"defaultConstrain\",\"translateExtent\",\"d3_zoom_src_zoom\",\"touchstarting\",\"constrain\",\"wheelDelta\",\"scaleExtent\",\"touchDelay\",\"wheelDelay\",\"zoom\",\"wheeled\",\"dblclicked\",\"Gesture\",\"wheel\",\"k1\",\"touch0\",\"touch1\",\"l0\",\"l1\",\"dp\",\"dl\",\"collection\",\"scaleBy\",\"scaleTo\",\"translateBy\",\"translateTo\"],\"mappings\":\"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\",\"sourcesContent\":[\" \\t// The module cache\\n \\tvar installedModules = {};\\n\\n \\t// The require function\\n \\tfunction __webpack_require__(moduleId) {\\n\\n \\t\\t// Check if module is in cache\\n \\t\\tif(installedModules[moduleId]) {\\n \\t\\t\\treturn installedModules[moduleId].exports;\\n \\t\\t}\\n \\t\\t// Create a new module (and put it into the cache)\\n \\t\\tvar module = installedModules[moduleId] = {\\n \\t\\t\\ti: moduleId,\\n \\t\\t\\tl: false,\\n \\t\\t\\texports: {}\\n \\t\\t};\\n\\n \\t\\t// Execute the module function\\n \\t\\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\\n\\n \\t\\t// Flag the module as loaded\\n \\t\\tmodule.l = true;\\n\\n \\t\\t// Return the exports of the module\\n \\t\\treturn module.exports;\\n \\t}\\n\\n\\n \\t// expose the modules object (__webpack_modules__)\\n \\t__webpack_require__.m = modules;\\n\\n \\t// expose the module cache\\n \\t__webpack_require__.c = installedModules;\\n\\n \\t// define getter function for harmony exports\\n \\t__webpack_require__.d = function(exports, name, getter) {\\n \\t\\tif(!__webpack_require__.o(exports, name)) {\\n \\t\\t\\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\\n \\t\\t}\\n \\t};\\n\\n \\t// define __esModule on exports\\n \\t__webpack_require__.r = function(exports) {\\n \\t\\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\\n \\t\\t\\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\\n \\t\\t}\\n \\t\\tObject.defineProperty(exports, '__esModule', { value: true });\\n \\t};\\n\\n \\t// create a fake namespace object\\n \\t// mode & 1: value is a module id, require it\\n \\t// mode & 2: merge all properties of value into the ns\\n \\t// mode & 4: return value when already ns object\\n \\t// mode & 8|1: behave like require\\n \\t__webpack_require__.t = function(value, mode) {\\n \\t\\tif(mode & 1) value = __webpack_require__(value);\\n \\t\\tif(mode & 8) return value;\\n \\t\\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\\n \\t\\tvar ns = Object.create(null);\\n \\t\\t__webpack_require__.r(ns);\\n \\t\\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\\n \\t\\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\\n \\t\\treturn ns;\\n \\t};\\n\\n \\t// getDefaultExport function for compatibility with non-harmony modules\\n \\t__webpack_require__.n = function(module) {\\n \\t\\tvar getter = module && module.__esModule ?\\n \\t\\t\\tfunction getDefault() { return module['default']; } :\\n \\t\\t\\tfunction getModuleExports() { return module; };\\n \\t\\t__webpack_require__.d(getter, 'a', getter);\\n \\t\\treturn getter;\\n \\t};\\n\\n \\t// Object.prototype.hasOwnProperty.call\\n \\t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\\n\\n \\t// __webpack_public_path__\\n \\t__webpack_require__.p = \\\"\\\";\\n\\n\\n \\t// Load entry module and return exports\\n \\treturn __webpack_require__(__webpack_require__.s = 6);\\n\",\"export var xhtml = \\\"http://www.w3.org/1999/xhtml\\\";\\n\\nexport default {\\n  svg: \\\"http://www.w3.org/2000/svg\\\",\\n  xhtml: xhtml,\\n  xlink: \\\"http://www.w3.org/1999/xlink\\\",\\n  xml: \\\"http://www.w3.org/XML/1998/namespace\\\",\\n  xmlns: \\\"http://www.w3.org/2000/xmlns/\\\"\\n};\\n\",\"import namespaces from \\\"./namespaces\\\";\\n\\nexport default function(name) {\\n  var prefix = name += \\\"\\\", i = prefix.indexOf(\\\":\\\");\\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \\\"xmlns\\\") name = name.slice(i + 1);\\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\\n}\\n\",\"import namespace from \\\"./namespace\\\";\\nimport {xhtml} from \\\"./namespaces\\\";\\n\\nfunction creatorInherit(name) {\\n  return function() {\\n    var document = this.ownerDocument,\\n        uri = this.namespaceURI;\\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\\n        ? document.createElement(name)\\n        : document.createElementNS(uri, name);\\n  };\\n}\\n\\nfunction creatorFixed(fullname) {\\n  return function() {\\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\\n  };\\n}\\n\\nexport default function(name) {\\n  var fullname = namespace(name);\\n  return (fullname.local\\n      ? creatorFixed\\n      : creatorInherit)(fullname);\\n}\\n\",\"function none() {}\\n\\nexport default function(selector) {\\n  return selector == null ? none : function() {\\n    return this.querySelector(selector);\\n  };\\n}\\n\",\"function empty() {\\n  return [];\\n}\\n\\nexport default function(selector) {\\n  return selector == null ? empty : function() {\\n    return this.querySelectorAll(selector);\\n  };\\n}\\n\",\"export default function(selector) {\\n  return function() {\\n    return this.matches(selector);\\n  };\\n}\\n\",\"export default function(update) {\\n  return new Array(update.length);\\n}\\n\",\"import sparse from \\\"./sparse\\\";\\nimport {Selection} from \\\"./index\\\";\\n\\nexport default function() {\\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\\n}\\n\\nexport function EnterNode(parent, datum) {\\n  this.ownerDocument = parent.ownerDocument;\\n  this.namespaceURI = parent.namespaceURI;\\n  this._next = null;\\n  this._parent = parent;\\n  this.__data__ = datum;\\n}\\n\\nEnterNode.prototype = {\\n  constructor: EnterNode,\\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\\n};\\n\",\"export default function(x) {\\n  return function() {\\n    return x;\\n  };\\n}\\n\",\"import {Selection} from \\\"./index\\\";\\nimport {EnterNode} from \\\"./enter\\\";\\nimport constant from \\\"../constant\\\";\\n\\nvar keyPrefix = \\\"$\\\"; // Protect against keys like “__proto__”.\\n\\nfunction bindIndex(parent, group, enter, update, exit, data) {\\n  var i = 0,\\n      node,\\n      groupLength = group.length,\\n      dataLength = data.length;\\n\\n  // Put any non-null nodes that fit into update.\\n  // Put any null nodes into enter.\\n  // Put any remaining data into enter.\\n  for (; i < dataLength; ++i) {\\n    if (node = group[i]) {\\n      node.__data__ = data[i];\\n      update[i] = node;\\n    } else {\\n      enter[i] = new EnterNode(parent, data[i]);\\n    }\\n  }\\n\\n  // Put any non-null nodes that don’t fit into exit.\\n  for (; i < groupLength; ++i) {\\n    if (node = group[i]) {\\n      exit[i] = node;\\n    }\\n  }\\n}\\n\\nfunction bindKey(parent, group, enter, update, exit, data, key) {\\n  var i,\\n      node,\\n      nodeByKeyValue = {},\\n      groupLength = group.length,\\n      dataLength = data.length,\\n      keyValues = new Array(groupLength),\\n      keyValue;\\n\\n  // Compute the key for each node.\\n  // If multiple nodes have the same key, the duplicates are added to exit.\\n  for (i = 0; i < groupLength; ++i) {\\n    if (node = group[i]) {\\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\\n      if (keyValue in nodeByKeyValue) {\\n        exit[i] = node;\\n      } else {\\n        nodeByKeyValue[keyValue] = node;\\n      }\\n    }\\n  }\\n\\n  // Compute the key for each datum.\\n  // If there a node associated with this key, join and add it to update.\\n  // If there is not (or the key is a duplicate), add it to enter.\\n  for (i = 0; i < dataLength; ++i) {\\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\\n    if (node = nodeByKeyValue[keyValue]) {\\n      update[i] = node;\\n      node.__data__ = data[i];\\n      nodeByKeyValue[keyValue] = null;\\n    } else {\\n      enter[i] = new EnterNode(parent, data[i]);\\n    }\\n  }\\n\\n  // Add any remaining nodes that were not bound to data to exit.\\n  for (i = 0; i < groupLength; ++i) {\\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\\n      exit[i] = node;\\n    }\\n  }\\n}\\n\\nexport default function(value, key) {\\n  if (!value) {\\n    data = new Array(this.size()), j = -1;\\n    this.each(function(d) { data[++j] = d; });\\n    return data;\\n  }\\n\\n  var bind = key ? bindKey : bindIndex,\\n      parents = this._parents,\\n      groups = this._groups;\\n\\n  if (typeof value !== \\\"function\\\") value = constant(value);\\n\\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\\n    var parent = parents[j],\\n        group = groups[j],\\n        groupLength = group.length,\\n        data = value.call(parent, parent && parent.__data__, j, parents),\\n        dataLength = data.length,\\n        enterGroup = enter[j] = new Array(dataLength),\\n        updateGroup = update[j] = new Array(dataLength),\\n        exitGroup = exit[j] = new Array(groupLength);\\n\\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\\n\\n    // Now connect the enter nodes to their following update node, such that\\n    // appendChild can insert the materialized enter node before this node,\\n    // rather than at the end of the parent node.\\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\\n      if (previous = enterGroup[i0]) {\\n        if (i0 >= i1) i1 = i0 + 1;\\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\\n        previous._next = next || null;\\n      }\\n    }\\n  }\\n\\n  update = new Selection(update, parents);\\n  update._enter = enter;\\n  update._exit = exit;\\n  return update;\\n}\\n\",\"import {Selection} from \\\"./index\\\";\\n\\nexport default function(compare) {\\n  if (!compare) compare = ascending;\\n\\n  function compareNode(a, b) {\\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\\n  }\\n\\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\\n      if (node = group[i]) {\\n        sortgroup[i] = node;\\n      }\\n    }\\n    sortgroup.sort(compareNode);\\n  }\\n\\n  return new Selection(sortgroups, this._parents).order();\\n}\\n\\nfunction ascending(a, b) {\\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\\n}\\n\",\"import namespace from \\\"../namespace\\\";\\n\\nfunction attrRemove(name) {\\n  return function() {\\n    this.removeAttribute(name);\\n  };\\n}\\n\\nfunction attrRemoveNS(fullname) {\\n  return function() {\\n    this.removeAttributeNS(fullname.space, fullname.local);\\n  };\\n}\\n\\nfunction attrConstant(name, value) {\\n  return function() {\\n    this.setAttribute(name, value);\\n  };\\n}\\n\\nfunction attrConstantNS(fullname, value) {\\n  return function() {\\n    this.setAttributeNS(fullname.space, fullname.local, value);\\n  };\\n}\\n\\nfunction attrFunction(name, value) {\\n  return function() {\\n    var v = value.apply(this, arguments);\\n    if (v == null) this.removeAttribute(name);\\n    else this.setAttribute(name, v);\\n  };\\n}\\n\\nfunction attrFunctionNS(fullname, value) {\\n  return function() {\\n    var v = value.apply(this, arguments);\\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\\n    else this.setAttributeNS(fullname.space, fullname.local, v);\\n  };\\n}\\n\\nexport default function(name, value) {\\n  var fullname = namespace(name);\\n\\n  if (arguments.length < 2) {\\n    var node = this.node();\\n    return fullname.local\\n        ? node.getAttributeNS(fullname.space, fullname.local)\\n        : node.getAttribute(fullname);\\n  }\\n\\n  return this.each((value == null\\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \\\"function\\\"\\n      ? (fullname.local ? attrFunctionNS : attrFunction)\\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\\n}\\n\",\"export default function(node) {\\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\\n      || (node.document && node) // node is a Window\\n      || node.defaultView; // node is a Document\\n}\\n\",\"import defaultView from \\\"../window\\\";\\n\\nfunction styleRemove(name) {\\n  return function() {\\n    this.style.removeProperty(name);\\n  };\\n}\\n\\nfunction styleConstant(name, value, priority) {\\n  return function() {\\n    this.style.setProperty(name, value, priority);\\n  };\\n}\\n\\nfunction styleFunction(name, value, priority) {\\n  return function() {\\n    var v = value.apply(this, arguments);\\n    if (v == null) this.style.removeProperty(name);\\n    else this.style.setProperty(name, v, priority);\\n  };\\n}\\n\\nexport default function(name, value, priority) {\\n  return arguments.length > 1\\n      ? this.each((value == null\\n            ? styleRemove : typeof value === \\\"function\\\"\\n            ? styleFunction\\n            : styleConstant)(name, value, priority == null ? \\\"\\\" : priority))\\n      : styleValue(this.node(), name);\\n}\\n\\nexport function styleValue(node, name) {\\n  return node.style.getPropertyValue(name)\\n      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\\n}\\n\",\"function classArray(string) {\\n  return string.trim().split(/^|\\\\s+/);\\n}\\n\\nfunction classList(node) {\\n  return node.classList || new ClassList(node);\\n}\\n\\nfunction ClassList(node) {\\n  this._node = node;\\n  this._names = classArray(node.getAttribute(\\\"class\\\") || \\\"\\\");\\n}\\n\\nClassList.prototype = {\\n  add: function(name) {\\n    var i = this._names.indexOf(name);\\n    if (i < 0) {\\n      this._names.push(name);\\n      this._node.setAttribute(\\\"class\\\", this._names.join(\\\" \\\"));\\n    }\\n  },\\n  remove: function(name) {\\n    var i = this._names.indexOf(name);\\n    if (i >= 0) {\\n      this._names.splice(i, 1);\\n      this._node.setAttribute(\\\"class\\\", this._names.join(\\\" \\\"));\\n    }\\n  },\\n  contains: function(name) {\\n    return this._names.indexOf(name) >= 0;\\n  }\\n};\\n\\nfunction classedAdd(node, names) {\\n  var list = classList(node), i = -1, n = names.length;\\n  while (++i < n) list.add(names[i]);\\n}\\n\\nfunction classedRemove(node, names) {\\n  var list = classList(node), i = -1, n = names.length;\\n  while (++i < n) list.remove(names[i]);\\n}\\n\\nfunction classedTrue(names) {\\n  return function() {\\n    classedAdd(this, names);\\n  };\\n}\\n\\nfunction classedFalse(names) {\\n  return function() {\\n    classedRemove(this, names);\\n  };\\n}\\n\\nfunction classedFunction(names, value) {\\n  return function() {\\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\\n  };\\n}\\n\\nexport default function(name, value) {\\n  var names = classArray(name + \\\"\\\");\\n\\n  if (arguments.length < 2) {\\n    var list = classList(this.node()), i = -1, n = names.length;\\n    while (++i < n) if (!list.contains(names[i])) return false;\\n    return true;\\n  }\\n\\n  return this.each((typeof value === \\\"function\\\"\\n      ? classedFunction : value\\n      ? classedTrue\\n      : classedFalse)(names, value));\\n}\\n\",\"function textRemove() {\\n  this.textContent = \\\"\\\";\\n}\\n\\nfunction textConstant(value) {\\n  return function() {\\n    this.textContent = value;\\n  };\\n}\\n\\nfunction textFunction(value) {\\n  return function() {\\n    var v = value.apply(this, arguments);\\n    this.textContent = v == null ? \\\"\\\" : v;\\n  };\\n}\\n\\nexport default function(value) {\\n  return arguments.length\\n      ? this.each(value == null\\n          ? textRemove : (typeof value === \\\"function\\\"\\n          ? textFunction\\n          : textConstant)(value))\\n      : this.node().textContent;\\n}\\n\",\"function htmlRemove() {\\n  this.innerHTML = \\\"\\\";\\n}\\n\\nfunction htmlConstant(value) {\\n  return function() {\\n    this.innerHTML = value;\\n  };\\n}\\n\\nfunction htmlFunction(value) {\\n  return function() {\\n    var v = value.apply(this, arguments);\\n    this.innerHTML = v == null ? \\\"\\\" : v;\\n  };\\n}\\n\\nexport default function(value) {\\n  return arguments.length\\n      ? this.each(value == null\\n          ? htmlRemove : (typeof value === \\\"function\\\"\\n          ? htmlFunction\\n          : htmlConstant)(value))\\n      : this.node().innerHTML;\\n}\\n\",\"function raise() {\\n  if (this.nextSibling) this.parentNode.appendChild(this);\\n}\\n\\nexport default function() {\\n  return this.each(raise);\\n}\\n\",\"function lower() {\\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\\n}\\n\\nexport default function() {\\n  return this.each(lower);\\n}\\n\",\"import creator from \\\"../creator\\\";\\nimport selector from \\\"../selector\\\";\\n\\nfunction constantNull() {\\n  return null;\\n}\\n\\nexport default function(name, before) {\\n  var create = typeof name === \\\"function\\\" ? name : creator(name),\\n      select = before == null ? constantNull : typeof before === \\\"function\\\" ? before : selector(before);\\n  return this.select(function() {\\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\\n  });\\n}\\n\",\"function remove() {\\n  var parent = this.parentNode;\\n  if (parent) parent.removeChild(this);\\n}\\n\\nexport default function() {\\n  return this.each(remove);\\n}\\n\",\"function selection_cloneShallow() {\\n  return this.parentNode.insertBefore(this.cloneNode(false), this.nextSibling);\\n}\\n\\nfunction selection_cloneDeep() {\\n  return this.parentNode.insertBefore(this.cloneNode(true), this.nextSibling);\\n}\\n\\nexport default function(deep) {\\n  return this.select(deep ? selection_cloneDeep : selection_cloneShallow);\\n}\\n\",\"var filterEvents = {};\\n\\nexport var event = null;\\n\\nif (typeof document !== \\\"undefined\\\") {\\n  var element = document.documentElement;\\n  if (!(\\\"onmouseenter\\\" in element)) {\\n    filterEvents = {mouseenter: \\\"mouseover\\\", mouseleave: \\\"mouseout\\\"};\\n  }\\n}\\n\\nfunction filterContextListener(listener, index, group) {\\n  listener = contextListener(listener, index, group);\\n  return function(event) {\\n    var related = event.relatedTarget;\\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\\n      listener.call(this, event);\\n    }\\n  };\\n}\\n\\nfunction contextListener(listener, index, group) {\\n  return function(event1) {\\n    var event0 = event; // Events can be reentrant (e.g., focus).\\n    event = event1;\\n    try {\\n      listener.call(this, this.__data__, index, group);\\n    } finally {\\n      event = event0;\\n    }\\n  };\\n}\\n\\nfunction parseTypenames(typenames) {\\n  return typenames.trim().split(/^|\\\\s+/).map(function(t) {\\n    var name = \\\"\\\", i = t.indexOf(\\\".\\\");\\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\\n    return {type: t, name: name};\\n  });\\n}\\n\\nfunction onRemove(typename) {\\n  return function() {\\n    var on = this.__on;\\n    if (!on) return;\\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\\n        this.removeEventListener(o.type, o.listener, o.capture);\\n      } else {\\n        on[++i] = o;\\n      }\\n    }\\n    if (++i) on.length = i;\\n    else delete this.__on;\\n  };\\n}\\n\\nfunction onAdd(typename, value, capture) {\\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\\n  return function(d, i, group) {\\n    var on = this.__on, o, listener = wrap(value, i, group);\\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\\n        this.removeEventListener(o.type, o.listener, o.capture);\\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\\n        o.value = value;\\n        return;\\n      }\\n    }\\n    this.addEventListener(typename.type, listener, capture);\\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\\n    if (!on) this.__on = [o];\\n    else on.push(o);\\n  };\\n}\\n\\nexport default function(typename, value, capture) {\\n  var typenames = parseTypenames(typename + \\\"\\\"), i, n = typenames.length, t;\\n\\n  if (arguments.length < 2) {\\n    var on = this.node().__on;\\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\\n      for (i = 0, o = on[j]; i < n; ++i) {\\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\\n          return o.value;\\n        }\\n      }\\n    }\\n    return;\\n  }\\n\\n  on = value ? onAdd : onRemove;\\n  if (capture == null) capture = false;\\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\\n  return this;\\n}\\n\\nexport function customEvent(event1, listener, that, args) {\\n  var event0 = event;\\n  event1.sourceEvent = event;\\n  event = event1;\\n  try {\\n    return listener.apply(that, args);\\n  } finally {\\n    event = event0;\\n  }\\n}\\n\",\"import defaultView from \\\"../window\\\";\\n\\nfunction dispatchEvent(node, type, params) {\\n  var window = defaultView(node),\\n      event = window.CustomEvent;\\n\\n  if (typeof event === \\\"function\\\") {\\n    event = new event(type, params);\\n  } else {\\n    event = window.document.createEvent(\\\"Event\\\");\\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\\n    else event.initEvent(type, false, false);\\n  }\\n\\n  node.dispatchEvent(event);\\n}\\n\\nfunction dispatchConstant(type, params) {\\n  return function() {\\n    return dispatchEvent(this, type, params);\\n  };\\n}\\n\\nfunction dispatchFunction(type, params) {\\n  return function() {\\n    return dispatchEvent(this, type, params.apply(this, arguments));\\n  };\\n}\\n\\nexport default function(type, params) {\\n  return this.each((typeof params === \\\"function\\\"\\n      ? dispatchFunction\\n      : dispatchConstant)(type, params));\\n}\\n\",\"import selection_select from \\\"./select\\\";\\nimport selection_selectAll from \\\"./selectAll\\\";\\nimport selection_filter from \\\"./filter\\\";\\nimport selection_data from \\\"./data\\\";\\nimport selection_enter from \\\"./enter\\\";\\nimport selection_exit from \\\"./exit\\\";\\nimport selection_join from \\\"./join\\\";\\nimport selection_merge from \\\"./merge\\\";\\nimport selection_order from \\\"./order\\\";\\nimport selection_sort from \\\"./sort\\\";\\nimport selection_call from \\\"./call\\\";\\nimport selection_nodes from \\\"./nodes\\\";\\nimport selection_node from \\\"./node\\\";\\nimport selection_size from \\\"./size\\\";\\nimport selection_empty from \\\"./empty\\\";\\nimport selection_each from \\\"./each\\\";\\nimport selection_attr from \\\"./attr\\\";\\nimport selection_style from \\\"./style\\\";\\nimport selection_property from \\\"./property\\\";\\nimport selection_classed from \\\"./classed\\\";\\nimport selection_text from \\\"./text\\\";\\nimport selection_html from \\\"./html\\\";\\nimport selection_raise from \\\"./raise\\\";\\nimport selection_lower from \\\"./lower\\\";\\nimport selection_append from \\\"./append\\\";\\nimport selection_insert from \\\"./insert\\\";\\nimport selection_remove from \\\"./remove\\\";\\nimport selection_clone from \\\"./clone\\\";\\nimport selection_datum from \\\"./datum\\\";\\nimport selection_on from \\\"./on\\\";\\nimport selection_dispatch from \\\"./dispatch\\\";\\n\\nexport var root = [null];\\n\\nexport function Selection(groups, parents) {\\n  this._groups = groups;\\n  this._parents = parents;\\n}\\n\\nfunction selection() {\\n  return new Selection([[document.documentElement]], root);\\n}\\n\\nSelection.prototype = selection.prototype = {\\n  constructor: Selection,\\n  select: selection_select,\\n  selectAll: selection_selectAll,\\n  filter: selection_filter,\\n  data: selection_data,\\n  enter: selection_enter,\\n  exit: selection_exit,\\n  join: selection_join,\\n  merge: selection_merge,\\n  order: selection_order,\\n  sort: selection_sort,\\n  call: selection_call,\\n  nodes: selection_nodes,\\n  node: selection_node,\\n  size: selection_size,\\n  empty: selection_empty,\\n  each: selection_each,\\n  attr: selection_attr,\\n  style: selection_style,\\n  property: selection_property,\\n  classed: selection_classed,\\n  text: selection_text,\\n  html: selection_html,\\n  raise: selection_raise,\\n  lower: selection_lower,\\n  append: selection_append,\\n  insert: selection_insert,\\n  remove: selection_remove,\\n  clone: selection_clone,\\n  datum: selection_datum,\\n  on: selection_on,\\n  dispatch: selection_dispatch\\n};\\n\\nexport default selection;\\n\",\"import {Selection} from \\\"./index\\\";\\nimport selector from \\\"../selector\\\";\\n\\nexport default function(select) {\\n  if (typeof select !== \\\"function\\\") select = selector(select);\\n\\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\\n        if (\\\"__data__\\\" in node) subnode.__data__ = node.__data__;\\n        subgroup[i] = subnode;\\n      }\\n    }\\n  }\\n\\n  return new Selection(subgroups, this._parents);\\n}\\n\",\"import {Selection} from \\\"./index\\\";\\nimport selectorAll from \\\"../selectorAll\\\";\\n\\nexport default function(select) {\\n  if (typeof select !== \\\"function\\\") select = selectorAll(select);\\n\\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\\n      if (node = group[i]) {\\n        subgroups.push(select.call(node, node.__data__, i, group));\\n        parents.push(node);\\n      }\\n    }\\n  }\\n\\n  return new Selection(subgroups, parents);\\n}\\n\",\"import {Selection} from \\\"./index\\\";\\nimport matcher from \\\"../matcher\\\";\\n\\nexport default function(match) {\\n  if (typeof match !== \\\"function\\\") match = matcher(match);\\n\\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\\n        subgroup.push(node);\\n      }\\n    }\\n  }\\n\\n  return new Selection(subgroups, this._parents);\\n}\\n\",\"import sparse from \\\"./sparse\\\";\\nimport {Selection} from \\\"./index\\\";\\n\\nexport default function() {\\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\\n}\\n\",\"export default function(onenter, onupdate, onexit) {\\n  var enter = this.enter(), update = this, exit = this.exit();\\n  enter = typeof onenter === \\\"function\\\" ? onenter(enter) : enter.append(onenter + \\\"\\\");\\n  if (onupdate != null) update = onupdate(update);\\n  if (onexit == null) exit.remove(); else onexit(exit);\\n  return enter && update ? enter.merge(update).order() : update;\\n}\\n\",\"import {Selection} from \\\"./index\\\";\\n\\nexport default function(selection) {\\n\\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\\n      if (node = group0[i] || group1[i]) {\\n        merge[i] = node;\\n      }\\n    }\\n  }\\n\\n  for (; j < m0; ++j) {\\n    merges[j] = groups0[j];\\n  }\\n\\n  return new Selection(merges, this._parents);\\n}\\n\",\"export default function() {\\n\\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\\n      if (node = group[i]) {\\n        if (next && node.compareDocumentPosition(next) ^ 4) next.parentNode.insertBefore(node, next);\\n        next = node;\\n      }\\n    }\\n  }\\n\\n  return this;\\n}\\n\",\"export default function() {\\n  var callback = arguments[0];\\n  arguments[0] = this;\\n  callback.apply(null, arguments);\\n  return this;\\n}\\n\",\"export default function() {\\n  var nodes = new Array(this.size()), i = -1;\\n  this.each(function() { nodes[++i] = this; });\\n  return nodes;\\n}\\n\",\"export default function() {\\n\\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\\n      var node = group[i];\\n      if (node) return node;\\n    }\\n  }\\n\\n  return null;\\n}\\n\",\"export default function() {\\n  var size = 0;\\n  this.each(function() { ++size; });\\n  return size;\\n}\\n\",\"export default function() {\\n  return !this.node();\\n}\\n\",\"export default function(callback) {\\n\\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\\n    }\\n  }\\n\\n  return this;\\n}\\n\",\"function propertyRemove(name) {\\n  return function() {\\n    delete this[name];\\n  };\\n}\\n\\nfunction propertyConstant(name, value) {\\n  return function() {\\n    this[name] = value;\\n  };\\n}\\n\\nfunction propertyFunction(name, value) {\\n  return function() {\\n    var v = value.apply(this, arguments);\\n    if (v == null) delete this[name];\\n    else this[name] = v;\\n  };\\n}\\n\\nexport default function(name, value) {\\n  return arguments.length > 1\\n      ? this.each((value == null\\n          ? propertyRemove : typeof value === \\\"function\\\"\\n          ? propertyFunction\\n          : propertyConstant)(name, value))\\n      : this.node()[name];\\n}\\n\",\"import creator from \\\"../creator\\\";\\n\\nexport default function(name) {\\n  var create = typeof name === \\\"function\\\" ? name : creator(name);\\n  return this.select(function() {\\n    return this.appendChild(create.apply(this, arguments));\\n  });\\n}\\n\",\"export default function(value) {\\n  return arguments.length\\n      ? this.property(\\\"__data__\\\", value)\\n      : this.node().__data__;\\n}\\n\",\"import {Selection, root} from \\\"./selection/index\\\";\\n\\nexport default function(selector) {\\n  return typeof selector === \\\"string\\\"\\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\\n      : new Selection([[selector]], root);\\n}\\n\",\"import creator from \\\"./creator\\\";\\nimport select from \\\"./select\\\";\\n\\nexport default function(name) {\\n  return select(creator(name).call(document.documentElement));\\n}\\n\",\"var nextId = 0;\\n\\nexport default function local() {\\n  return new Local;\\n}\\n\\nfunction Local() {\\n  this._ = \\\"@\\\" + (++nextId).toString(36);\\n}\\n\\nLocal.prototype = local.prototype = {\\n  constructor: Local,\\n  get: function(node) {\\n    var id = this._;\\n    while (!(id in node)) if (!(node = node.parentNode)) return;\\n    return node[id];\\n  },\\n  set: function(node, value) {\\n    return node[this._] = value;\\n  },\\n  remove: function(node) {\\n    return this._ in node && delete node[this._];\\n  },\\n  toString: function() {\\n    return this._;\\n  }\\n};\\n\",\"import {event} from \\\"./selection/on\\\";\\n\\nexport default function() {\\n  var current = event, source;\\n  while (source = current.sourceEvent) current = source;\\n  return current;\\n}\\n\",\"export default function(node, event) {\\n  var svg = node.ownerSVGElement || node;\\n\\n  if (svg.createSVGPoint) {\\n    var point = svg.createSVGPoint();\\n    point.x = event.clientX, point.y = event.clientY;\\n    point = point.matrixTransform(node.getScreenCTM().inverse());\\n    return [point.x, point.y];\\n  }\\n\\n  var rect = node.getBoundingClientRect();\\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\\n}\\n\",\"import sourceEvent from \\\"./sourceEvent\\\";\\nimport point from \\\"./point\\\";\\n\\nexport default function(node) {\\n  var event = sourceEvent();\\n  if (event.changedTouches) event = event.changedTouches[0];\\n  return point(node, event);\\n}\\n\",\"import {Selection, root} from \\\"./selection/index\\\";\\n\\nexport default function(selector) {\\n  return typeof selector === \\\"string\\\"\\n      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\\n      : new Selection([selector == null ? [] : selector], root);\\n}\\n\",\"import sourceEvent from \\\"./sourceEvent\\\";\\nimport point from \\\"./point\\\";\\n\\nexport default function(node, touches, identifier) {\\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\\n\\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\\n    if ((touch = touches[i]).identifier === identifier) {\\n      return point(node, touch);\\n    }\\n  }\\n\\n  return null;\\n}\\n\",\"import sourceEvent from \\\"./sourceEvent\\\";\\nimport point from \\\"./point\\\";\\n\\nexport default function(node, touches) {\\n  if (touches == null) touches = sourceEvent().touches;\\n\\n  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\\n    points[i] = point(node, touches[i]);\\n  }\\n\\n  return points;\\n}\\n\",\"export {default as create} from \\\"./create\\\";\\nexport {default as creator} from \\\"./creator\\\";\\nexport {default as local} from \\\"./local\\\";\\nexport {default as matcher} from \\\"./matcher\\\";\\nexport {default as mouse} from \\\"./mouse\\\";\\nexport {default as namespace} from \\\"./namespace\\\";\\nexport {default as namespaces} from \\\"./namespaces\\\";\\nexport {default as clientPoint} from \\\"./point\\\";\\nexport {default as select} from \\\"./select\\\";\\nexport {default as selectAll} from \\\"./selectAll\\\";\\nexport {default as selection} from \\\"./selection/index\\\";\\nexport {default as selector} from \\\"./selector\\\";\\nexport {default as selectorAll} from \\\"./selectorAll\\\";\\nexport {styleValue as style} from \\\"./selection/style\\\";\\nexport {default as touch} from \\\"./touch\\\";\\nexport {default as touches} from \\\"./touches\\\";\\nexport {default as window} from \\\"./window\\\";\\nexport {event, customEvent} from \\\"./selection/on\\\";\\n\",\"require('./story01.js');\",\"const d3 = require(\\\"d3\\\");\\nrequire(\\\"d3-selection\\\");\\n// var d3 = Object.assign({}, require(\\\"d3-select\\\"));\\n\\n// https://bl.ocks.org/d3noob/ced1b9b18bd8192d2c898884033b5529\\n\\nvar container_parent = document.querySelector('.display') ,\\n\\tchart_container = document.querySelector('#example'),\\n\\tmargins = {top: 20, right: 20, bottom: 20, left: 40},\\n\\twidth = container_parent.offsetWidth - margins.left - margins.right,\\n\\theight = (width * 0.3) - margins.top - margins.bottom,\\n\\tvis, vis_group, aspect,\\n\\tline_color = '#ccc',\\n\\tline_width = 2,\\n\\tcircle_radius = 5;\\n\\nvar svgWidth = +container_parent.offsetWidth;\\nvar svgHeight = +(+container_parent.offsetWidth * 0.4);\\n\\nvis = d3.select('svg')\\n    .attr('width', svgWidth)\\n    .attr('height', svgHeight)\\n\\nvis_group = vis.append('g')\\n\\t.attr('transform', 'translate(' + margins.left + ',' + margins.top + ')');\\n\\naspect = chart_container.offsetWidth / chart_container.offsetHeight;\\n\\n// parse the date / time\\nvar parseTime = d3.timeParse('%d-%b-%y');\\n\\n// set the ranges\\nvar x = d3.scaleTime().range([0, width]);\\nvar y = d3.scaleLinear().range([height, 0]);\\n\\n// define the line\\nvar valueline = d3.line()\\n    .x(function(d) { return x(d.date); })\\n    .y(function(d) { return y(d.close); })\\n    .curve(d3.curveLinear);\\n\\n// old: d3.csv('data/data.csv', function(data) {\\nd3.csv(\\\"data/data.csv\\\").then(function(data, error) {\\n\\tif (error) throw error;\\n\\n\\t// format the data\\n\\tdata.forEach(function(d) {\\n\\t\\td.date = parseTime(d.date);\\n\\t\\td.close = +d.close;\\n\\t});\\n\\n\\t// Scale the range of the data\\n\\tx.domain(d3.extent(data, function(d) {\\n\\t\\treturn d.date;\\n\\t}));\\n\\n\\ty.domain([0, d3.max(data, function(d) {\\n\\t\\treturn d.close;\\n\\t})]);\\n\\n\\t// Add the valueline path.\\n\\tvis_group.append('path')\\n\\t\\t.data([data])\\n\\t\\t.attrs({\\n\\t\\t\\t'd': valueline,\\n\\t\\t\\t'fill': 'none',\\n\\t\\t\\t'stroke': '#fff',\\n\\t\\t\\t'stroke-width': '2px'\\n        });\\n\\n\\tvar circles = vis_group.selectAll('circle')\\n\\t\\t.data(data)\\n\\t\\t\\t.enter().append('circle')\\n\\t\\t.attrs({\\n\\t\\t\\t'cx': function(d){\\n\\t\\t\\t\\treturn x(d.date)\\n\\t\\t\\t},\\n\\t\\t\\t'cy': function(d){\\n\\t\\t\\t\\treturn y(d.close)\\n\\t\\t\\t},\\n\\t\\t\\t'r': circle_radius,\\n\\t\\t\\t'fill': '#fff'\\n\\t\\t});\\n\\n\\t// Add the X Axis\\n\\tvis_group.append('g')\\n\\t\\t.attr('transform', 'translate(0,' + height + ')')\\n\\t\\t.call(d3.axisBottom(x));\\n\\n\\t// Add the Y Axis\\n\\tvis_group.append('g')\\n\\t\\t.call(d3.axisLeft(y));\\n\\n});\\n\\n// $(window).on('resize', function() {\\n// \\tvar targetWidth = container_parent.width()\\n// \\tvis.attr({\\n// \\t\\t'width': targetWidth,\\n// \\t\\t'height': Math.round(targetWidth / aspect)\\n// \\t})\\n// })\\n\",\"export var name = \\\"d3\\\";\\nexport var version = \\\"5.9.1\\\";\\nexport var description = \\\"Data-Driven Documents\\\";\\nexport var keywords = [\\\"dom\\\",\\\"visualization\\\",\\\"svg\\\",\\\"animation\\\",\\\"canvas\\\"];\\nexport var homepage = \\\"https://d3js.org\\\";\\nexport var license = \\\"BSD-3-Clause\\\";\\nexport var author = {\\\"name\\\":\\\"Mike Bostock\\\",\\\"url\\\":\\\"https://bost.ocks.org/mike\\\"};\\nexport var main = \\\"dist/d3.node.js\\\";\\nexport var unpkg = \\\"dist/d3.min.js\\\";\\nexport var jsdelivr = \\\"dist/d3.min.js\\\";\\nexport var module = \\\"index.js\\\";\\nexport var repository = {\\\"type\\\":\\\"git\\\",\\\"url\\\":\\\"https://github.com/d3/d3.git\\\"};\\nexport var scripts = {\\\"pretest\\\":\\\"rimraf dist && mkdir dist && json2module package.json > dist/package.js && node rollup.node\\\",\\\"test\\\":\\\"tape 'test/**/*-test.js'\\\",\\\"prepublishOnly\\\":\\\"yarn test && rollup -c\\\",\\\"postpublish\\\":\\\"git push && git push --tags && cd ../d3.github.com && git pull && cp ../d3/dist/d3.js d3.v5.js && cp ../d3/dist/d3.min.js d3.v5.min.js && git add d3.v5.js d3.v5.min.js && git commit -m \\\\\\\"d3 ${npm_package_version}\\\\\\\" && git push && cd - && cd ../d3-bower && git pull && cp ../d3/LICENSE ../d3/README.md ../d3/dist/d3.js ../d3/dist/d3.min.js . && git add -- LICENSE README.md d3.js d3.min.js && git commit -m \\\\\\\"${npm_package_version}\\\\\\\" && git tag -am \\\\\\\"${npm_package_version}\\\\\\\" v${npm_package_version} && git push && git push --tags && cd - && zip -j dist/d3.zip -- LICENSE README.md API.md CHANGES.md dist/d3.js dist/d3.min.js\\\"};\\nexport var devDependencies = {\\\"json2module\\\":\\\"0.0\\\",\\\"rimraf\\\":\\\"2\\\",\\\"rollup\\\":\\\"0.64\\\",\\\"rollup-plugin-ascii\\\":\\\"0.0\\\",\\\"rollup-plugin-node-resolve\\\":\\\"3\\\",\\\"rollup-plugin-terser\\\":\\\"1\\\",\\\"tape\\\":\\\"4\\\"};\\nexport var dependencies = {\\\"d3-array\\\":\\\"1\\\",\\\"d3-axis\\\":\\\"1\\\",\\\"d3-brush\\\":\\\"1\\\",\\\"d3-chord\\\":\\\"1\\\",\\\"d3-collection\\\":\\\"1\\\",\\\"d3-color\\\":\\\"1\\\",\\\"d3-contour\\\":\\\"1\\\",\\\"d3-dispatch\\\":\\\"1\\\",\\\"d3-drag\\\":\\\"1\\\",\\\"d3-dsv\\\":\\\"1\\\",\\\"d3-ease\\\":\\\"1\\\",\\\"d3-fetch\\\":\\\"1\\\",\\\"d3-force\\\":\\\"1\\\",\\\"d3-format\\\":\\\"1\\\",\\\"d3-geo\\\":\\\"1\\\",\\\"d3-hierarchy\\\":\\\"1\\\",\\\"d3-interpolate\\\":\\\"1\\\",\\\"d3-path\\\":\\\"1\\\",\\\"d3-polygon\\\":\\\"1\\\",\\\"d3-quadtree\\\":\\\"1\\\",\\\"d3-random\\\":\\\"1\\\",\\\"d3-scale\\\":\\\"2\\\",\\\"d3-scale-chromatic\\\":\\\"1\\\",\\\"d3-selection\\\":\\\"1\\\",\\\"d3-shape\\\":\\\"1\\\",\\\"d3-time\\\":\\\"1\\\",\\\"d3-time-format\\\":\\\"2\\\",\\\"d3-timer\\\":\\\"1\\\",\\\"d3-transition\\\":\\\"1\\\",\\\"d3-voronoi\\\":\\\"1\\\",\\\"d3-zoom\\\":\\\"1\\\"};\\n\",\"export default function(a, b) {\\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\\n}\\n\",\"import ascending from \\\"./ascending\\\";\\n\\nexport default function(compare) {\\n  if (compare.length === 1) compare = ascendingComparator(compare);\\n  return {\\n    left: function(a, x, lo, hi) {\\n      if (lo == null) lo = 0;\\n      if (hi == null) hi = a.length;\\n      while (lo < hi) {\\n        var mid = lo + hi >>> 1;\\n        if (compare(a[mid], x) < 0) lo = mid + 1;\\n        else hi = mid;\\n      }\\n      return lo;\\n    },\\n    right: function(a, x, lo, hi) {\\n      if (lo == null) lo = 0;\\n      if (hi == null) hi = a.length;\\n      while (lo < hi) {\\n        var mid = lo + hi >>> 1;\\n        if (compare(a[mid], x) > 0) hi = mid;\\n        else lo = mid + 1;\\n      }\\n      return lo;\\n    }\\n  };\\n}\\n\\nfunction ascendingComparator(f) {\\n  return function(d, x) {\\n    return ascending(f(d), x);\\n  };\\n}\\n\",\"import ascending from \\\"./ascending\\\";\\nimport bisector from \\\"./bisector\\\";\\n\\nvar ascendingBisect = bisector(ascending);\\nexport var bisectRight = ascendingBisect.right;\\nexport var bisectLeft = ascendingBisect.left;\\nexport default bisectRight;\\n\",\"export default function(array, f) {\\n  if (f == null) f = pair;\\n  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\\n  while (i < n) pairs[i] = f(p, p = array[++i]);\\n  return pairs;\\n}\\n\\nexport function pair(a, b) {\\n  return [a, b];\\n}\\n\",\"import {pair} from \\\"./pairs\\\";\\n\\nexport default function(values0, values1, reduce) {\\n  var n0 = values0.length,\\n      n1 = values1.length,\\n      values = new Array(n0 * n1),\\n      i0,\\n      i1,\\n      i,\\n      value0;\\n\\n  if (reduce == null) reduce = pair;\\n\\n  for (i0 = i = 0; i0 < n0; ++i0) {\\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\\n      values[i] = reduce(value0, values1[i1]);\\n    }\\n  }\\n\\n  return values;\\n}\\n\",\"export default function(a, b) {\\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\\n}\\n\",\"export default function(x) {\\n  return x === null ? NaN : +x;\\n}\\n\",\"import number from \\\"./number\\\";\\n\\nexport default function(values, valueof) {\\n  var n = values.length,\\n      m = 0,\\n      i = -1,\\n      mean = 0,\\n      value,\\n      delta,\\n      sum = 0;\\n\\n  if (valueof == null) {\\n    while (++i < n) {\\n      if (!isNaN(value = number(values[i]))) {\\n        delta = value - mean;\\n        mean += delta / ++m;\\n        sum += delta * (value - mean);\\n      }\\n    }\\n  }\\n\\n  else {\\n    while (++i < n) {\\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\\n        delta = value - mean;\\n        mean += delta / ++m;\\n        sum += delta * (value - mean);\\n      }\\n    }\\n  }\\n\\n  if (m > 1) return sum / (m - 1);\\n}\\n\",\"import variance from \\\"./variance\\\";\\n\\nexport default function(array, f) {\\n  var v = variance(array, f);\\n  return v ? Math.sqrt(v) : v;\\n}\\n\",\"export default function(values, valueof) {\\n  var n = values.length,\\n      i = -1,\\n      value,\\n      min,\\n      max;\\n\\n  if (valueof == null) {\\n    while (++i < n) { // Find the first comparable value.\\n      if ((value = values[i]) != null && value >= value) {\\n        min = max = value;\\n        while (++i < n) { // Compare the remaining values.\\n          if ((value = values[i]) != null) {\\n            if (min > value) min = value;\\n            if (max < value) max = value;\\n          }\\n        }\\n      }\\n    }\\n  }\\n\\n  else {\\n    while (++i < n) { // Find the first comparable value.\\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\\n        min = max = value;\\n        while (++i < n) { // Compare the remaining values.\\n          if ((value = valueof(values[i], i, values)) != null) {\\n            if (min > value) min = value;\\n            if (max < value) max = value;\\n          }\\n        }\\n      }\\n    }\\n  }\\n\\n  return [min, max];\\n}\\n\",\"var array = Array.prototype;\\n\\nexport var slice = array.slice;\\nexport var map = array.map;\\n\",\"export default function(x) {\\n  return function() {\\n    return x;\\n  };\\n}\\n\",\"export default function(x) {\\n  return x;\\n}\\n\",\"export default function(start, stop, step) {\\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\\n\\n  var i = -1,\\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\\n      range = new Array(n);\\n\\n  while (++i < n) {\\n    range[i] = start + i * step;\\n  }\\n\\n  return range;\\n}\\n\",\"var e10 = Math.sqrt(50),\\n    e5 = Math.sqrt(10),\\n    e2 = Math.sqrt(2);\\n\\nexport default function(start, stop, count) {\\n  var reverse,\\n      i = -1,\\n      n,\\n      ticks,\\n      step;\\n\\n  stop = +stop, start = +start, count = +count;\\n  if (start === stop && count > 0) return [start];\\n  if (reverse = stop < start) n = start, start = stop, stop = n;\\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\\n\\n  if (step > 0) {\\n    start = Math.ceil(start / step);\\n    stop = Math.floor(stop / step);\\n    ticks = new Array(n = Math.ceil(stop - start + 1));\\n    while (++i < n) ticks[i] = (start + i) * step;\\n  } else {\\n    start = Math.floor(start * step);\\n    stop = Math.ceil(stop * step);\\n    ticks = new Array(n = Math.ceil(start - stop + 1));\\n    while (++i < n) ticks[i] = (start - i) / step;\\n  }\\n\\n  if (reverse) ticks.reverse();\\n\\n  return ticks;\\n}\\n\\nexport function tickIncrement(start, stop, count) {\\n  var step = (stop - start) / Math.max(0, count),\\n      power = Math.floor(Math.log(step) / Math.LN10),\\n      error = step / Math.pow(10, power);\\n  return power >= 0\\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\\n}\\n\\nexport function tickStep(start, stop, count) {\\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\\n      error = step0 / step1;\\n  if (error >= e10) step1 *= 10;\\n  else if (error >= e5) step1 *= 5;\\n  else if (error >= e2) step1 *= 2;\\n  return stop < start ? -step1 : step1;\\n}\\n\",\"export default function(values) {\\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\\n}\\n\",\"import {slice} from \\\"./array\\\";\\nimport bisect from \\\"./bisect\\\";\\nimport constant from \\\"./constant\\\";\\nimport extent from \\\"./extent\\\";\\nimport identity from \\\"./identity\\\";\\nimport range from \\\"./range\\\";\\nimport {tickStep} from \\\"./ticks\\\";\\nimport sturges from \\\"./threshold/sturges\\\";\\n\\nexport default function() {\\n  var value = identity,\\n      domain = extent,\\n      threshold = sturges;\\n\\n  function histogram(data) {\\n    var i,\\n        n = data.length,\\n        x,\\n        values = new Array(n);\\n\\n    for (i = 0; i < n; ++i) {\\n      values[i] = value(data[i], i, data);\\n    }\\n\\n    var xz = domain(values),\\n        x0 = xz[0],\\n        x1 = xz[1],\\n        tz = threshold(values, x0, x1);\\n\\n    // Convert number of thresholds into uniform thresholds.\\n    if (!Array.isArray(tz)) {\\n      tz = tickStep(x0, x1, tz);\\n      tz = range(Math.ceil(x0 / tz) * tz, x1, tz); // exclusive\\n    }\\n\\n    // Remove any thresholds outside the domain.\\n    var m = tz.length;\\n    while (tz[0] <= x0) tz.shift(), --m;\\n    while (tz[m - 1] > x1) tz.pop(), --m;\\n\\n    var bins = new Array(m + 1),\\n        bin;\\n\\n    // Initialize bins.\\n    for (i = 0; i <= m; ++i) {\\n      bin = bins[i] = [];\\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\\n      bin.x1 = i < m ? tz[i] : x1;\\n    }\\n\\n    // Assign data to bins by value, ignoring any outside the domain.\\n    for (i = 0; i < n; ++i) {\\n      x = values[i];\\n      if (x0 <= x && x <= x1) {\\n        bins[bisect(tz, x, 0, m)].push(data[i]);\\n      }\\n    }\\n\\n    return bins;\\n  }\\n\\n  histogram.value = function(_) {\\n    return arguments.length ? (value = typeof _ === \\\"function\\\" ? _ : constant(_), histogram) : value;\\n  };\\n\\n  histogram.domain = function(_) {\\n    return arguments.length ? (domain = typeof _ === \\\"function\\\" ? _ : constant([_[0], _[1]]), histogram) : domain;\\n  };\\n\\n  histogram.thresholds = function(_) {\\n    return arguments.length ? (threshold = typeof _ === \\\"function\\\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\\n  };\\n\\n  return histogram;\\n}\\n\",\"import number from \\\"./number\\\";\\n\\nexport default function(values, p, valueof) {\\n  if (valueof == null) valueof = number;\\n  if (!(n = values.length)) return;\\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\\n  var n,\\n      i = (n - 1) * p,\\n      i0 = Math.floor(i),\\n      value0 = +valueof(values[i0], i0, values),\\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\\n  return value0 + (value1 - value0) * (i - i0);\\n}\\n\",\"import {map} from \\\"../array\\\";\\nimport ascending from \\\"../ascending\\\";\\nimport number from \\\"../number\\\";\\nimport quantile from \\\"../quantile\\\";\\n\\nexport default function(values, min, max) {\\n  values = map.call(values, number).sort(ascending);\\n  return Math.ceil((max - min) / (2 * (quantile(values, 0.75) - quantile(values, 0.25)) * Math.pow(values.length, -1 / 3)));\\n}\\n\",\"import deviation from \\\"../deviation\\\";\\n\\nexport default function(values, min, max) {\\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\\n}\\n\",\"export default function(values, valueof) {\\n  var n = values.length,\\n      i = -1,\\n      value,\\n      max;\\n\\n  if (valueof == null) {\\n    while (++i < n) { // Find the first comparable value.\\n      if ((value = values[i]) != null && value >= value) {\\n        max = value;\\n        while (++i < n) { // Compare the remaining values.\\n          if ((value = values[i]) != null && value > max) {\\n            max = value;\\n          }\\n        }\\n      }\\n    }\\n  }\\n\\n  else {\\n    while (++i < n) { // Find the first comparable value.\\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\\n        max = value;\\n        while (++i < n) { // Compare the remaining values.\\n          if ((value = valueof(values[i], i, values)) != null && value > max) {\\n            max = value;\\n          }\\n        }\\n      }\\n    }\\n  }\\n\\n  return max;\\n}\\n\",\"import number from \\\"./number\\\";\\n\\nexport default function(values, valueof) {\\n  var n = values.length,\\n      m = n,\\n      i = -1,\\n      value,\\n      sum = 0;\\n\\n  if (valueof == null) {\\n    while (++i < n) {\\n      if (!isNaN(value = number(values[i]))) sum += value;\\n      else --m;\\n    }\\n  }\\n\\n  else {\\n    while (++i < n) {\\n      if (!isNaN(value = number(valueof(values[i], i, values)))) sum += value;\\n      else --m;\\n    }\\n  }\\n\\n  if (m) return sum / m;\\n}\\n\",\"import ascending from \\\"./ascending\\\";\\nimport number from \\\"./number\\\";\\nimport quantile from \\\"./quantile\\\";\\n\\nexport default function(values, valueof) {\\n  var n = values.length,\\n      i = -1,\\n      value,\\n      numbers = [];\\n\\n  if (valueof == null) {\\n    while (++i < n) {\\n      if (!isNaN(value = number(values[i]))) {\\n        numbers.push(value);\\n      }\\n    }\\n  }\\n\\n  else {\\n    while (++i < n) {\\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\\n        numbers.push(value);\\n      }\\n    }\\n  }\\n\\n  return quantile(numbers.sort(ascending), 0.5);\\n}\\n\",\"export default function(arrays) {\\n  var n = arrays.length,\\n      m,\\n      i = -1,\\n      j = 0,\\n      merged,\\n      array;\\n\\n  while (++i < n) j += arrays[i].length;\\n  merged = new Array(j);\\n\\n  while (--n >= 0) {\\n    array = arrays[n];\\n    m = array.length;\\n    while (--m >= 0) {\\n      merged[--j] = array[m];\\n    }\\n  }\\n\\n  return merged;\\n}\\n\",\"export default function(values, valueof) {\\n  var n = values.length,\\n      i = -1,\\n      value,\\n      min;\\n\\n  if (valueof == null) {\\n    while (++i < n) { // Find the first comparable value.\\n      if ((value = values[i]) != null && value >= value) {\\n        min = value;\\n        while (++i < n) { // Compare the remaining values.\\n          if ((value = values[i]) != null && min > value) {\\n            min = value;\\n          }\\n        }\\n      }\\n    }\\n  }\\n\\n  else {\\n    while (++i < n) { // Find the first comparable value.\\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\\n        min = value;\\n        while (++i < n) { // Compare the remaining values.\\n          if ((value = valueof(values[i], i, values)) != null && min > value) {\\n            min = value;\\n          }\\n        }\\n      }\\n    }\\n  }\\n\\n  return min;\\n}\\n\",\"export default function(array, indexes) {\\n  var i = indexes.length, permutes = new Array(i);\\n  while (i--) permutes[i] = array[indexes[i]];\\n  return permutes;\\n}\\n\",\"import ascending from \\\"./ascending\\\";\\n\\nexport default function(values, compare) {\\n  if (!(n = values.length)) return;\\n  var n,\\n      i = 0,\\n      j = 0,\\n      xi,\\n      xj = values[j];\\n\\n  if (compare == null) compare = ascending;\\n\\n  while (++i < n) {\\n    if (compare(xi = values[i], xj) < 0 || compare(xj, xj) !== 0) {\\n      xj = xi, j = i;\\n    }\\n  }\\n\\n  if (compare(xj, xj) === 0) return j;\\n}\\n\",\"export default function(array, i0, i1) {\\n  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\\n      t,\\n      i;\\n\\n  while (m) {\\n    i = Math.random() * m-- | 0;\\n    t = array[m + i0];\\n    array[m + i0] = array[i + i0];\\n    array[i + i0] = t;\\n  }\\n\\n  return array;\\n}\\n\",\"export default function(values, valueof) {\\n  var n = values.length,\\n      i = -1,\\n      value,\\n      sum = 0;\\n\\n  if (valueof == null) {\\n    while (++i < n) {\\n      if (value = +values[i]) sum += value; // Note: zero and null are equivalent.\\n    }\\n  }\\n\\n  else {\\n    while (++i < n) {\\n      if (value = +valueof(values[i], i, values)) sum += value;\\n    }\\n  }\\n\\n  return sum;\\n}\\n\",\"import min from \\\"./min\\\";\\n\\nexport default function(matrix) {\\n  if (!(n = matrix.length)) return [];\\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\\n      row[j] = matrix[j][i];\\n    }\\n  }\\n  return transpose;\\n}\\n\\nfunction length(d) {\\n  return d.length;\\n}\\n\",\"import transpose from \\\"./transpose\\\";\\n\\nexport default function() {\\n  return transpose(arguments);\\n}\\n\",\"export var slice = Array.prototype.slice;\\n\",\"export default function(x) {\\n  return x;\\n}\\n\",\"import {slice} from \\\"./array\\\";\\nimport identity from \\\"./identity\\\";\\n\\nvar top = 1,\\n    right = 2,\\n    bottom = 3,\\n    left = 4,\\n    epsilon = 1e-6;\\n\\nfunction translateX(x) {\\n  return \\\"translate(\\\" + (x + 0.5) + \\\",0)\\\";\\n}\\n\\nfunction translateY(y) {\\n  return \\\"translate(0,\\\" + (y + 0.5) + \\\")\\\";\\n}\\n\\nfunction number(scale) {\\n  return function(d) {\\n    return +scale(d);\\n  };\\n}\\n\\nfunction center(scale) {\\n  var offset = Math.max(0, scale.bandwidth() - 1) / 2; // Adjust for 0.5px offset.\\n  if (scale.round()) offset = Math.round(offset);\\n  return function(d) {\\n    return +scale(d) + offset;\\n  };\\n}\\n\\nfunction entering() {\\n  return !this.__axis;\\n}\\n\\nfunction axis(orient, scale) {\\n  var tickArguments = [],\\n      tickValues = null,\\n      tickFormat = null,\\n      tickSizeInner = 6,\\n      tickSizeOuter = 6,\\n      tickPadding = 3,\\n      k = orient === top || orient === left ? -1 : 1,\\n      x = orient === left || orient === right ? \\\"x\\\" : \\\"y\\\",\\n      transform = orient === top || orient === bottom ? translateX : translateY;\\n\\n  function axis(context) {\\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity) : tickFormat,\\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\\n        range = scale.range(),\\n        range0 = +range[0] + 0.5,\\n        range1 = +range[range.length - 1] + 0.5,\\n        position = (scale.bandwidth ? center : number)(scale.copy()),\\n        selection = context.selection ? context.selection() : context,\\n        path = selection.selectAll(\\\".domain\\\").data([null]),\\n        tick = selection.selectAll(\\\".tick\\\").data(values, scale).order(),\\n        tickExit = tick.exit(),\\n        tickEnter = tick.enter().append(\\\"g\\\").attr(\\\"class\\\", \\\"tick\\\"),\\n        line = tick.select(\\\"line\\\"),\\n        text = tick.select(\\\"text\\\");\\n\\n    path = path.merge(path.enter().insert(\\\"path\\\", \\\".tick\\\")\\n        .attr(\\\"class\\\", \\\"domain\\\")\\n        .attr(\\\"stroke\\\", \\\"currentColor\\\"));\\n\\n    tick = tick.merge(tickEnter);\\n\\n    line = line.merge(tickEnter.append(\\\"line\\\")\\n        .attr(\\\"stroke\\\", \\\"currentColor\\\")\\n        .attr(x + \\\"2\\\", k * tickSizeInner));\\n\\n    text = text.merge(tickEnter.append(\\\"text\\\")\\n        .attr(\\\"fill\\\", \\\"currentColor\\\")\\n        .attr(x, k * spacing)\\n        .attr(\\\"dy\\\", orient === top ? \\\"0em\\\" : orient === bottom ? \\\"0.71em\\\" : \\\"0.32em\\\"));\\n\\n    if (context !== selection) {\\n      path = path.transition(context);\\n      tick = tick.transition(context);\\n      line = line.transition(context);\\n      text = text.transition(context);\\n\\n      tickExit = tickExit.transition(context)\\n          .attr(\\\"opacity\\\", epsilon)\\n          .attr(\\\"transform\\\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\\\"transform\\\"); });\\n\\n      tickEnter\\n          .attr(\\\"opacity\\\", epsilon)\\n          .attr(\\\"transform\\\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\\n    }\\n\\n    tickExit.remove();\\n\\n    path\\n        .attr(\\\"d\\\", orient === left || orient == right\\n            ? (tickSizeOuter ? \\\"M\\\" + k * tickSizeOuter + \\\",\\\" + range0 + \\\"H0.5V\\\" + range1 + \\\"H\\\" + k * tickSizeOuter : \\\"M0.5,\\\" + range0 + \\\"V\\\" + range1)\\n            : (tickSizeOuter ? \\\"M\\\" + range0 + \\\",\\\" + k * tickSizeOuter + \\\"V0.5H\\\" + range1 + \\\"V\\\" + k * tickSizeOuter : \\\"M\\\" + range0 + \\\",0.5H\\\" + range1));\\n\\n    tick\\n        .attr(\\\"opacity\\\", 1)\\n        .attr(\\\"transform\\\", function(d) { return transform(position(d)); });\\n\\n    line\\n        .attr(x + \\\"2\\\", k * tickSizeInner);\\n\\n    text\\n        .attr(x, k * spacing)\\n        .text(format);\\n\\n    selection.filter(entering)\\n        .attr(\\\"fill\\\", \\\"none\\\")\\n        .attr(\\\"font-size\\\", 10)\\n        .attr(\\\"font-family\\\", \\\"sans-serif\\\")\\n        .attr(\\\"text-anchor\\\", orient === right ? \\\"start\\\" : orient === left ? \\\"end\\\" : \\\"middle\\\");\\n\\n    selection\\n        .each(function() { this.__axis = position; });\\n  }\\n\\n  axis.scale = function(_) {\\n    return arguments.length ? (scale = _, axis) : scale;\\n  };\\n\\n  axis.ticks = function() {\\n    return tickArguments = slice.call(arguments), axis;\\n  };\\n\\n  axis.tickArguments = function(_) {\\n    return arguments.length ? (tickArguments = _ == null ? [] : slice.call(_), axis) : tickArguments.slice();\\n  };\\n\\n  axis.tickValues = function(_) {\\n    return arguments.length ? (tickValues = _ == null ? null : slice.call(_), axis) : tickValues && tickValues.slice();\\n  };\\n\\n  axis.tickFormat = function(_) {\\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\\n  };\\n\\n  axis.tickSize = function(_) {\\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\\n  };\\n\\n  axis.tickSizeInner = function(_) {\\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\\n  };\\n\\n  axis.tickSizeOuter = function(_) {\\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\\n  };\\n\\n  axis.tickPadding = function(_) {\\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\\n  };\\n\\n  return axis;\\n}\\n\\nexport function axisTop(scale) {\\n  return axis(top, scale);\\n}\\n\\nexport function axisRight(scale) {\\n  return axis(right, scale);\\n}\\n\\nexport function axisBottom(scale) {\\n  return axis(bottom, scale);\\n}\\n\\nexport function axisLeft(scale) {\\n  return axis(left, scale);\\n}\\n\",\"var noop = {value: function() {}};\\n\\nfunction dispatch() {\\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\\n    if (!(t = arguments[i] + \\\"\\\") || (t in _)) throw new Error(\\\"illegal type: \\\" + t);\\n    _[t] = [];\\n  }\\n  return new Dispatch(_);\\n}\\n\\nfunction Dispatch(_) {\\n  this._ = _;\\n}\\n\\nfunction parseTypenames(typenames, types) {\\n  return typenames.trim().split(/^|\\\\s+/).map(function(t) {\\n    var name = \\\"\\\", i = t.indexOf(\\\".\\\");\\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\\n    if (t && !types.hasOwnProperty(t)) throw new Error(\\\"unknown type: \\\" + t);\\n    return {type: t, name: name};\\n  });\\n}\\n\\nDispatch.prototype = dispatch.prototype = {\\n  constructor: Dispatch,\\n  on: function(typename, callback) {\\n    var _ = this._,\\n        T = parseTypenames(typename + \\\"\\\", _),\\n        t,\\n        i = -1,\\n        n = T.length;\\n\\n    // If no callback was specified, return the callback of the given type and name.\\n    if (arguments.length < 2) {\\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\\n      return;\\n    }\\n\\n    // If a type was specified, set the callback for the given type and name.\\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\\n    if (callback != null && typeof callback !== \\\"function\\\") throw new Error(\\\"invalid callback: \\\" + callback);\\n    while (++i < n) {\\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\\n    }\\n\\n    return this;\\n  },\\n  copy: function() {\\n    var copy = {}, _ = this._;\\n    for (var t in _) copy[t] = _[t].slice();\\n    return new Dispatch(copy);\\n  },\\n  call: function(type, that) {\\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\\n    if (!this._.hasOwnProperty(type)) throw new Error(\\\"unknown type: \\\" + type);\\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\\n  },\\n  apply: function(type, that, args) {\\n    if (!this._.hasOwnProperty(type)) throw new Error(\\\"unknown type: \\\" + type);\\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\\n  }\\n};\\n\\nfunction get(type, name) {\\n  for (var i = 0, n = type.length, c; i < n; ++i) {\\n    if ((c = type[i]).name === name) {\\n      return c.value;\\n    }\\n  }\\n}\\n\\nfunction set(type, name, callback) {\\n  for (var i = 0, n = type.length; i < n; ++i) {\\n    if (type[i].name === name) {\\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\\n      break;\\n    }\\n  }\\n  if (callback != null) type.push({name: name, value: callback});\\n  return type;\\n}\\n\\nexport default dispatch;\\n\",\"import {event} from \\\"d3-selection\\\";\\n\\nexport function nopropagation() {\\n  event.stopImmediatePropagation();\\n}\\n\\nexport default function() {\\n  event.preventDefault();\\n  event.stopImmediatePropagation();\\n}\\n\",\"import {select} from \\\"d3-selection\\\";\\nimport noevent from \\\"./noevent\\\";\\n\\nexport default function(view) {\\n  var root = view.document.documentElement,\\n      selection = select(view).on(\\\"dragstart.drag\\\", noevent, true);\\n  if (\\\"onselectstart\\\" in root) {\\n    selection.on(\\\"selectstart.drag\\\", noevent, true);\\n  } else {\\n    root.__noselect = root.style.MozUserSelect;\\n    root.style.MozUserSelect = \\\"none\\\";\\n  }\\n}\\n\\nexport function yesdrag(view, noclick) {\\n  var root = view.document.documentElement,\\n      selection = select(view).on(\\\"dragstart.drag\\\", null);\\n  if (noclick) {\\n    selection.on(\\\"click.drag\\\", noevent, true);\\n    setTimeout(function() { selection.on(\\\"click.drag\\\", null); }, 0);\\n  }\\n  if (\\\"onselectstart\\\" in root) {\\n    selection.on(\\\"selectstart.drag\\\", null);\\n  } else {\\n    root.style.MozUserSelect = root.__noselect;\\n    delete root.__noselect;\\n  }\\n}\\n\",\"export default function(x) {\\n  return function() {\\n    return x;\\n  };\\n}\\n\",\"export default function DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\\n  this.target = target;\\n  this.type = type;\\n  this.subject = subject;\\n  this.identifier = id;\\n  this.active = active;\\n  this.x = x;\\n  this.y = y;\\n  this.dx = dx;\\n  this.dy = dy;\\n  this._ = dispatch;\\n}\\n\\nDragEvent.prototype.on = function() {\\n  var value = this._.on.apply(this._, arguments);\\n  return value === this._ ? this : value;\\n};\\n\",\"import {dispatch} from \\\"d3-dispatch\\\";\\nimport {event, customEvent, select, mouse, touch} from \\\"d3-selection\\\";\\nimport nodrag, {yesdrag} from \\\"./nodrag\\\";\\nimport noevent, {nopropagation} from \\\"./noevent\\\";\\nimport constant from \\\"./constant\\\";\\nimport DragEvent from \\\"./event\\\";\\n\\n// Ignore right-click, since that should open the context menu.\\nfunction defaultFilter() {\\n  return !event.button;\\n}\\n\\nfunction defaultContainer() {\\n  return this.parentNode;\\n}\\n\\nfunction defaultSubject(d) {\\n  return d == null ? {x: event.x, y: event.y} : d;\\n}\\n\\nfunction defaultTouchable() {\\n  return \\\"ontouchstart\\\" in this;\\n}\\n\\nexport default function() {\\n  var filter = defaultFilter,\\n      container = defaultContainer,\\n      subject = defaultSubject,\\n      touchable = defaultTouchable,\\n      gestures = {},\\n      listeners = dispatch(\\\"start\\\", \\\"drag\\\", \\\"end\\\"),\\n      active = 0,\\n      mousedownx,\\n      mousedowny,\\n      mousemoving,\\n      touchending,\\n      clickDistance2 = 0;\\n\\n  function drag(selection) {\\n    selection\\n        .on(\\\"mousedown.drag\\\", mousedowned)\\n      .filter(touchable)\\n        .on(\\\"touchstart.drag\\\", touchstarted)\\n        .on(\\\"touchmove.drag\\\", touchmoved)\\n        .on(\\\"touchend.drag touchcancel.drag\\\", touchended)\\n        .style(\\\"touch-action\\\", \\\"none\\\")\\n        .style(\\\"-webkit-tap-highlight-color\\\", \\\"rgba(0,0,0,0)\\\");\\n  }\\n\\n  function mousedowned() {\\n    if (touchending || !filter.apply(this, arguments)) return;\\n    var gesture = beforestart(\\\"mouse\\\", container.apply(this, arguments), mouse, this, arguments);\\n    if (!gesture) return;\\n    select(event.view).on(\\\"mousemove.drag\\\", mousemoved, true).on(\\\"mouseup.drag\\\", mouseupped, true);\\n    nodrag(event.view);\\n    nopropagation();\\n    mousemoving = false;\\n    mousedownx = event.clientX;\\n    mousedowny = event.clientY;\\n    gesture(\\\"start\\\");\\n  }\\n\\n  function mousemoved() {\\n    noevent();\\n    if (!mousemoving) {\\n      var dx = event.clientX - mousedownx, dy = event.clientY - mousedowny;\\n      mousemoving = dx * dx + dy * dy > clickDistance2;\\n    }\\n    gestures.mouse(\\\"drag\\\");\\n  }\\n\\n  function mouseupped() {\\n    select(event.view).on(\\\"mousemove.drag mouseup.drag\\\", null);\\n    yesdrag(event.view, mousemoving);\\n    noevent();\\n    gestures.mouse(\\\"end\\\");\\n  }\\n\\n  function touchstarted() {\\n    if (!filter.apply(this, arguments)) return;\\n    var touches = event.changedTouches,\\n        c = container.apply(this, arguments),\\n        n = touches.length, i, gesture;\\n\\n    for (i = 0; i < n; ++i) {\\n      if (gesture = beforestart(touches[i].identifier, c, touch, this, arguments)) {\\n        nopropagation();\\n        gesture(\\\"start\\\");\\n      }\\n    }\\n  }\\n\\n  function touchmoved() {\\n    var touches = event.changedTouches,\\n        n = touches.length, i, gesture;\\n\\n    for (i = 0; i < n; ++i) {\\n      if (gesture = gestures[touches[i].identifier]) {\\n        noevent();\\n        gesture(\\\"drag\\\");\\n      }\\n    }\\n  }\\n\\n  function touchended() {\\n    var touches = event.changedTouches,\\n        n = touches.length, i, gesture;\\n\\n    if (touchending) clearTimeout(touchending);\\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\\n    for (i = 0; i < n; ++i) {\\n      if (gesture = gestures[touches[i].identifier]) {\\n        nopropagation();\\n        gesture(\\\"end\\\");\\n      }\\n    }\\n  }\\n\\n  function beforestart(id, container, point, that, args) {\\n    var p = point(container, id), s, dx, dy,\\n        sublisteners = listeners.copy();\\n\\n    if (!customEvent(new DragEvent(drag, \\\"beforestart\\\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\\n      if ((event.subject = s = subject.apply(that, args)) == null) return false;\\n      dx = s.x - p[0] || 0;\\n      dy = s.y - p[1] || 0;\\n      return true;\\n    })) return;\\n\\n    return function gesture(type) {\\n      var p0 = p, n;\\n      switch (type) {\\n        case \\\"start\\\": gestures[id] = gesture, n = active++; break;\\n        case \\\"end\\\": delete gestures[id], --active; // nobreak\\n        case \\\"drag\\\": p = point(container, id), n = active; break;\\n      }\\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\\n    };\\n  }\\n\\n  drag.filter = function(_) {\\n    return arguments.length ? (filter = typeof _ === \\\"function\\\" ? _ : constant(!!_), drag) : filter;\\n  };\\n\\n  drag.container = function(_) {\\n    return arguments.length ? (container = typeof _ === \\\"function\\\" ? _ : constant(_), drag) : container;\\n  };\\n\\n  drag.subject = function(_) {\\n    return arguments.length ? (subject = typeof _ === \\\"function\\\" ? _ : constant(_), drag) : subject;\\n  };\\n\\n  drag.touchable = function(_) {\\n    return arguments.length ? (touchable = typeof _ === \\\"function\\\" ? _ : constant(!!_), drag) : touchable;\\n  };\\n\\n  drag.on = function() {\\n    var value = listeners.on.apply(listeners, arguments);\\n    return value === listeners ? drag : value;\\n  };\\n\\n  drag.clickDistance = function(_) {\\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);\\n  };\\n\\n  return drag;\\n}\\n\",\"export default function(constructor, factory, prototype) {\\n  constructor.prototype = factory.prototype = prototype;\\n  prototype.constructor = constructor;\\n}\\n\\nexport function extend(parent, definition) {\\n  var prototype = Object.create(parent.prototype);\\n  for (var key in definition) prototype[key] = definition[key];\\n  return prototype;\\n}\\n\",\"import define, {extend} from \\\"./define\\\";\\n\\nexport function Color() {}\\n\\nexport var darker = 0.7;\\nexport var brighter = 1 / darker;\\n\\nvar reI = \\\"\\\\\\\\s*([+-]?\\\\\\\\d+)\\\\\\\\s*\\\",\\n    reN = \\\"\\\\\\\\s*([+-]?\\\\\\\\d*\\\\\\\\.?\\\\\\\\d+(?:[eE][+-]?\\\\\\\\d+)?)\\\\\\\\s*\\\",\\n    reP = \\\"\\\\\\\\s*([+-]?\\\\\\\\d*\\\\\\\\.?\\\\\\\\d+(?:[eE][+-]?\\\\\\\\d+)?)%\\\\\\\\s*\\\",\\n    reHex3 = /^#([0-9a-f]{3})$/,\\n    reHex6 = /^#([0-9a-f]{6})$/,\\n    reRgbInteger = new RegExp(\\\"^rgb\\\\\\\\(\\\" + [reI, reI, reI] + \\\"\\\\\\\\)$\\\"),\\n    reRgbPercent = new RegExp(\\\"^rgb\\\\\\\\(\\\" + [reP, reP, reP] + \\\"\\\\\\\\)$\\\"),\\n    reRgbaInteger = new RegExp(\\\"^rgba\\\\\\\\(\\\" + [reI, reI, reI, reN] + \\\"\\\\\\\\)$\\\"),\\n    reRgbaPercent = new RegExp(\\\"^rgba\\\\\\\\(\\\" + [reP, reP, reP, reN] + \\\"\\\\\\\\)$\\\"),\\n    reHslPercent = new RegExp(\\\"^hsl\\\\\\\\(\\\" + [reN, reP, reP] + \\\"\\\\\\\\)$\\\"),\\n    reHslaPercent = new RegExp(\\\"^hsla\\\\\\\\(\\\" + [reN, reP, reP, reN] + \\\"\\\\\\\\)$\\\");\\n\\nvar named = {\\n  aliceblue: 0xf0f8ff,\\n  antiquewhite: 0xfaebd7,\\n  aqua: 0x00ffff,\\n  aquamarine: 0x7fffd4,\\n  azure: 0xf0ffff,\\n  beige: 0xf5f5dc,\\n  bisque: 0xffe4c4,\\n  black: 0x000000,\\n  blanchedalmond: 0xffebcd,\\n  blue: 0x0000ff,\\n  blueviolet: 0x8a2be2,\\n  brown: 0xa52a2a,\\n  burlywood: 0xdeb887,\\n  cadetblue: 0x5f9ea0,\\n  chartreuse: 0x7fff00,\\n  chocolate: 0xd2691e,\\n  coral: 0xff7f50,\\n  cornflowerblue: 0x6495ed,\\n  cornsilk: 0xfff8dc,\\n  crimson: 0xdc143c,\\n  cyan: 0x00ffff,\\n  darkblue: 0x00008b,\\n  darkcyan: 0x008b8b,\\n  darkgoldenrod: 0xb8860b,\\n  darkgray: 0xa9a9a9,\\n  darkgreen: 0x006400,\\n  darkgrey: 0xa9a9a9,\\n  darkkhaki: 0xbdb76b,\\n  darkmagenta: 0x8b008b,\\n  darkolivegreen: 0x556b2f,\\n  darkorange: 0xff8c00,\\n  darkorchid: 0x9932cc,\\n  darkred: 0x8b0000,\\n  darksalmon: 0xe9967a,\\n  darkseagreen: 0x8fbc8f,\\n  darkslateblue: 0x483d8b,\\n  darkslategray: 0x2f4f4f,\\n  darkslategrey: 0x2f4f4f,\\n  darkturquoise: 0x00ced1,\\n  darkviolet: 0x9400d3,\\n  deeppink: 0xff1493,\\n  deepskyblue: 0x00bfff,\\n  dimgray: 0x696969,\\n  dimgrey: 0x696969,\\n  dodgerblue: 0x1e90ff,\\n  firebrick: 0xb22222,\\n  floralwhite: 0xfffaf0,\\n  forestgreen: 0x228b22,\\n  fuchsia: 0xff00ff,\\n  gainsboro: 0xdcdcdc,\\n  ghostwhite: 0xf8f8ff,\\n  gold: 0xffd700,\\n  goldenrod: 0xdaa520,\\n  gray: 0x808080,\\n  green: 0x008000,\\n  greenyellow: 0xadff2f,\\n  grey: 0x808080,\\n  honeydew: 0xf0fff0,\\n  hotpink: 0xff69b4,\\n  indianred: 0xcd5c5c,\\n  indigo: 0x4b0082,\\n  ivory: 0xfffff0,\\n  khaki: 0xf0e68c,\\n  lavender: 0xe6e6fa,\\n  lavenderblush: 0xfff0f5,\\n  lawngreen: 0x7cfc00,\\n  lemonchiffon: 0xfffacd,\\n  lightblue: 0xadd8e6,\\n  lightcoral: 0xf08080,\\n  lightcyan: 0xe0ffff,\\n  lightgoldenrodyellow: 0xfafad2,\\n  lightgray: 0xd3d3d3,\\n  lightgreen: 0x90ee90,\\n  lightgrey: 0xd3d3d3,\\n  lightpink: 0xffb6c1,\\n  lightsalmon: 0xffa07a,\\n  lightseagreen: 0x20b2aa,\\n  lightskyblue: 0x87cefa,\\n  lightslategray: 0x778899,\\n  lightslategrey: 0x778899,\\n  lightsteelblue: 0xb0c4de,\\n  lightyellow: 0xffffe0,\\n  lime: 0x00ff00,\\n  limegreen: 0x32cd32,\\n  linen: 0xfaf0e6,\\n  magenta: 0xff00ff,\\n  maroon: 0x800000,\\n  mediumaquamarine: 0x66cdaa,\\n  mediumblue: 0x0000cd,\\n  mediumorchid: 0xba55d3,\\n  mediumpurple: 0x9370db,\\n  mediumseagreen: 0x3cb371,\\n  mediumslateblue: 0x7b68ee,\\n  mediumspringgreen: 0x00fa9a,\\n  mediumturquoise: 0x48d1cc,\\n  mediumvioletred: 0xc71585,\\n  midnightblue: 0x191970,\\n  mintcream: 0xf5fffa,\\n  mistyrose: 0xffe4e1,\\n  moccasin: 0xffe4b5,\\n  navajowhite: 0xffdead,\\n  navy: 0x000080,\\n  oldlace: 0xfdf5e6,\\n  olive: 0x808000,\\n  olivedrab: 0x6b8e23,\\n  orange: 0xffa500,\\n  orangered: 0xff4500,\\n  orchid: 0xda70d6,\\n  palegoldenrod: 0xeee8aa,\\n  palegreen: 0x98fb98,\\n  paleturquoise: 0xafeeee,\\n  palevioletred: 0xdb7093,\\n  papayawhip: 0xffefd5,\\n  peachpuff: 0xffdab9,\\n  peru: 0xcd853f,\\n  pink: 0xffc0cb,\\n  plum: 0xdda0dd,\\n  powderblue: 0xb0e0e6,\\n  purple: 0x800080,\\n  rebeccapurple: 0x663399,\\n  red: 0xff0000,\\n  rosybrown: 0xbc8f8f,\\n  royalblue: 0x4169e1,\\n  saddlebrown: 0x8b4513,\\n  salmon: 0xfa8072,\\n  sandybrown: 0xf4a460,\\n  seagreen: 0x2e8b57,\\n  seashell: 0xfff5ee,\\n  sienna: 0xa0522d,\\n  silver: 0xc0c0c0,\\n  skyblue: 0x87ceeb,\\n  slateblue: 0x6a5acd,\\n  slategray: 0x708090,\\n  slategrey: 0x708090,\\n  snow: 0xfffafa,\\n  springgreen: 0x00ff7f,\\n  steelblue: 0x4682b4,\\n  tan: 0xd2b48c,\\n  teal: 0x008080,\\n  thistle: 0xd8bfd8,\\n  tomato: 0xff6347,\\n  turquoise: 0x40e0d0,\\n  violet: 0xee82ee,\\n  wheat: 0xf5deb3,\\n  white: 0xffffff,\\n  whitesmoke: 0xf5f5f5,\\n  yellow: 0xffff00,\\n  yellowgreen: 0x9acd32\\n};\\n\\ndefine(Color, color, {\\n  displayable: function() {\\n    return this.rgb().displayable();\\n  },\\n  hex: function() {\\n    return this.rgb().hex();\\n  },\\n  toString: function() {\\n    return this.rgb() + \\\"\\\";\\n  }\\n});\\n\\nexport default function color(format) {\\n  var m;\\n  format = (format + \\\"\\\").trim().toLowerCase();\\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\\n      : named.hasOwnProperty(format) ? rgbn(named[format])\\n      : format === \\\"transparent\\\" ? new Rgb(NaN, NaN, NaN, 0)\\n      : null;\\n}\\n\\nfunction rgbn(n) {\\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\\n}\\n\\nfunction rgba(r, g, b, a) {\\n  if (a <= 0) r = g = b = NaN;\\n  return new Rgb(r, g, b, a);\\n}\\n\\nexport function rgbConvert(o) {\\n  if (!(o instanceof Color)) o = color(o);\\n  if (!o) return new Rgb;\\n  o = o.rgb();\\n  return new Rgb(o.r, o.g, o.b, o.opacity);\\n}\\n\\nexport function rgb(r, g, b, opacity) {\\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\\n}\\n\\nexport function Rgb(r, g, b, opacity) {\\n  this.r = +r;\\n  this.g = +g;\\n  this.b = +b;\\n  this.opacity = +opacity;\\n}\\n\\ndefine(Rgb, rgb, extend(Color, {\\n  brighter: function(k) {\\n    k = k == null ? brighter : Math.pow(brighter, k);\\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\\n  },\\n  darker: function(k) {\\n    k = k == null ? darker : Math.pow(darker, k);\\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\\n  },\\n  rgb: function() {\\n    return this;\\n  },\\n  displayable: function() {\\n    return (0 <= this.r && this.r <= 255)\\n        && (0 <= this.g && this.g <= 255)\\n        && (0 <= this.b && this.b <= 255)\\n        && (0 <= this.opacity && this.opacity <= 1);\\n  },\\n  hex: function() {\\n    return \\\"#\\\" + hex(this.r) + hex(this.g) + hex(this.b);\\n  },\\n  toString: function() {\\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\\n    return (a === 1 ? \\\"rgb(\\\" : \\\"rgba(\\\")\\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \\\", \\\"\\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \\\", \\\"\\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\\n        + (a === 1 ? \\\")\\\" : \\\", \\\" + a + \\\")\\\");\\n  }\\n}));\\n\\nfunction hex(value) {\\n  value = Math.max(0, Math.min(255, Math.round(value) || 0));\\n  return (value < 16 ? \\\"0\\\" : \\\"\\\") + value.toString(16);\\n}\\n\\nfunction hsla(h, s, l, a) {\\n  if (a <= 0) h = s = l = NaN;\\n  else if (l <= 0 || l >= 1) h = s = NaN;\\n  else if (s <= 0) h = NaN;\\n  return new Hsl(h, s, l, a);\\n}\\n\\nexport function hslConvert(o) {\\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\\n  if (!(o instanceof Color)) o = color(o);\\n  if (!o) return new Hsl;\\n  if (o instanceof Hsl) return o;\\n  o = o.rgb();\\n  var r = o.r / 255,\\n      g = o.g / 255,\\n      b = o.b / 255,\\n      min = Math.min(r, g, b),\\n      max = Math.max(r, g, b),\\n      h = NaN,\\n      s = max - min,\\n      l = (max + min) / 2;\\n  if (s) {\\n    if (r === max) h = (g - b) / s + (g < b) * 6;\\n    else if (g === max) h = (b - r) / s + 2;\\n    else h = (r - g) / s + 4;\\n    s /= l < 0.5 ? max + min : 2 - max - min;\\n    h *= 60;\\n  } else {\\n    s = l > 0 && l < 1 ? 0 : h;\\n  }\\n  return new Hsl(h, s, l, o.opacity);\\n}\\n\\nexport function hsl(h, s, l, opacity) {\\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\\n}\\n\\nfunction Hsl(h, s, l, opacity) {\\n  this.h = +h;\\n  this.s = +s;\\n  this.l = +l;\\n  this.opacity = +opacity;\\n}\\n\\ndefine(Hsl, hsl, extend(Color, {\\n  brighter: function(k) {\\n    k = k == null ? brighter : Math.pow(brighter, k);\\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\\n  },\\n  darker: function(k) {\\n    k = k == null ? darker : Math.pow(darker, k);\\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\\n  },\\n  rgb: function() {\\n    var h = this.h % 360 + (this.h < 0) * 360,\\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\\n        l = this.l,\\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\\n        m1 = 2 * l - m2;\\n    return new Rgb(\\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\\n      hsl2rgb(h, m1, m2),\\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\\n      this.opacity\\n    );\\n  },\\n  displayable: function() {\\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\\n        && (0 <= this.l && this.l <= 1)\\n        && (0 <= this.opacity && this.opacity <= 1);\\n  }\\n}));\\n\\n/* From FvD 13.37, CSS Color Module Level 3 */\\nfunction hsl2rgb(h, m1, m2) {\\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\\n      : h < 180 ? m2\\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\\n      : m1) * 255;\\n}\\n\",\"export var deg2rad = Math.PI / 180;\\nexport var rad2deg = 180 / Math.PI;\\n\",\"import define, {extend} from \\\"./define\\\";\\nimport {Color, rgbConvert, Rgb} from \\\"./color\\\";\\nimport {deg2rad, rad2deg} from \\\"./math\\\";\\n\\n// https://beta.observablehq.com/@mbostock/lab-and-rgb\\nvar K = 18,\\n    Xn = 0.96422,\\n    Yn = 1,\\n    Zn = 0.82521,\\n    t0 = 4 / 29,\\n    t1 = 6 / 29,\\n    t2 = 3 * t1 * t1,\\n    t3 = t1 * t1 * t1;\\n\\nfunction labConvert(o) {\\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\\n  if (o instanceof Hcl) {\\n    if (isNaN(o.h)) return new Lab(o.l, 0, 0, o.opacity);\\n    var h = o.h * deg2rad;\\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\\n  }\\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\\n  var r = rgb2lrgb(o.r),\\n      g = rgb2lrgb(o.g),\\n      b = rgb2lrgb(o.b),\\n      y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn), x, z;\\n  if (r === g && g === b) x = z = y; else {\\n    x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);\\n    z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);\\n  }\\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\\n}\\n\\nexport function gray(l, opacity) {\\n  return new Lab(l, 0, 0, opacity == null ? 1 : opacity);\\n}\\n\\nexport default function lab(l, a, b, opacity) {\\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\\n}\\n\\nexport function Lab(l, a, b, opacity) {\\n  this.l = +l;\\n  this.a = +a;\\n  this.b = +b;\\n  this.opacity = +opacity;\\n}\\n\\ndefine(Lab, lab, extend(Color, {\\n  brighter: function(k) {\\n    return new Lab(this.l + K * (k == null ? 1 : k), this.a, this.b, this.opacity);\\n  },\\n  darker: function(k) {\\n    return new Lab(this.l - K * (k == null ? 1 : k), this.a, this.b, this.opacity);\\n  },\\n  rgb: function() {\\n    var y = (this.l + 16) / 116,\\n        x = isNaN(this.a) ? y : y + this.a / 500,\\n        z = isNaN(this.b) ? y : y - this.b / 200;\\n    x = Xn * lab2xyz(x);\\n    y = Yn * lab2xyz(y);\\n    z = Zn * lab2xyz(z);\\n    return new Rgb(\\n      lrgb2rgb( 3.1338561 * x - 1.6168667 * y - 0.4906146 * z),\\n      lrgb2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z),\\n      lrgb2rgb( 0.0719453 * x - 0.2289914 * y + 1.4052427 * z),\\n      this.opacity\\n    );\\n  }\\n}));\\n\\nfunction xyz2lab(t) {\\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\\n}\\n\\nfunction lab2xyz(t) {\\n  return t > t1 ? t * t * t : t2 * (t - t0);\\n}\\n\\nfunction lrgb2rgb(x) {\\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\\n}\\n\\nfunction rgb2lrgb(x) {\\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\\n}\\n\\nfunction hclConvert(o) {\\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\\n  if (!(o instanceof Lab)) o = labConvert(o);\\n  if (o.a === 0 && o.b === 0) return new Hcl(NaN, 0, o.l, o.opacity);\\n  var h = Math.atan2(o.b, o.a) * rad2deg;\\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\\n}\\n\\nexport function lch(l, c, h, opacity) {\\n  return arguments.length === 1 ? hclConvert(l) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\\n}\\n\\nexport function hcl(h, c, l, opacity) {\\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\\n}\\n\\nexport function Hcl(h, c, l, opacity) {\\n  this.h = +h;\\n  this.c = +c;\\n  this.l = +l;\\n  this.opacity = +opacity;\\n}\\n\\ndefine(Hcl, hcl, extend(Color, {\\n  brighter: function(k) {\\n    return new Hcl(this.h, this.c, this.l + K * (k == null ? 1 : k), this.opacity);\\n  },\\n  darker: function(k) {\\n    return new Hcl(this.h, this.c, this.l - K * (k == null ? 1 : k), this.opacity);\\n  },\\n  rgb: function() {\\n    return labConvert(this).rgb();\\n  }\\n}));\\n\",\"import define, {extend} from \\\"./define\\\";\\nimport {Color, rgbConvert, Rgb, darker, brighter} from \\\"./color\\\";\\nimport {deg2rad, rad2deg} from \\\"./math\\\";\\n\\nvar A = -0.14861,\\n    B = +1.78277,\\n    C = -0.29227,\\n    D = -0.90649,\\n    E = +1.97294,\\n    ED = E * D,\\n    EB = E * B,\\n    BC_DA = B * C - D * A;\\n\\nfunction cubehelixConvert(o) {\\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\\n  var r = o.r / 255,\\n      g = o.g / 255,\\n      b = o.b / 255,\\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\\n      bl = b - l,\\n      k = (E * (g - l) - C * bl) / D,\\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\\n}\\n\\nexport default function cubehelix(h, s, l, opacity) {\\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\\n}\\n\\nexport function Cubehelix(h, s, l, opacity) {\\n  this.h = +h;\\n  this.s = +s;\\n  this.l = +l;\\n  this.opacity = +opacity;\\n}\\n\\ndefine(Cubehelix, cubehelix, extend(Color, {\\n  brighter: function(k) {\\n    k = k == null ? brighter : Math.pow(brighter, k);\\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\\n  },\\n  darker: function(k) {\\n    k = k == null ? darker : Math.pow(darker, k);\\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\\n  },\\n  rgb: function() {\\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\\n        l = +this.l,\\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\\n        cosh = Math.cos(h),\\n        sinh = Math.sin(h);\\n    return new Rgb(\\n      255 * (l + a * (A * cosh + B * sinh)),\\n      255 * (l + a * (C * cosh + D * sinh)),\\n      255 * (l + a * (E * cosh)),\\n      this.opacity\\n    );\\n  }\\n}));\\n\",\"export function basis(t1, v0, v1, v2, v3) {\\n  var t2 = t1 * t1, t3 = t2 * t1;\\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\\n      + (4 - 6 * t2 + 3 * t3) * v1\\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\\n      + t3 * v3) / 6;\\n}\\n\\nexport default function(values) {\\n  var n = values.length - 1;\\n  return function(t) {\\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\\n        v1 = values[i],\\n        v2 = values[i + 1],\\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\\n    return basis((t - i / n) * n, v0, v1, v2, v3);\\n  };\\n}\\n\",\"import {basis} from \\\"./basis\\\";\\n\\nexport default function(values) {\\n  var n = values.length;\\n  return function(t) {\\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\\n        v0 = values[(i + n - 1) % n],\\n        v1 = values[i % n],\\n        v2 = values[(i + 1) % n],\\n        v3 = values[(i + 2) % n];\\n    return basis((t - i / n) * n, v0, v1, v2, v3);\\n  };\\n}\\n\",\"export default function(x) {\\n  return function() {\\n    return x;\\n  };\\n}\\n\",\"import constant from \\\"./constant\\\";\\n\\nfunction linear(a, d) {\\n  return function(t) {\\n    return a + t * d;\\n  };\\n}\\n\\nfunction exponential(a, b, y) {\\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\\n    return Math.pow(a + t * b, y);\\n  };\\n}\\n\\nexport function hue(a, b) {\\n  var d = b - a;\\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\\n}\\n\\nexport function gamma(y) {\\n  return (y = +y) === 1 ? nogamma : function(a, b) {\\n    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\\n  };\\n}\\n\\nexport default function nogamma(a, b) {\\n  var d = b - a;\\n  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\\n}\\n\",\"import {rgb as colorRgb} from \\\"d3-color\\\";\\nimport basis from \\\"./basis\\\";\\nimport basisClosed from \\\"./basisClosed\\\";\\nimport nogamma, {gamma} from \\\"./color\\\";\\n\\nexport default (function rgbGamma(y) {\\n  var color = gamma(y);\\n\\n  function rgb(start, end) {\\n    var r = color((start = colorRgb(start)).r, (end = colorRgb(end)).r),\\n        g = color(start.g, end.g),\\n        b = color(start.b, end.b),\\n        opacity = nogamma(start.opacity, end.opacity);\\n    return function(t) {\\n      start.r = r(t);\\n      start.g = g(t);\\n      start.b = b(t);\\n      start.opacity = opacity(t);\\n      return start + \\\"\\\";\\n    };\\n  }\\n\\n  rgb.gamma = rgbGamma;\\n\\n  return rgb;\\n})(1);\\n\\nfunction rgbSpline(spline) {\\n  return function(colors) {\\n    var n = colors.length,\\n        r = new Array(n),\\n        g = new Array(n),\\n        b = new Array(n),\\n        i, color;\\n    for (i = 0; i < n; ++i) {\\n      color = colorRgb(colors[i]);\\n      r[i] = color.r || 0;\\n      g[i] = color.g || 0;\\n      b[i] = color.b || 0;\\n    }\\n    r = spline(r);\\n    g = spline(g);\\n    b = spline(b);\\n    color.opacity = 1;\\n    return function(t) {\\n      color.r = r(t);\\n      color.g = g(t);\\n      color.b = b(t);\\n      return color + \\\"\\\";\\n    };\\n  };\\n}\\n\\nexport var rgbBasis = rgbSpline(basis);\\nexport var rgbBasisClosed = rgbSpline(basisClosed);\\n\",\"import value from \\\"./value\\\";\\n\\nexport default function(a, b) {\\n  var nb = b ? b.length : 0,\\n      na = a ? Math.min(nb, a.length) : 0,\\n      x = new Array(na),\\n      c = new Array(nb),\\n      i;\\n\\n  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\\n  for (; i < nb; ++i) c[i] = b[i];\\n\\n  return function(t) {\\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\\n    return c;\\n  };\\n}\\n\",\"export default function(a, b) {\\n  var d = new Date;\\n  return a = +a, b -= a, function(t) {\\n    return d.setTime(a + b * t), d;\\n  };\\n}\\n\",\"export default function(a, b) {\\n  return a = +a, b -= a, function(t) {\\n    return a + b * t;\\n  };\\n}\\n\",\"import value from \\\"./value\\\";\\n\\nexport default function(a, b) {\\n  var i = {},\\n      c = {},\\n      k;\\n\\n  if (a === null || typeof a !== \\\"object\\\") a = {};\\n  if (b === null || typeof b !== \\\"object\\\") b = {};\\n\\n  for (k in b) {\\n    if (k in a) {\\n      i[k] = value(a[k], b[k]);\\n    } else {\\n      c[k] = b[k];\\n    }\\n  }\\n\\n  return function(t) {\\n    for (k in i) c[k] = i[k](t);\\n    return c;\\n  };\\n}\\n\",\"import number from \\\"./number\\\";\\n\\nvar reA = /[-+]?(?:\\\\d+\\\\.?\\\\d*|\\\\.?\\\\d+)(?:[eE][-+]?\\\\d+)?/g,\\n    reB = new RegExp(reA.source, \\\"g\\\");\\n\\nfunction zero(b) {\\n  return function() {\\n    return b;\\n  };\\n}\\n\\nfunction one(b) {\\n  return function(t) {\\n    return b(t) + \\\"\\\";\\n  };\\n}\\n\\nexport default function(a, b) {\\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\\n      am, // current match in a\\n      bm, // current match in b\\n      bs, // string preceding current number in b, if any\\n      i = -1, // index in s\\n      s = [], // string constants and placeholders\\n      q = []; // number interpolators\\n\\n  // Coerce inputs to strings.\\n  a = a + \\\"\\\", b = b + \\\"\\\";\\n\\n  // Interpolate pairs of numbers in a & b.\\n  while ((am = reA.exec(a))\\n      && (bm = reB.exec(b))) {\\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\\n      bs = b.slice(bi, bs);\\n      if (s[i]) s[i] += bs; // coalesce with previous string\\n      else s[++i] = bs;\\n    }\\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\\n      if (s[i]) s[i] += bm; // coalesce with previous string\\n      else s[++i] = bm;\\n    } else { // interpolate non-matching numbers\\n      s[++i] = null;\\n      q.push({i: i, x: number(am, bm)});\\n    }\\n    bi = reB.lastIndex;\\n  }\\n\\n  // Add remains of b.\\n  if (bi < b.length) {\\n    bs = b.slice(bi);\\n    if (s[i]) s[i] += bs; // coalesce with previous string\\n    else s[++i] = bs;\\n  }\\n\\n  // Special optimization for only a single match.\\n  // Otherwise, interpolate each of the numbers and rejoin the string.\\n  return s.length < 2 ? (q[0]\\n      ? one(q[0].x)\\n      : zero(b))\\n      : (b = q.length, function(t) {\\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\\n          return s.join(\\\"\\\");\\n        });\\n}\\n\",\"import decompose, {identity} from \\\"./decompose\\\";\\n\\nvar cssNode,\\n    cssRoot,\\n    cssView,\\n    svgNode;\\n\\nexport function parseCss(value) {\\n  if (value === \\\"none\\\") return identity;\\n  if (!cssNode) cssNode = document.createElement(\\\"DIV\\\"), cssRoot = document.documentElement, cssView = document.defaultView;\\n  cssNode.style.transform = value;\\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\\\"transform\\\");\\n  cssRoot.removeChild(cssNode);\\n  value = value.slice(7, -1).split(\\\",\\\");\\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\\n}\\n\\nexport function parseSvg(value) {\\n  if (value == null) return identity;\\n  if (!svgNode) svgNode = document.createElementNS(\\\"http://www.w3.org/2000/svg\\\", \\\"g\\\");\\n  svgNode.setAttribute(\\\"transform\\\", value);\\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity;\\n  value = value.matrix;\\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\\n}\\n\",\"import {color} from \\\"d3-color\\\";\\nimport rgb from \\\"./rgb\\\";\\nimport array from \\\"./array\\\";\\nimport date from \\\"./date\\\";\\nimport number from \\\"./number\\\";\\nimport object from \\\"./object\\\";\\nimport string from \\\"./string\\\";\\nimport constant from \\\"./constant\\\";\\n\\nexport default function(a, b) {\\n  var t = typeof b, c;\\n  return b == null || t === \\\"boolean\\\" ? constant(b)\\n      : (t === \\\"number\\\" ? number\\n      : t === \\\"string\\\" ? ((c = color(b)) ? (b = c, rgb) : string)\\n      : b instanceof color ? rgb\\n      : b instanceof Date ? date\\n      : Array.isArray(b) ? array\\n      : typeof b.valueOf !== \\\"function\\\" && typeof b.toString !== \\\"function\\\" || isNaN(b) ? object\\n      : number)(a, b);\\n}\\n\",\"export default function(range) {\\n  var n = range.length;\\n  return function(t) {\\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\\n  };\\n}\\n\",\"import {hue} from \\\"./color\\\";\\n\\nexport default function(a, b) {\\n  var i = hue(+a, +b);\\n  return function(t) {\\n    var x = i(t);\\n    return x - 360 * Math.floor(x / 360);\\n  };\\n}\\n\",\"export default function(a, b) {\\n  return a = +a, b -= a, function(t) {\\n    return Math.round(a + b * t);\\n  };\\n}\\n\",\"var degrees = 180 / Math.PI;\\n\\nexport var identity = {\\n  translateX: 0,\\n  translateY: 0,\\n  rotate: 0,\\n  skewX: 0,\\n  scaleX: 1,\\n  scaleY: 1\\n};\\n\\nexport default function(a, b, c, d, e, f) {\\n  var scaleX, scaleY, skewX;\\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\\n  return {\\n    translateX: e,\\n    translateY: f,\\n    rotate: Math.atan2(b, a) * degrees,\\n    skewX: Math.atan(skewX) * degrees,\\n    scaleX: scaleX,\\n    scaleY: scaleY\\n  };\\n}\\n\",\"import number from \\\"../number\\\";\\nimport {parseCss, parseSvg} from \\\"./parse\\\";\\n\\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\\n\\n  function pop(s) {\\n    return s.length ? s.pop() + \\\" \\\" : \\\"\\\";\\n  }\\n\\n  function translate(xa, ya, xb, yb, s, q) {\\n    if (xa !== xb || ya !== yb) {\\n      var i = s.push(\\\"translate(\\\", null, pxComma, null, pxParen);\\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\\n    } else if (xb || yb) {\\n      s.push(\\\"translate(\\\" + xb + pxComma + yb + pxParen);\\n    }\\n  }\\n\\n  function rotate(a, b, s, q) {\\n    if (a !== b) {\\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\\n      q.push({i: s.push(pop(s) + \\\"rotate(\\\", null, degParen) - 2, x: number(a, b)});\\n    } else if (b) {\\n      s.push(pop(s) + \\\"rotate(\\\" + b + degParen);\\n    }\\n  }\\n\\n  function skewX(a, b, s, q) {\\n    if (a !== b) {\\n      q.push({i: s.push(pop(s) + \\\"skewX(\\\", null, degParen) - 2, x: number(a, b)});\\n    } else if (b) {\\n      s.push(pop(s) + \\\"skewX(\\\" + b + degParen);\\n    }\\n  }\\n\\n  function scale(xa, ya, xb, yb, s, q) {\\n    if (xa !== xb || ya !== yb) {\\n      var i = s.push(pop(s) + \\\"scale(\\\", null, \\\",\\\", null, \\\")\\\");\\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\\n    } else if (xb !== 1 || yb !== 1) {\\n      s.push(pop(s) + \\\"scale(\\\" + xb + \\\",\\\" + yb + \\\")\\\");\\n    }\\n  }\\n\\n  return function(a, b) {\\n    var s = [], // string constants and placeholders\\n        q = []; // number interpolators\\n    a = parse(a), b = parse(b);\\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\\n    rotate(a.rotate, b.rotate, s, q);\\n    skewX(a.skewX, b.skewX, s, q);\\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\\n    a = b = null; // gc\\n    return function(t) {\\n      var i = -1, n = q.length, o;\\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\\n      return s.join(\\\"\\\");\\n    };\\n  };\\n}\\n\\nexport var interpolateTransformCss = interpolateTransform(parseCss, \\\"px, \\\", \\\"px)\\\", \\\"deg)\\\");\\nexport var interpolateTransformSvg = interpolateTransform(parseSvg, \\\", \\\", \\\")\\\", \\\")\\\");\\n\",\"var rho = Math.SQRT2,\\n    rho2 = 2,\\n    rho4 = 4,\\n    epsilon2 = 1e-12;\\n\\nfunction cosh(x) {\\n  return ((x = Math.exp(x)) + 1 / x) / 2;\\n}\\n\\nfunction sinh(x) {\\n  return ((x = Math.exp(x)) - 1 / x) / 2;\\n}\\n\\nfunction tanh(x) {\\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\\n}\\n\\n// p0 = [ux0, uy0, w0]\\n// p1 = [ux1, uy1, w1]\\nexport default function(p0, p1) {\\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\\n      dx = ux1 - ux0,\\n      dy = uy1 - uy0,\\n      d2 = dx * dx + dy * dy,\\n      i,\\n      S;\\n\\n  // Special case for u0 ≅ u1.\\n  if (d2 < epsilon2) {\\n    S = Math.log(w1 / w0) / rho;\\n    i = function(t) {\\n      return [\\n        ux0 + t * dx,\\n        uy0 + t * dy,\\n        w0 * Math.exp(rho * t * S)\\n      ];\\n    }\\n  }\\n\\n  // General case.\\n  else {\\n    var d1 = Math.sqrt(d2),\\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\\n    S = (r1 - r0) / rho;\\n    i = function(t) {\\n      var s = t * S,\\n          coshr0 = cosh(r0),\\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\\n      return [\\n        ux0 + u * dx,\\n        uy0 + u * dy,\\n        w0 * coshr0 / cosh(rho * s + r0)\\n      ];\\n    }\\n  }\\n\\n  i.duration = S * 1000;\\n\\n  return i;\\n}\\n\",\"import {hsl as colorHsl} from \\\"d3-color\\\";\\nimport color, {hue} from \\\"./color\\\";\\n\\nfunction hsl(hue) {\\n  return function(start, end) {\\n    var h = hue((start = colorHsl(start)).h, (end = colorHsl(end)).h),\\n        s = color(start.s, end.s),\\n        l = color(start.l, end.l),\\n        opacity = color(start.opacity, end.opacity);\\n    return function(t) {\\n      start.h = h(t);\\n      start.s = s(t);\\n      start.l = l(t);\\n      start.opacity = opacity(t);\\n      return start + \\\"\\\";\\n    };\\n  }\\n}\\n\\nexport default hsl(hue);\\nexport var hslLong = hsl(color);\\n\",\"import {lab as colorLab} from \\\"d3-color\\\";\\nimport color from \\\"./color\\\";\\n\\nexport default function lab(start, end) {\\n  var l = color((start = colorLab(start)).l, (end = colorLab(end)).l),\\n      a = color(start.a, end.a),\\n      b = color(start.b, end.b),\\n      opacity = color(start.opacity, end.opacity);\\n  return function(t) {\\n    start.l = l(t);\\n    start.a = a(t);\\n    start.b = b(t);\\n    start.opacity = opacity(t);\\n    return start + \\\"\\\";\\n  };\\n}\\n\",\"import {hcl as colorHcl} from \\\"d3-color\\\";\\nimport color, {hue} from \\\"./color\\\";\\n\\nfunction hcl(hue) {\\n  return function(start, end) {\\n    var h = hue((start = colorHcl(start)).h, (end = colorHcl(end)).h),\\n        c = color(start.c, end.c),\\n        l = color(start.l, end.l),\\n        opacity = color(start.opacity, end.opacity);\\n    return function(t) {\\n      start.h = h(t);\\n      start.c = c(t);\\n      start.l = l(t);\\n      start.opacity = opacity(t);\\n      return start + \\\"\\\";\\n    };\\n  }\\n}\\n\\nexport default hcl(hue);\\nexport var hclLong = hcl(color);\\n\",\"import {cubehelix as colorCubehelix} from \\\"d3-color\\\";\\nimport color, {hue} from \\\"./color\\\";\\n\\nfunction cubehelix(hue) {\\n  return (function cubehelixGamma(y) {\\n    y = +y;\\n\\n    function cubehelix(start, end) {\\n      var h = hue((start = colorCubehelix(start)).h, (end = colorCubehelix(end)).h),\\n          s = color(start.s, end.s),\\n          l = color(start.l, end.l),\\n          opacity = color(start.opacity, end.opacity);\\n      return function(t) {\\n        start.h = h(t);\\n        start.s = s(t);\\n        start.l = l(Math.pow(t, y));\\n        start.opacity = opacity(t);\\n        return start + \\\"\\\";\\n      };\\n    }\\n\\n    cubehelix.gamma = cubehelixGamma;\\n\\n    return cubehelix;\\n  })(1);\\n}\\n\\nexport default cubehelix(hue);\\nexport var cubehelixLong = cubehelix(color);\\n\",\"export default function piecewise(interpolate, values) {\\n  var i = 0, n = values.length - 1, v = values[0], I = new Array(n < 0 ? 0 : n);\\n  while (i < n) I[i] = interpolate(v, v = values[++i]);\\n  return function(t) {\\n    var i = Math.max(0, Math.min(n - 1, Math.floor(t *= n)));\\n    return I[i](t - i);\\n  };\\n}\\n\",\"export default function(interpolator, n) {\\n  var samples = new Array(n);\\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\\n  return samples;\\n}\\n\",\"var frame = 0, // is an animation frame pending?\\n    timeout = 0, // is a timeout pending?\\n    interval = 0, // are any timers active?\\n    pokeDelay = 1000, // how frequently we check for clock skew\\n    taskHead,\\n    taskTail,\\n    clockLast = 0,\\n    clockNow = 0,\\n    clockSkew = 0,\\n    clock = typeof performance === \\\"object\\\" && performance.now ? performance : Date,\\n    setFrame = typeof window === \\\"object\\\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\\n\\nexport function now() {\\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\\n}\\n\\nfunction clearNow() {\\n  clockNow = 0;\\n}\\n\\nexport function Timer() {\\n  this._call =\\n  this._time =\\n  this._next = null;\\n}\\n\\nTimer.prototype = timer.prototype = {\\n  constructor: Timer,\\n  restart: function(callback, delay, time) {\\n    if (typeof callback !== \\\"function\\\") throw new TypeError(\\\"callback is not a function\\\");\\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\\n    if (!this._next && taskTail !== this) {\\n      if (taskTail) taskTail._next = this;\\n      else taskHead = this;\\n      taskTail = this;\\n    }\\n    this._call = callback;\\n    this._time = time;\\n    sleep();\\n  },\\n  stop: function() {\\n    if (this._call) {\\n      this._call = null;\\n      this._time = Infinity;\\n      sleep();\\n    }\\n  }\\n};\\n\\nexport function timer(callback, delay, time) {\\n  var t = new Timer;\\n  t.restart(callback, delay, time);\\n  return t;\\n}\\n\\nexport function timerFlush() {\\n  now(); // Get the current time, if not already set.\\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\\n  var t = taskHead, e;\\n  while (t) {\\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\\n    t = t._next;\\n  }\\n  --frame;\\n}\\n\\nfunction wake() {\\n  clockNow = (clockLast = clock.now()) + clockSkew;\\n  frame = timeout = 0;\\n  try {\\n    timerFlush();\\n  } finally {\\n    frame = 0;\\n    nap();\\n    clockNow = 0;\\n  }\\n}\\n\\nfunction poke() {\\n  var now = clock.now(), delay = now - clockLast;\\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\\n}\\n\\nfunction nap() {\\n  var t0, t1 = taskHead, t2, time = Infinity;\\n  while (t1) {\\n    if (t1._call) {\\n      if (time > t1._time) time = t1._time;\\n      t0 = t1, t1 = t1._next;\\n    } else {\\n      t2 = t1._next, t1._next = null;\\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\\n    }\\n  }\\n  taskTail = t0;\\n  sleep(time);\\n}\\n\\nfunction sleep(time) {\\n  if (frame) return; // Soonest alarm already set, or will be.\\n  if (timeout) timeout = clearTimeout(timeout);\\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\\n  if (delay > 24) {\\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\\n    if (interval) interval = clearInterval(interval);\\n  } else {\\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\\n    frame = 1, setFrame(wake);\\n  }\\n}\\n\",\"import {Timer} from \\\"./timer\\\";\\n\\nexport default function(callback, delay, time) {\\n  var t = new Timer;\\n  delay = delay == null ? 0 : +delay;\\n  t.restart(function(elapsed) {\\n    t.stop();\\n    callback(elapsed + delay);\\n  }, delay, time);\\n  return t;\\n}\\n\",\"import {Timer, now} from \\\"./timer\\\";\\n\\nexport default function(callback, delay, time) {\\n  var t = new Timer, total = delay;\\n  if (delay == null) return t.restart(callback, delay, time), t;\\n  delay = +delay, time = time == null ? now() : +time;\\n  t.restart(function tick(elapsed) {\\n    elapsed += total;\\n    t.restart(tick, total += delay, time);\\n    callback(elapsed);\\n  }, delay, time);\\n  return t;\\n}\\n\",\"import {dispatch} from \\\"d3-dispatch\\\";\\nimport {timer, timeout} from \\\"d3-timer\\\";\\n\\nvar emptyOn = dispatch(\\\"start\\\", \\\"end\\\", \\\"cancel\\\", \\\"interrupt\\\");\\nvar emptyTween = [];\\n\\nexport var CREATED = 0;\\nexport var SCHEDULED = 1;\\nexport var STARTING = 2;\\nexport var STARTED = 3;\\nexport var RUNNING = 4;\\nexport var ENDING = 5;\\nexport var ENDED = 6;\\n\\nexport default function(node, name, id, index, group, timing) {\\n  var schedules = node.__transition;\\n  if (!schedules) node.__transition = {};\\n  else if (id in schedules) return;\\n  create(node, id, {\\n    name: name,\\n    index: index, // For context during callback.\\n    group: group, // For context during callback.\\n    on: emptyOn,\\n    tween: emptyTween,\\n    time: timing.time,\\n    delay: timing.delay,\\n    duration: timing.duration,\\n    ease: timing.ease,\\n    timer: null,\\n    state: CREATED\\n  });\\n}\\n\\nexport function init(node, id) {\\n  var schedule = get(node, id);\\n  if (schedule.state > CREATED) throw new Error(\\\"too late; already scheduled\\\");\\n  return schedule;\\n}\\n\\nexport function set(node, id) {\\n  var schedule = get(node, id);\\n  if (schedule.state > STARTED) throw new Error(\\\"too late; already running\\\");\\n  return schedule;\\n}\\n\\nexport function get(node, id) {\\n  var schedule = node.__transition;\\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\\\"transition not found\\\");\\n  return schedule;\\n}\\n\\nfunction create(node, id, self) {\\n  var schedules = node.__transition,\\n      tween;\\n\\n  // Initialize the self timer when the transition is created.\\n  // Note the actual delay is not known until the first callback!\\n  schedules[id] = self;\\n  self.timer = timer(schedule, 0, self.time);\\n\\n  function schedule(elapsed) {\\n    self.state = SCHEDULED;\\n    self.timer.restart(start, self.delay, self.time);\\n\\n    // If the elapsed delay is less than our first sleep, start immediately.\\n    if (self.delay <= elapsed) start(elapsed - self.delay);\\n  }\\n\\n  function start(elapsed) {\\n    var i, j, n, o;\\n\\n    // If the state is not SCHEDULED, then we previously errored on start.\\n    if (self.state !== SCHEDULED) return stop();\\n\\n    for (i in schedules) {\\n      o = schedules[i];\\n      if (o.name !== self.name) continue;\\n\\n      // While this element already has a starting transition during this frame,\\n      // defer starting an interrupting transition until that transition has a\\n      // chance to tick (and possibly end); see d3/d3-transition#54!\\n      if (o.state === STARTED) return timeout(start);\\n\\n      // Interrupt the active transition, if any.\\n      if (o.state === RUNNING) {\\n        o.state = ENDED;\\n        o.timer.stop();\\n        o.on.call(\\\"interrupt\\\", node, node.__data__, o.index, o.group);\\n        delete schedules[i];\\n      }\\n\\n      // Cancel any pre-empted transitions.\\n      else if (+i < id) {\\n        o.state = ENDED;\\n        o.timer.stop();\\n        o.on.call(\\\"cancel\\\", node, node.__data__, o.index, o.group);\\n        delete schedules[i];\\n      }\\n    }\\n\\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\\n    // Note the transition may be canceled after start and before the first tick!\\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\\n    // Assuming this is successful, subsequent callbacks go straight to tick.\\n    timeout(function() {\\n      if (self.state === STARTED) {\\n        self.state = RUNNING;\\n        self.timer.restart(tick, self.delay, self.time);\\n        tick(elapsed);\\n      }\\n    });\\n\\n    // Dispatch the start event.\\n    // Note this must be done before the tween are initialized.\\n    self.state = STARTING;\\n    self.on.call(\\\"start\\\", node, node.__data__, self.index, self.group);\\n    if (self.state !== STARTING) return; // interrupted\\n    self.state = STARTED;\\n\\n    // Initialize the tween, deleting null tween.\\n    tween = new Array(n = self.tween.length);\\n    for (i = 0, j = -1; i < n; ++i) {\\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\\n        tween[++j] = o;\\n      }\\n    }\\n    tween.length = j + 1;\\n  }\\n\\n  function tick(elapsed) {\\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\\n        i = -1,\\n        n = tween.length;\\n\\n    while (++i < n) {\\n      tween[i].call(node, t);\\n    }\\n\\n    // Dispatch the end event.\\n    if (self.state === ENDING) {\\n      self.on.call(\\\"end\\\", node, node.__data__, self.index, self.group);\\n      stop();\\n    }\\n  }\\n\\n  function stop() {\\n    self.state = ENDED;\\n    self.timer.stop();\\n    delete schedules[id];\\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\\n    delete node.__transition;\\n  }\\n}\\n\",\"import {STARTING, ENDING, ENDED} from \\\"./transition/schedule\\\";\\n\\nexport default function(node, name) {\\n  var schedules = node.__transition,\\n      schedule,\\n      active,\\n      empty = true,\\n      i;\\n\\n  if (!schedules) return;\\n\\n  name = name == null ? null : name + \\\"\\\";\\n\\n  for (i in schedules) {\\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\\n    active = schedule.state > STARTING && schedule.state < ENDING;\\n    schedule.state = ENDED;\\n    schedule.timer.stop();\\n    schedule.on.call(active ? \\\"interrupt\\\" : \\\"cancel\\\", node, node.__data__, schedule.index, schedule.group);\\n    delete schedules[i];\\n  }\\n\\n  if (empty) delete node.__transition;\\n}\\n\",\"import {get, set} from \\\"./schedule\\\";\\n\\nfunction tweenRemove(id, name) {\\n  var tween0, tween1;\\n  return function() {\\n    var schedule = set(this, id),\\n        tween = schedule.tween;\\n\\n    // If this node shared tween with the previous node,\\n    // just assign the updated shared tween and we’re done!\\n    // Otherwise, copy-on-write.\\n    if (tween !== tween0) {\\n      tween1 = tween0 = tween;\\n      for (var i = 0, n = tween1.length; i < n; ++i) {\\n        if (tween1[i].name === name) {\\n          tween1 = tween1.slice();\\n          tween1.splice(i, 1);\\n          break;\\n        }\\n      }\\n    }\\n\\n    schedule.tween = tween1;\\n  };\\n}\\n\\nfunction tweenFunction(id, name, value) {\\n  var tween0, tween1;\\n  if (typeof value !== \\\"function\\\") throw new Error;\\n  return function() {\\n    var schedule = set(this, id),\\n        tween = schedule.tween;\\n\\n    // If this node shared tween with the previous node,\\n    // just assign the updated shared tween and we’re done!\\n    // Otherwise, copy-on-write.\\n    if (tween !== tween0) {\\n      tween1 = (tween0 = tween).slice();\\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\\n        if (tween1[i].name === name) {\\n          tween1[i] = t;\\n          break;\\n        }\\n      }\\n      if (i === n) tween1.push(t);\\n    }\\n\\n    schedule.tween = tween1;\\n  };\\n}\\n\\nexport default function(name, value) {\\n  var id = this._id;\\n\\n  name += \\\"\\\";\\n\\n  if (arguments.length < 2) {\\n    var tween = get(this.node(), id).tween;\\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\\n      if ((t = tween[i]).name === name) {\\n        return t.value;\\n      }\\n    }\\n    return null;\\n  }\\n\\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\\n}\\n\\nexport function tweenValue(transition, name, value) {\\n  var id = transition._id;\\n\\n  transition.each(function() {\\n    var schedule = set(this, id);\\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\\n  });\\n\\n  return function(node) {\\n    return get(node, id).value[name];\\n  };\\n}\\n\",\"import {color} from \\\"d3-color\\\";\\nimport {interpolateNumber, interpolateRgb, interpolateString} from \\\"d3-interpolate\\\";\\n\\nexport default function(a, b) {\\n  var c;\\n  return (typeof b === \\\"number\\\" ? interpolateNumber\\n      : b instanceof color ? interpolateRgb\\n      : (c = color(b)) ? (b = c, interpolateRgb)\\n      : interpolateString)(a, b);\\n}\\n\",\"function removeFunction(id) {\\n  return function() {\\n    var parent = this.parentNode;\\n    for (var i in this.__transition) if (+i !== id) return;\\n    if (parent) parent.removeChild(this);\\n  };\\n}\\n\\nexport default function() {\\n  return this.on(\\\"end.remove\\\", removeFunction(this._id));\\n}\\n\",\"import {selection} from \\\"d3-selection\\\";\\n\\nvar Selection = selection.prototype.constructor;\\n\\nexport default function() {\\n  return new Selection(this._groups, this._parents);\\n}\\n\",\"import {interpolateTransformCss as interpolateTransform} from \\\"d3-interpolate\\\";\\nimport {style} from \\\"d3-selection\\\";\\nimport {set} from \\\"./schedule\\\";\\nimport {tweenValue} from \\\"./tween\\\";\\nimport interpolate from \\\"./interpolate\\\";\\n\\nfunction styleNull(name, interpolate) {\\n  var string00,\\n      string10,\\n      interpolate0;\\n  return function() {\\n    var string0 = style(this, name),\\n        string1 = (this.style.removeProperty(name), style(this, name));\\n    return string0 === string1 ? null\\n        : string0 === string00 && string1 === string10 ? interpolate0\\n        : interpolate0 = interpolate(string00 = string0, string10 = string1);\\n  };\\n}\\n\\nfunction styleRemove(name) {\\n  return function() {\\n    this.style.removeProperty(name);\\n  };\\n}\\n\\nfunction styleConstant(name, interpolate, value1) {\\n  var string00,\\n      string1 = value1 + \\\"\\\",\\n      interpolate0;\\n  return function() {\\n    var string0 = style(this, name);\\n    return string0 === string1 ? null\\n        : string0 === string00 ? interpolate0\\n        : interpolate0 = interpolate(string00 = string0, value1);\\n  };\\n}\\n\\nfunction styleFunction(name, interpolate, value) {\\n  var string00,\\n      string10,\\n      interpolate0;\\n  return function() {\\n    var string0 = style(this, name),\\n        value1 = value(this),\\n        string1 = value1 + \\\"\\\";\\n    if (value1 == null) string1 = value1 = (this.style.removeProperty(name), style(this, name));\\n    return string0 === string1 ? null\\n        : string0 === string00 && string1 === string10 ? interpolate0\\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\\n  };\\n}\\n\\nfunction styleMaybeRemove(id, name) {\\n  var on0, on1, listener0, key = \\\"style.\\\" + name, event = \\\"end.\\\" + key, remove;\\n  return function() {\\n    var schedule = set(this, id),\\n        on = schedule.on,\\n        listener = schedule.value[key] == null ? remove || (remove = styleRemove(name)) : undefined;\\n\\n    // If this node shared a dispatch with the previous node,\\n    // just assign the updated shared dispatch and we’re done!\\n    // Otherwise, copy-on-write.\\n    if (on !== on0 || listener0 !== listener) (on1 = (on0 = on).copy()).on(event, listener0 = listener);\\n\\n    schedule.on = on1;\\n  };\\n}\\n\\nexport default function(name, value, priority) {\\n  var i = (name += \\\"\\\") === \\\"transform\\\" ? interpolateTransform : interpolate;\\n  return value == null ? this\\n      .styleTween(name, styleNull(name, i))\\n      .on(\\\"end.style.\\\" + name, styleRemove(name))\\n    : typeof value === \\\"function\\\" ? this\\n      .styleTween(name, styleFunction(name, i, tweenValue(this, \\\"style.\\\" + name, value)))\\n      .each(styleMaybeRemove(this._id, name))\\n    : this\\n      .styleTween(name, styleConstant(name, i, value), priority)\\n      .on(\\\"end.style.\\\" + name, null);\\n}\\n\",\"import {tweenValue} from \\\"./tween\\\";\\n\\nfunction textConstant(value) {\\n  return function() {\\n    this.textContent = value;\\n  };\\n}\\n\\nfunction textFunction(value) {\\n  return function() {\\n    var value1 = value(this);\\n    this.textContent = value1 == null ? \\\"\\\" : value1;\\n  };\\n}\\n\\nexport default function(value) {\\n  return this.tween(\\\"text\\\", typeof value === \\\"function\\\"\\n      ? textFunction(tweenValue(this, \\\"text\\\", value))\\n      : textConstant(value == null ? \\\"\\\" : value + \\\"\\\"));\\n}\\n\",\"import {selection} from \\\"d3-selection\\\";\\nimport transition_attr from \\\"./attr\\\";\\nimport transition_attrTween from \\\"./attrTween\\\";\\nimport transition_delay from \\\"./delay\\\";\\nimport transition_duration from \\\"./duration\\\";\\nimport transition_ease from \\\"./ease\\\";\\nimport transition_filter from \\\"./filter\\\";\\nimport transition_merge from \\\"./merge\\\";\\nimport transition_on from \\\"./on\\\";\\nimport transition_remove from \\\"./remove\\\";\\nimport transition_select from \\\"./select\\\";\\nimport transition_selectAll from \\\"./selectAll\\\";\\nimport transition_selection from \\\"./selection\\\";\\nimport transition_style from \\\"./style\\\";\\nimport transition_styleTween from \\\"./styleTween\\\";\\nimport transition_text from \\\"./text\\\";\\nimport transition_transition from \\\"./transition\\\";\\nimport transition_tween from \\\"./tween\\\";\\nimport transition_end from \\\"./end\\\";\\n\\nvar id = 0;\\n\\nexport function Transition(groups, parents, name, id) {\\n  this._groups = groups;\\n  this._parents = parents;\\n  this._name = name;\\n  this._id = id;\\n}\\n\\nexport default function transition(name) {\\n  return selection().transition(name);\\n}\\n\\nexport function newId() {\\n  return ++id;\\n}\\n\\nvar selection_prototype = selection.prototype;\\n\\nTransition.prototype = transition.prototype = {\\n  constructor: Transition,\\n  select: transition_select,\\n  selectAll: transition_selectAll,\\n  filter: transition_filter,\\n  merge: transition_merge,\\n  selection: transition_selection,\\n  transition: transition_transition,\\n  call: selection_prototype.call,\\n  nodes: selection_prototype.nodes,\\n  node: selection_prototype.node,\\n  size: selection_prototype.size,\\n  empty: selection_prototype.empty,\\n  each: selection_prototype.each,\\n  on: transition_on,\\n  attr: transition_attr,\\n  attrTween: transition_attrTween,\\n  style: transition_style,\\n  styleTween: transition_styleTween,\\n  text: transition_text,\\n  remove: transition_remove,\\n  tween: transition_tween,\\n  delay: transition_delay,\\n  duration: transition_duration,\\n  ease: transition_ease,\\n  end: transition_end\\n};\\n\",\"export function linear(t) {\\n  return +t;\\n}\\n\",\"export function quadIn(t) {\\n  return t * t;\\n}\\n\\nexport function quadOut(t) {\\n  return t * (2 - t);\\n}\\n\\nexport function quadInOut(t) {\\n  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\\n}\\n\",\"export function cubicIn(t) {\\n  return t * t * t;\\n}\\n\\nexport function cubicOut(t) {\\n  return --t * t * t + 1;\\n}\\n\\nexport function cubicInOut(t) {\\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\\n}\\n\",\"import {selector} from \\\"d3-selection\\\";\\nimport {Transition} from \\\"./index\\\";\\nimport schedule, {get} from \\\"./schedule\\\";\\n\\nexport default function(select) {\\n  var name = this._name,\\n      id = this._id;\\n\\n  if (typeof select !== \\\"function\\\") select = selector(select);\\n\\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\\n        if (\\\"__data__\\\" in node) subnode.__data__ = node.__data__;\\n        subgroup[i] = subnode;\\n        schedule(subgroup[i], name, id, i, subgroup, get(node, id));\\n      }\\n    }\\n  }\\n\\n  return new Transition(subgroups, this._parents, name, id);\\n}\\n\",\"import {selectorAll} from \\\"d3-selection\\\";\\nimport {Transition} from \\\"./index\\\";\\nimport schedule, {get} from \\\"./schedule\\\";\\n\\nexport default function(select) {\\n  var name = this._name,\\n      id = this._id;\\n\\n  if (typeof select !== \\\"function\\\") select = selectorAll(select);\\n\\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\\n      if (node = group[i]) {\\n        for (var children = select.call(node, node.__data__, i, group), child, inherit = get(node, id), k = 0, l = children.length; k < l; ++k) {\\n          if (child = children[k]) {\\n            schedule(child, name, id, k, children, inherit);\\n          }\\n        }\\n        subgroups.push(children);\\n        parents.push(node);\\n      }\\n    }\\n  }\\n\\n  return new Transition(subgroups, parents, name, id);\\n}\\n\",\"import {matcher} from \\\"d3-selection\\\";\\nimport {Transition} from \\\"./index\\\";\\n\\nexport default function(match) {\\n  if (typeof match !== \\\"function\\\") match = matcher(match);\\n\\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\\n        subgroup.push(node);\\n      }\\n    }\\n  }\\n\\n  return new Transition(subgroups, this._parents, this._name, this._id);\\n}\\n\",\"import {Transition} from \\\"./index\\\";\\n\\nexport default function(transition) {\\n  if (transition._id !== this._id) throw new Error;\\n\\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\\n      if (node = group0[i] || group1[i]) {\\n        merge[i] = node;\\n      }\\n    }\\n  }\\n\\n  for (; j < m0; ++j) {\\n    merges[j] = groups0[j];\\n  }\\n\\n  return new Transition(merges, this._parents, this._name, this._id);\\n}\\n\",\"import {Transition, newId} from \\\"./index\\\";\\nimport schedule, {get} from \\\"./schedule\\\";\\n\\nexport default function() {\\n  var name = this._name,\\n      id0 = this._id,\\n      id1 = newId();\\n\\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\\n      if (node = group[i]) {\\n        var inherit = get(node, id0);\\n        schedule(node, name, id1, i, group, {\\n          time: inherit.time + inherit.delay + inherit.duration,\\n          delay: 0,\\n          duration: inherit.duration,\\n          ease: inherit.ease\\n        });\\n      }\\n    }\\n  }\\n\\n  return new Transition(groups, this._parents, name, id1);\\n}\\n\",\"import {get, set, init} from \\\"./schedule\\\";\\n\\nfunction start(name) {\\n  return (name + \\\"\\\").trim().split(/^|\\\\s+/).every(function(t) {\\n    var i = t.indexOf(\\\".\\\");\\n    if (i >= 0) t = t.slice(0, i);\\n    return !t || t === \\\"start\\\";\\n  });\\n}\\n\\nfunction onFunction(id, name, listener) {\\n  var on0, on1, sit = start(name) ? init : set;\\n  return function() {\\n    var schedule = sit(this, id),\\n        on = schedule.on;\\n\\n    // If this node shared a dispatch with the previous node,\\n    // just assign the updated shared dispatch and we’re done!\\n    // Otherwise, copy-on-write.\\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\\n\\n    schedule.on = on1;\\n  };\\n}\\n\\nexport default function(name, listener) {\\n  var id = this._id;\\n\\n  return arguments.length < 2\\n      ? get(this.node(), id).on.on(name)\\n      : this.each(onFunction(id, name, listener));\\n}\\n\",\"import {interpolateTransformSvg as interpolateTransform} from \\\"d3-interpolate\\\";\\nimport {namespace} from \\\"d3-selection\\\";\\nimport {tweenValue} from \\\"./tween\\\";\\nimport interpolate from \\\"./interpolate\\\";\\n\\nfunction attrRemove(name) {\\n  return function() {\\n    this.removeAttribute(name);\\n  };\\n}\\n\\nfunction attrRemoveNS(fullname) {\\n  return function() {\\n    this.removeAttributeNS(fullname.space, fullname.local);\\n  };\\n}\\n\\nfunction attrConstant(name, interpolate, value1) {\\n  var string00,\\n      string1 = value1 + \\\"\\\",\\n      interpolate0;\\n  return function() {\\n    var string0 = this.getAttribute(name);\\n    return string0 === string1 ? null\\n        : string0 === string00 ? interpolate0\\n        : interpolate0 = interpolate(string00 = string0, value1);\\n  };\\n}\\n\\nfunction attrConstantNS(fullname, interpolate, value1) {\\n  var string00,\\n      string1 = value1 + \\\"\\\",\\n      interpolate0;\\n  return function() {\\n    var string0 = this.getAttributeNS(fullname.space, fullname.local);\\n    return string0 === string1 ? null\\n        : string0 === string00 ? interpolate0\\n        : interpolate0 = interpolate(string00 = string0, value1);\\n  };\\n}\\n\\nfunction attrFunction(name, interpolate, value) {\\n  var string00,\\n      string10,\\n      interpolate0;\\n  return function() {\\n    var string0, value1 = value(this), string1;\\n    if (value1 == null) return void this.removeAttribute(name);\\n    string0 = this.getAttribute(name);\\n    string1 = value1 + \\\"\\\";\\n    return string0 === string1 ? null\\n        : string0 === string00 && string1 === string10 ? interpolate0\\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\\n  };\\n}\\n\\nfunction attrFunctionNS(fullname, interpolate, value) {\\n  var string00,\\n      string10,\\n      interpolate0;\\n  return function() {\\n    var string0, value1 = value(this), string1;\\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\\n    string0 = this.getAttributeNS(fullname.space, fullname.local);\\n    string1 = value1 + \\\"\\\";\\n    return string0 === string1 ? null\\n        : string0 === string00 && string1 === string10 ? interpolate0\\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\\n  };\\n}\\n\\nexport default function(name, value) {\\n  var fullname = namespace(name), i = fullname === \\\"transform\\\" ? interpolateTransform : interpolate;\\n  return this.attrTween(name, typeof value === \\\"function\\\"\\n      ? (fullname.local ? attrFunctionNS : attrFunction)(fullname, i, tweenValue(this, \\\"attr.\\\" + name, value))\\n      : value == null ? (fullname.local ? attrRemoveNS : attrRemove)(fullname)\\n      : (fullname.local ? attrConstantNS : attrConstant)(fullname, i, value));\\n}\\n\",\"import {namespace} from \\\"d3-selection\\\";\\n\\nfunction attrInterpolate(name, i) {\\n  return function(t) {\\n    this.setAttribute(name, i(t));\\n  };\\n}\\n\\nfunction attrInterpolateNS(fullname, i) {\\n  return function(t) {\\n    this.setAttributeNS(fullname.space, fullname.local, i(t));\\n  };\\n}\\n\\nfunction attrTweenNS(fullname, value) {\\n  var t0, i0;\\n  function tween() {\\n    var i = value.apply(this, arguments);\\n    if (i !== i0) t0 = (i0 = i) && attrInterpolateNS(fullname, i);\\n    return t0;\\n  }\\n  tween._value = value;\\n  return tween;\\n}\\n\\nfunction attrTween(name, value) {\\n  var t0, i0;\\n  function tween() {\\n    var i = value.apply(this, arguments);\\n    if (i !== i0) t0 = (i0 = i) && attrInterpolate(name, i);\\n    return t0;\\n  }\\n  tween._value = value;\\n  return tween;\\n}\\n\\nexport default function(name, value) {\\n  var key = \\\"attr.\\\" + name;\\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\\n  if (value == null) return this.tween(key, null);\\n  if (typeof value !== \\\"function\\\") throw new Error;\\n  var fullname = namespace(name);\\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\\n}\\n\",\"function styleInterpolate(name, i, priority) {\\n  return function(t) {\\n    this.style.setProperty(name, i(t), priority);\\n  };\\n}\\n\\nfunction styleTween(name, value, priority) {\\n  var t, i0;\\n  function tween() {\\n    var i = value.apply(this, arguments);\\n    if (i !== i0) t = (i0 = i) && styleInterpolate(name, i, priority);\\n    return t;\\n  }\\n  tween._value = value;\\n  return tween;\\n}\\n\\nexport default function(name, value, priority) {\\n  var key = \\\"style.\\\" + (name += \\\"\\\");\\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\\n  if (value == null) return this.tween(key, null);\\n  if (typeof value !== \\\"function\\\") throw new Error;\\n  return this.tween(key, styleTween(name, value, priority == null ? \\\"\\\" : priority));\\n}\\n\",\"import {get, init} from \\\"./schedule\\\";\\n\\nfunction delayFunction(id, value) {\\n  return function() {\\n    init(this, id).delay = +value.apply(this, arguments);\\n  };\\n}\\n\\nfunction delayConstant(id, value) {\\n  return value = +value, function() {\\n    init(this, id).delay = value;\\n  };\\n}\\n\\nexport default function(value) {\\n  var id = this._id;\\n\\n  return arguments.length\\n      ? this.each((typeof value === \\\"function\\\"\\n          ? delayFunction\\n          : delayConstant)(id, value))\\n      : get(this.node(), id).delay;\\n}\\n\",\"import {get, set} from \\\"./schedule\\\";\\n\\nfunction durationFunction(id, value) {\\n  return function() {\\n    set(this, id).duration = +value.apply(this, arguments);\\n  };\\n}\\n\\nfunction durationConstant(id, value) {\\n  return value = +value, function() {\\n    set(this, id).duration = value;\\n  };\\n}\\n\\nexport default function(value) {\\n  var id = this._id;\\n\\n  return arguments.length\\n      ? this.each((typeof value === \\\"function\\\"\\n          ? durationFunction\\n          : durationConstant)(id, value))\\n      : get(this.node(), id).duration;\\n}\\n\",\"import {get, set} from \\\"./schedule\\\";\\n\\nfunction easeConstant(id, value) {\\n  if (typeof value !== \\\"function\\\") throw new Error;\\n  return function() {\\n    set(this, id).ease = value;\\n  };\\n}\\n\\nexport default function(value) {\\n  var id = this._id;\\n\\n  return arguments.length\\n      ? this.each(easeConstant(id, value))\\n      : get(this.node(), id).ease;\\n}\\n\",\"import {set} from \\\"./schedule\\\";\\n\\nexport default function() {\\n  var on0, on1, that = this, id = that._id, size = that.size();\\n  return new Promise(function(resolve, reject) {\\n    var cancel = {value: reject},\\n        end = {value: function() { if (--size === 0) resolve(); }};\\n\\n    that.each(function() {\\n      var schedule = set(this, id),\\n          on = schedule.on;\\n\\n      // If this node shared a dispatch with the previous node,\\n      // just assign the updated shared dispatch and we’re done!\\n      // Otherwise, copy-on-write.\\n      if (on !== on0) {\\n        on1 = (on0 = on).copy();\\n        on1._.cancel.push(cancel);\\n        on1._.interrupt.push(cancel);\\n        on1._.end.push(end);\\n      }\\n\\n      schedule.on = on1;\\n    });\\n  });\\n}\\n\",\"var exponent = 3;\\n\\nexport var polyIn = (function custom(e) {\\n  e = +e;\\n\\n  function polyIn(t) {\\n    return Math.pow(t, e);\\n  }\\n\\n  polyIn.exponent = custom;\\n\\n  return polyIn;\\n})(exponent);\\n\\nexport var polyOut = (function custom(e) {\\n  e = +e;\\n\\n  function polyOut(t) {\\n    return 1 - Math.pow(1 - t, e);\\n  }\\n\\n  polyOut.exponent = custom;\\n\\n  return polyOut;\\n})(exponent);\\n\\nexport var polyInOut = (function custom(e) {\\n  e = +e;\\n\\n  function polyInOut(t) {\\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\\n  }\\n\\n  polyInOut.exponent = custom;\\n\\n  return polyInOut;\\n})(exponent);\\n\",\"var pi = Math.PI,\\n    halfPi = pi / 2;\\n\\nexport function sinIn(t) {\\n  return 1 - Math.cos(t * halfPi);\\n}\\n\\nexport function sinOut(t) {\\n  return Math.sin(t * halfPi);\\n}\\n\\nexport function sinInOut(t) {\\n  return (1 - Math.cos(pi * t)) / 2;\\n}\\n\",\"export function expIn(t) {\\n  return Math.pow(2, 10 * t - 10);\\n}\\n\\nexport function expOut(t) {\\n  return 1 - Math.pow(2, -10 * t);\\n}\\n\\nexport function expInOut(t) {\\n  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\\n}\\n\",\"export function circleIn(t) {\\n  return 1 - Math.sqrt(1 - t * t);\\n}\\n\\nexport function circleOut(t) {\\n  return Math.sqrt(1 - --t * t);\\n}\\n\\nexport function circleInOut(t) {\\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\\n}\\n\",\"var b1 = 4 / 11,\\n    b2 = 6 / 11,\\n    b3 = 8 / 11,\\n    b4 = 3 / 4,\\n    b5 = 9 / 11,\\n    b6 = 10 / 11,\\n    b7 = 15 / 16,\\n    b8 = 21 / 22,\\n    b9 = 63 / 64,\\n    b0 = 1 / b1 / b1;\\n\\nexport function bounceIn(t) {\\n  return 1 - bounceOut(1 - t);\\n}\\n\\nexport function bounceOut(t) {\\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\\n}\\n\\nexport function bounceInOut(t) {\\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\\n}\\n\",\"var overshoot = 1.70158;\\n\\nexport var backIn = (function custom(s) {\\n  s = +s;\\n\\n  function backIn(t) {\\n    return t * t * ((s + 1) * t - s);\\n  }\\n\\n  backIn.overshoot = custom;\\n\\n  return backIn;\\n})(overshoot);\\n\\nexport var backOut = (function custom(s) {\\n  s = +s;\\n\\n  function backOut(t) {\\n    return --t * t * ((s + 1) * t + s) + 1;\\n  }\\n\\n  backOut.overshoot = custom;\\n\\n  return backOut;\\n})(overshoot);\\n\\nexport var backInOut = (function custom(s) {\\n  s = +s;\\n\\n  function backInOut(t) {\\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\\n  }\\n\\n  backInOut.overshoot = custom;\\n\\n  return backInOut;\\n})(overshoot);\\n\",\"var tau = 2 * Math.PI,\\n    amplitude = 1,\\n    period = 0.3;\\n\\nexport var elasticIn = (function custom(a, p) {\\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\\n\\n  function elasticIn(t) {\\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\\n  }\\n\\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\\n  elasticIn.period = function(p) { return custom(a, p); };\\n\\n  return elasticIn;\\n})(amplitude, period);\\n\\nexport var elasticOut = (function custom(a, p) {\\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\\n\\n  function elasticOut(t) {\\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\\n  }\\n\\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\\n  elasticOut.period = function(p) { return custom(a, p); };\\n\\n  return elasticOut;\\n})(amplitude, period);\\n\\nexport var elasticInOut = (function custom(a, p) {\\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\\n\\n  function elasticInOut(t) {\\n    return ((t = t * 2 - 1) < 0\\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\\n  }\\n\\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\\n  elasticInOut.period = function(p) { return custom(a, p); };\\n\\n  return elasticInOut;\\n})(amplitude, period);\\n\",\"import {Transition, newId} from \\\"../transition/index\\\";\\nimport schedule from \\\"../transition/schedule\\\";\\nimport {easeCubicInOut} from \\\"d3-ease\\\";\\nimport {now} from \\\"d3-timer\\\";\\n\\nvar defaultTiming = {\\n  time: null, // Set on use.\\n  delay: 0,\\n  duration: 250,\\n  ease: easeCubicInOut\\n};\\n\\nfunction inherit(node, id) {\\n  var timing;\\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\\n    if (!(node = node.parentNode)) {\\n      return defaultTiming.time = now(), defaultTiming;\\n    }\\n  }\\n  return timing;\\n}\\n\\nexport default function(name) {\\n  var id,\\n      timing;\\n\\n  if (name instanceof Transition) {\\n    id = name._id, name = name._name;\\n  } else {\\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \\\"\\\";\\n  }\\n\\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\\n      if (node = group[i]) {\\n        schedule(node, name, id, i, group, timing || inherit(node, id));\\n      }\\n    }\\n  }\\n\\n  return new Transition(groups, this._parents, name, id);\\n}\\n\",\"import {selection} from \\\"d3-selection\\\";\\nimport selection_interrupt from \\\"./interrupt\\\";\\nimport selection_transition from \\\"./transition\\\";\\n\\nselection.prototype.interrupt = selection_interrupt;\\nselection.prototype.transition = selection_transition;\\n\",\"import interrupt from \\\"../interrupt\\\";\\n\\nexport default function(name) {\\n  return this.each(function() {\\n    interrupt(this, name);\\n  });\\n}\\n\",\"import {Transition} from \\\"./transition/index\\\";\\nimport {SCHEDULED} from \\\"./transition/schedule\\\";\\n\\nvar root = [null];\\n\\nexport default function(node, name) {\\n  var schedules = node.__transition,\\n      schedule,\\n      i;\\n\\n  if (schedules) {\\n    name = name == null ? null : name + \\\"\\\";\\n    for (i in schedules) {\\n      if ((schedule = schedules[i]).state > SCHEDULED && schedule.name === name) {\\n        return new Transition([[node]], root, name, +i);\\n      }\\n    }\\n  }\\n\\n  return null;\\n}\\n\",\"export default function(x) {\\n  return function() {\\n    return x;\\n  };\\n}\\n\",\"export default function(target, type, selection) {\\n  this.target = target;\\n  this.type = type;\\n  this.selection = selection;\\n}\\n\",\"import {event} from \\\"d3-selection\\\";\\n\\nexport function nopropagation() {\\n  event.stopImmediatePropagation();\\n}\\n\\nexport default function() {\\n  event.preventDefault();\\n  event.stopImmediatePropagation();\\n}\\n\",\"import {dispatch} from \\\"d3-dispatch\\\";\\nimport {dragDisable, dragEnable} from \\\"d3-drag\\\";\\nimport {interpolate} from \\\"d3-interpolate\\\";\\nimport {customEvent, event, mouse, select} from \\\"d3-selection\\\";\\nimport {interrupt} from \\\"d3-transition\\\";\\nimport constant from \\\"./constant\\\";\\nimport BrushEvent from \\\"./event\\\";\\nimport noevent, {nopropagation} from \\\"./noevent\\\";\\n\\nvar MODE_DRAG = {name: \\\"drag\\\"},\\n    MODE_SPACE = {name: \\\"space\\\"},\\n    MODE_HANDLE = {name: \\\"handle\\\"},\\n    MODE_CENTER = {name: \\\"center\\\"};\\n\\nvar X = {\\n  name: \\\"x\\\",\\n  handles: [\\\"e\\\", \\\"w\\\"].map(type),\\n  input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\\n  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\\n};\\n\\nvar Y = {\\n  name: \\\"y\\\",\\n  handles: [\\\"n\\\", \\\"s\\\"].map(type),\\n  input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\\n  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\\n};\\n\\nvar XY = {\\n  name: \\\"xy\\\",\\n  handles: [\\\"n\\\", \\\"e\\\", \\\"s\\\", \\\"w\\\", \\\"nw\\\", \\\"ne\\\", \\\"se\\\", \\\"sw\\\"].map(type),\\n  input: function(xy) { return xy; },\\n  output: function(xy) { return xy; }\\n};\\n\\nvar cursors = {\\n  overlay: \\\"crosshair\\\",\\n  selection: \\\"move\\\",\\n  n: \\\"ns-resize\\\",\\n  e: \\\"ew-resize\\\",\\n  s: \\\"ns-resize\\\",\\n  w: \\\"ew-resize\\\",\\n  nw: \\\"nwse-resize\\\",\\n  ne: \\\"nesw-resize\\\",\\n  se: \\\"nwse-resize\\\",\\n  sw: \\\"nesw-resize\\\"\\n};\\n\\nvar flipX = {\\n  e: \\\"w\\\",\\n  w: \\\"e\\\",\\n  nw: \\\"ne\\\",\\n  ne: \\\"nw\\\",\\n  se: \\\"sw\\\",\\n  sw: \\\"se\\\"\\n};\\n\\nvar flipY = {\\n  n: \\\"s\\\",\\n  s: \\\"n\\\",\\n  nw: \\\"sw\\\",\\n  ne: \\\"se\\\",\\n  se: \\\"ne\\\",\\n  sw: \\\"nw\\\"\\n};\\n\\nvar signsX = {\\n  overlay: +1,\\n  selection: +1,\\n  n: null,\\n  e: +1,\\n  s: null,\\n  w: -1,\\n  nw: -1,\\n  ne: +1,\\n  se: +1,\\n  sw: -1\\n};\\n\\nvar signsY = {\\n  overlay: +1,\\n  selection: +1,\\n  n: -1,\\n  e: null,\\n  s: +1,\\n  w: null,\\n  nw: -1,\\n  ne: -1,\\n  se: +1,\\n  sw: +1\\n};\\n\\nfunction type(t) {\\n  return {type: t};\\n}\\n\\n// Ignore right-click, since that should open the context menu.\\nfunction defaultFilter() {\\n  return !event.button;\\n}\\n\\nfunction defaultExtent() {\\n  var svg = this.ownerSVGElement || this;\\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\\n}\\n\\n// Like d3.local, but with the name “__brush” rather than auto-generated.\\nfunction local(node) {\\n  while (!node.__brush) if (!(node = node.parentNode)) return;\\n  return node.__brush;\\n}\\n\\nfunction empty(extent) {\\n  return extent[0][0] === extent[1][0]\\n      || extent[0][1] === extent[1][1];\\n}\\n\\nexport function brushSelection(node) {\\n  var state = node.__brush;\\n  return state ? state.dim.output(state.selection) : null;\\n}\\n\\nexport function brushX() {\\n  return brush(X);\\n}\\n\\nexport function brushY() {\\n  return brush(Y);\\n}\\n\\nexport default function() {\\n  return brush(XY);\\n}\\n\\nfunction brush(dim) {\\n  var extent = defaultExtent,\\n      filter = defaultFilter,\\n      listeners = dispatch(brush, \\\"start\\\", \\\"brush\\\", \\\"end\\\"),\\n      handleSize = 6,\\n      touchending;\\n\\n  function brush(group) {\\n    var overlay = group\\n        .property(\\\"__brush\\\", initialize)\\n      .selectAll(\\\".overlay\\\")\\n      .data([type(\\\"overlay\\\")]);\\n\\n    overlay.enter().append(\\\"rect\\\")\\n        .attr(\\\"class\\\", \\\"overlay\\\")\\n        .attr(\\\"pointer-events\\\", \\\"all\\\")\\n        .attr(\\\"cursor\\\", cursors.overlay)\\n      .merge(overlay)\\n        .each(function() {\\n          var extent = local(this).extent;\\n          select(this)\\n              .attr(\\\"x\\\", extent[0][0])\\n              .attr(\\\"y\\\", extent[0][1])\\n              .attr(\\\"width\\\", extent[1][0] - extent[0][0])\\n              .attr(\\\"height\\\", extent[1][1] - extent[0][1]);\\n        });\\n\\n    group.selectAll(\\\".selection\\\")\\n      .data([type(\\\"selection\\\")])\\n      .enter().append(\\\"rect\\\")\\n        .attr(\\\"class\\\", \\\"selection\\\")\\n        .attr(\\\"cursor\\\", cursors.selection)\\n        .attr(\\\"fill\\\", \\\"#777\\\")\\n        .attr(\\\"fill-opacity\\\", 0.3)\\n        .attr(\\\"stroke\\\", \\\"#fff\\\")\\n        .attr(\\\"shape-rendering\\\", \\\"crispEdges\\\");\\n\\n    var handle = group.selectAll(\\\".handle\\\")\\n      .data(dim.handles, function(d) { return d.type; });\\n\\n    handle.exit().remove();\\n\\n    handle.enter().append(\\\"rect\\\")\\n        .attr(\\\"class\\\", function(d) { return \\\"handle handle--\\\" + d.type; })\\n        .attr(\\\"cursor\\\", function(d) { return cursors[d.type]; });\\n\\n    group\\n        .each(redraw)\\n        .attr(\\\"fill\\\", \\\"none\\\")\\n        .attr(\\\"pointer-events\\\", \\\"all\\\")\\n        .style(\\\"-webkit-tap-highlight-color\\\", \\\"rgba(0,0,0,0)\\\")\\n        .on(\\\"mousedown.brush touchstart.brush\\\", started);\\n  }\\n\\n  brush.move = function(group, selection) {\\n    if (group.selection) {\\n      group\\n          .on(\\\"start.brush\\\", function() { emitter(this, arguments).beforestart().start(); })\\n          .on(\\\"interrupt.brush end.brush\\\", function() { emitter(this, arguments).end(); })\\n          .tween(\\\"brush\\\", function() {\\n            var that = this,\\n                state = that.__brush,\\n                emit = emitter(that, arguments),\\n                selection0 = state.selection,\\n                selection1 = dim.input(typeof selection === \\\"function\\\" ? selection.apply(this, arguments) : selection, state.extent),\\n                i = interpolate(selection0, selection1);\\n\\n            function tween(t) {\\n              state.selection = t === 1 && empty(selection1) ? null : i(t);\\n              redraw.call(that);\\n              emit.brush();\\n            }\\n\\n            return selection0 && selection1 ? tween : tween(1);\\n          });\\n    } else {\\n      group\\n          .each(function() {\\n            var that = this,\\n                args = arguments,\\n                state = that.__brush,\\n                selection1 = dim.input(typeof selection === \\\"function\\\" ? selection.apply(that, args) : selection, state.extent),\\n                emit = emitter(that, args).beforestart();\\n\\n            interrupt(that);\\n            state.selection = selection1 == null || empty(selection1) ? null : selection1;\\n            redraw.call(that);\\n            emit.start().brush().end();\\n          });\\n    }\\n  };\\n\\n  function redraw() {\\n    var group = select(this),\\n        selection = local(this).selection;\\n\\n    if (selection) {\\n      group.selectAll(\\\".selection\\\")\\n          .style(\\\"display\\\", null)\\n          .attr(\\\"x\\\", selection[0][0])\\n          .attr(\\\"y\\\", selection[0][1])\\n          .attr(\\\"width\\\", selection[1][0] - selection[0][0])\\n          .attr(\\\"height\\\", selection[1][1] - selection[0][1]);\\n\\n      group.selectAll(\\\".handle\\\")\\n          .style(\\\"display\\\", null)\\n          .attr(\\\"x\\\", function(d) { return d.type[d.type.length - 1] === \\\"e\\\" ? selection[1][0] - handleSize / 2 : selection[0][0] - handleSize / 2; })\\n          .attr(\\\"y\\\", function(d) { return d.type[0] === \\\"s\\\" ? selection[1][1] - handleSize / 2 : selection[0][1] - handleSize / 2; })\\n          .attr(\\\"width\\\", function(d) { return d.type === \\\"n\\\" || d.type === \\\"s\\\" ? selection[1][0] - selection[0][0] + handleSize : handleSize; })\\n          .attr(\\\"height\\\", function(d) { return d.type === \\\"e\\\" || d.type === \\\"w\\\" ? selection[1][1] - selection[0][1] + handleSize : handleSize; });\\n    }\\n\\n    else {\\n      group.selectAll(\\\".selection,.handle\\\")\\n          .style(\\\"display\\\", \\\"none\\\")\\n          .attr(\\\"x\\\", null)\\n          .attr(\\\"y\\\", null)\\n          .attr(\\\"width\\\", null)\\n          .attr(\\\"height\\\", null);\\n    }\\n  }\\n\\n  function emitter(that, args) {\\n    return that.__brush.emitter || new Emitter(that, args);\\n  }\\n\\n  function Emitter(that, args) {\\n    this.that = that;\\n    this.args = args;\\n    this.state = that.__brush;\\n    this.active = 0;\\n  }\\n\\n  Emitter.prototype = {\\n    beforestart: function() {\\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\\n      return this;\\n    },\\n    start: function() {\\n      if (this.starting) this.starting = false, this.emit(\\\"start\\\");\\n      return this;\\n    },\\n    brush: function() {\\n      this.emit(\\\"brush\\\");\\n      return this;\\n    },\\n    end: function() {\\n      if (--this.active === 0) delete this.state.emitter, this.emit(\\\"end\\\");\\n      return this;\\n    },\\n    emit: function(type) {\\n      customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\\n    }\\n  };\\n\\n  function started() {\\n    if (event.touches) { if (event.changedTouches.length < event.touches.length) return noevent(); }\\n    else if (touchending) return;\\n    if (!filter.apply(this, arguments)) return;\\n\\n    var that = this,\\n        type = event.target.__data__.type,\\n        mode = (event.metaKey ? type = \\\"overlay\\\" : type) === \\\"selection\\\" ? MODE_DRAG : (event.altKey ? MODE_CENTER : MODE_HANDLE),\\n        signX = dim === Y ? null : signsX[type],\\n        signY = dim === X ? null : signsY[type],\\n        state = local(that),\\n        extent = state.extent,\\n        selection = state.selection,\\n        W = extent[0][0], w0, w1,\\n        N = extent[0][1], n0, n1,\\n        E = extent[1][0], e0, e1,\\n        S = extent[1][1], s0, s1,\\n        dx,\\n        dy,\\n        moving,\\n        shifting = signX && signY && event.shiftKey,\\n        lockX,\\n        lockY,\\n        point0 = mouse(that),\\n        point = point0,\\n        emit = emitter(that, arguments).beforestart();\\n\\n    if (type === \\\"overlay\\\") {\\n      state.selection = selection = [\\n        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\\n        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\\n      ];\\n    } else {\\n      w0 = selection[0][0];\\n      n0 = selection[0][1];\\n      e0 = selection[1][0];\\n      s0 = selection[1][1];\\n    }\\n\\n    w1 = w0;\\n    n1 = n0;\\n    e1 = e0;\\n    s1 = s0;\\n\\n    var group = select(that)\\n        .attr(\\\"pointer-events\\\", \\\"none\\\");\\n\\n    var overlay = group.selectAll(\\\".overlay\\\")\\n        .attr(\\\"cursor\\\", cursors[type]);\\n\\n    if (event.touches) {\\n      group\\n          .on(\\\"touchmove.brush\\\", moved, true)\\n          .on(\\\"touchend.brush touchcancel.brush\\\", ended, true);\\n    } else {\\n      var view = select(event.view)\\n          .on(\\\"keydown.brush\\\", keydowned, true)\\n          .on(\\\"keyup.brush\\\", keyupped, true)\\n          .on(\\\"mousemove.brush\\\", moved, true)\\n          .on(\\\"mouseup.brush\\\", ended, true);\\n\\n      dragDisable(event.view);\\n    }\\n\\n    nopropagation();\\n    interrupt(that);\\n    redraw.call(that);\\n    emit.start();\\n\\n    function moved() {\\n      var point1 = mouse(that);\\n      if (shifting && !lockX && !lockY) {\\n        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\\n        else lockX = true;\\n      }\\n      point = point1;\\n      moving = true;\\n      noevent();\\n      move();\\n    }\\n\\n    function move() {\\n      var t;\\n\\n      dx = point[0] - point0[0];\\n      dy = point[1] - point0[1];\\n\\n      switch (mode) {\\n        case MODE_SPACE:\\n        case MODE_DRAG: {\\n          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\\n          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\\n          break;\\n        }\\n        case MODE_HANDLE: {\\n          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\\n          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\\n          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\\n          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\\n          break;\\n        }\\n        case MODE_CENTER: {\\n          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\\n          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\\n          break;\\n        }\\n      }\\n\\n      if (e1 < w1) {\\n        signX *= -1;\\n        t = w0, w0 = e0, e0 = t;\\n        t = w1, w1 = e1, e1 = t;\\n        if (type in flipX) overlay.attr(\\\"cursor\\\", cursors[type = flipX[type]]);\\n      }\\n\\n      if (s1 < n1) {\\n        signY *= -1;\\n        t = n0, n0 = s0, s0 = t;\\n        t = n1, n1 = s1, s1 = t;\\n        if (type in flipY) overlay.attr(\\\"cursor\\\", cursors[type = flipY[type]]);\\n      }\\n\\n      if (state.selection) selection = state.selection; // May be set by brush.move!\\n      if (lockX) w1 = selection[0][0], e1 = selection[1][0];\\n      if (lockY) n1 = selection[0][1], s1 = selection[1][1];\\n\\n      if (selection[0][0] !== w1\\n          || selection[0][1] !== n1\\n          || selection[1][0] !== e1\\n          || selection[1][1] !== s1) {\\n        state.selection = [[w1, n1], [e1, s1]];\\n        redraw.call(that);\\n        emit.brush();\\n      }\\n    }\\n\\n    function ended() {\\n      nopropagation();\\n      if (event.touches) {\\n        if (event.touches.length) return;\\n        if (touchending) clearTimeout(touchending);\\n        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\\n        group.on(\\\"touchmove.brush touchend.brush touchcancel.brush\\\", null);\\n      } else {\\n        dragEnable(event.view, moving);\\n        view.on(\\\"keydown.brush keyup.brush mousemove.brush mouseup.brush\\\", null);\\n      }\\n      group.attr(\\\"pointer-events\\\", \\\"all\\\");\\n      overlay.attr(\\\"cursor\\\", cursors.overlay);\\n      if (state.selection) selection = state.selection; // May be set by brush.move (on start)!\\n      if (empty(selection)) state.selection = null, redraw.call(that);\\n      emit.end();\\n    }\\n\\n    function keydowned() {\\n      switch (event.keyCode) {\\n        case 16: { // SHIFT\\n          shifting = signX && signY;\\n          break;\\n        }\\n        case 18: { // ALT\\n          if (mode === MODE_HANDLE) {\\n            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\\n            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\\n            mode = MODE_CENTER;\\n            move();\\n          }\\n          break;\\n        }\\n        case 32: { // SPACE; takes priority over ALT\\n          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\\n            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\\n            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\\n            mode = MODE_SPACE;\\n            overlay.attr(\\\"cursor\\\", cursors.selection);\\n            move();\\n          }\\n          break;\\n        }\\n        default: return;\\n      }\\n      noevent();\\n    }\\n\\n    function keyupped() {\\n      switch (event.keyCode) {\\n        case 16: { // SHIFT\\n          if (shifting) {\\n            lockX = lockY = shifting = false;\\n            move();\\n          }\\n          break;\\n        }\\n        case 18: { // ALT\\n          if (mode === MODE_CENTER) {\\n            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\\n            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\\n            mode = MODE_HANDLE;\\n            move();\\n          }\\n          break;\\n        }\\n        case 32: { // SPACE\\n          if (mode === MODE_SPACE) {\\n            if (event.altKey) {\\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\\n              mode = MODE_CENTER;\\n            } else {\\n              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\\n              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\\n              mode = MODE_HANDLE;\\n            }\\n            overlay.attr(\\\"cursor\\\", cursors[type]);\\n            move();\\n          }\\n          break;\\n        }\\n        default: return;\\n      }\\n      noevent();\\n    }\\n  }\\n\\n  function initialize() {\\n    var state = this.__brush || {selection: null};\\n    state.extent = extent.apply(this, arguments);\\n    state.dim = dim;\\n    return state;\\n  }\\n\\n  brush.extent = function(_) {\\n    return arguments.length ? (extent = typeof _ === \\\"function\\\" ? _ : constant([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\\n  };\\n\\n  brush.filter = function(_) {\\n    return arguments.length ? (filter = typeof _ === \\\"function\\\" ? _ : constant(!!_), brush) : filter;\\n  };\\n\\n  brush.handleSize = function(_) {\\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\\n  };\\n\\n  brush.on = function() {\\n    var value = listeners.on.apply(listeners, arguments);\\n    return value === listeners ? brush : value;\\n  };\\n\\n  return brush;\\n}\\n\",\"export var cos = Math.cos;\\nexport var sin = Math.sin;\\nexport var pi = Math.PI;\\nexport var halfPi = pi / 2;\\nexport var tau = pi * 2;\\nexport var max = Math.max;\\n\",\"import {range} from \\\"d3-array\\\";\\nimport {max, tau} from \\\"./math\\\";\\n\\nfunction compareValue(compare) {\\n  return function(a, b) {\\n    return compare(\\n      a.source.value + a.target.value,\\n      b.source.value + b.target.value\\n    );\\n  };\\n}\\n\\nexport default function() {\\n  var padAngle = 0,\\n      sortGroups = null,\\n      sortSubgroups = null,\\n      sortChords = null;\\n\\n  function chord(matrix) {\\n    var n = matrix.length,\\n        groupSums = [],\\n        groupIndex = range(n),\\n        subgroupIndex = [],\\n        chords = [],\\n        groups = chords.groups = new Array(n),\\n        subgroups = new Array(n * n),\\n        k,\\n        x,\\n        x0,\\n        dx,\\n        i,\\n        j;\\n\\n    // Compute the sum.\\n    k = 0, i = -1; while (++i < n) {\\n      x = 0, j = -1; while (++j < n) {\\n        x += matrix[i][j];\\n      }\\n      groupSums.push(x);\\n      subgroupIndex.push(range(n));\\n      k += x;\\n    }\\n\\n    // Sort groups…\\n    if (sortGroups) groupIndex.sort(function(a, b) {\\n      return sortGroups(groupSums[a], groupSums[b]);\\n    });\\n\\n    // Sort subgroups…\\n    if (sortSubgroups) subgroupIndex.forEach(function(d, i) {\\n      d.sort(function(a, b) {\\n        return sortSubgroups(matrix[i][a], matrix[i][b]);\\n      });\\n    });\\n\\n    // Convert the sum to scaling factor for [0, 2pi].\\n    // TODO Allow start and end angle to be specified?\\n    // TODO Allow padding to be specified as percentage?\\n    k = max(0, tau - padAngle * n) / k;\\n    dx = k ? padAngle : tau / n;\\n\\n    // Compute the start and end angle for each group and subgroup.\\n    // Note: Opera has a bug reordering object literal properties!\\n    x = 0, i = -1; while (++i < n) {\\n      x0 = x, j = -1; while (++j < n) {\\n        var di = groupIndex[i],\\n            dj = subgroupIndex[di][j],\\n            v = matrix[di][dj],\\n            a0 = x,\\n            a1 = x += v * k;\\n        subgroups[dj * n + di] = {\\n          index: di,\\n          subindex: dj,\\n          startAngle: a0,\\n          endAngle: a1,\\n          value: v\\n        };\\n      }\\n      groups[di] = {\\n        index: di,\\n        startAngle: x0,\\n        endAngle: x,\\n        value: groupSums[di]\\n      };\\n      x += dx;\\n    }\\n\\n    // Generate chords for each (non-empty) subgroup-subgroup link.\\n    i = -1; while (++i < n) {\\n      j = i - 1; while (++j < n) {\\n        var source = subgroups[j * n + i],\\n            target = subgroups[i * n + j];\\n        if (source.value || target.value) {\\n          chords.push(source.value < target.value\\n              ? {source: target, target: source}\\n              : {source: source, target: target});\\n        }\\n      }\\n    }\\n\\n    return sortChords ? chords.sort(sortChords) : chords;\\n  }\\n\\n  chord.padAngle = function(_) {\\n    return arguments.length ? (padAngle = max(0, _), chord) : padAngle;\\n  };\\n\\n  chord.sortGroups = function(_) {\\n    return arguments.length ? (sortGroups = _, chord) : sortGroups;\\n  };\\n\\n  chord.sortSubgroups = function(_) {\\n    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\\n  };\\n\\n  chord.sortChords = function(_) {\\n    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\\n  };\\n\\n  return chord;\\n}\\n\",\"export var slice = Array.prototype.slice;\\n\",\"export default function(x) {\\n  return function() {\\n    return x;\\n  };\\n}\\n\",\"var pi = Math.PI,\\n    tau = 2 * pi,\\n    epsilon = 1e-6,\\n    tauEpsilon = tau - epsilon;\\n\\nfunction Path() {\\n  this._x0 = this._y0 = // start of current subpath\\n  this._x1 = this._y1 = null; // end of current subpath\\n  this._ = \\\"\\\";\\n}\\n\\nfunction path() {\\n  return new Path;\\n}\\n\\nPath.prototype = path.prototype = {\\n  constructor: Path,\\n  moveTo: function(x, y) {\\n    this._ += \\\"M\\\" + (this._x0 = this._x1 = +x) + \\\",\\\" + (this._y0 = this._y1 = +y);\\n  },\\n  closePath: function() {\\n    if (this._x1 !== null) {\\n      this._x1 = this._x0, this._y1 = this._y0;\\n      this._ += \\\"Z\\\";\\n    }\\n  },\\n  lineTo: function(x, y) {\\n    this._ += \\\"L\\\" + (this._x1 = +x) + \\\",\\\" + (this._y1 = +y);\\n  },\\n  quadraticCurveTo: function(x1, y1, x, y) {\\n    this._ += \\\"Q\\\" + (+x1) + \\\",\\\" + (+y1) + \\\",\\\" + (this._x1 = +x) + \\\",\\\" + (this._y1 = +y);\\n  },\\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\\n    this._ += \\\"C\\\" + (+x1) + \\\",\\\" + (+y1) + \\\",\\\" + (+x2) + \\\",\\\" + (+y2) + \\\",\\\" + (this._x1 = +x) + \\\",\\\" + (this._y1 = +y);\\n  },\\n  arcTo: function(x1, y1, x2, y2, r) {\\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\\n    var x0 = this._x1,\\n        y0 = this._y1,\\n        x21 = x2 - x1,\\n        y21 = y2 - y1,\\n        x01 = x0 - x1,\\n        y01 = y0 - y1,\\n        l01_2 = x01 * x01 + y01 * y01;\\n\\n    // Is the radius negative? Error.\\n    if (r < 0) throw new Error(\\\"negative radius: \\\" + r);\\n\\n    // Is this path empty? Move to (x1,y1).\\n    if (this._x1 === null) {\\n      this._ += \\\"M\\\" + (this._x1 = x1) + \\\",\\\" + (this._y1 = y1);\\n    }\\n\\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\\n    else if (!(l01_2 > epsilon));\\n\\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\\n    // Or, is the radius zero? Line to (x1,y1).\\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\\n      this._ += \\\"L\\\" + (this._x1 = x1) + \\\",\\\" + (this._y1 = y1);\\n    }\\n\\n    // Otherwise, draw an arc!\\n    else {\\n      var x20 = x2 - x0,\\n          y20 = y2 - y0,\\n          l21_2 = x21 * x21 + y21 * y21,\\n          l20_2 = x20 * x20 + y20 * y20,\\n          l21 = Math.sqrt(l21_2),\\n          l01 = Math.sqrt(l01_2),\\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\\n          t01 = l / l01,\\n          t21 = l / l21;\\n\\n      // If the start tangent is not coincident with (x0,y0), line to.\\n      if (Math.abs(t01 - 1) > epsilon) {\\n        this._ += \\\"L\\\" + (x1 + t01 * x01) + \\\",\\\" + (y1 + t01 * y01);\\n      }\\n\\n      this._ += \\\"A\\\" + r + \\\",\\\" + r + \\\",0,0,\\\" + (+(y01 * x20 > x01 * y20)) + \\\",\\\" + (this._x1 = x1 + t21 * x21) + \\\",\\\" + (this._y1 = y1 + t21 * y21);\\n    }\\n  },\\n  arc: function(x, y, r, a0, a1, ccw) {\\n    x = +x, y = +y, r = +r;\\n    var dx = r * Math.cos(a0),\\n        dy = r * Math.sin(a0),\\n        x0 = x + dx,\\n        y0 = y + dy,\\n        cw = 1 ^ ccw,\\n        da = ccw ? a0 - a1 : a1 - a0;\\n\\n    // Is the radius negative? Error.\\n    if (r < 0) throw new Error(\\\"negative radius: \\\" + r);\\n\\n    // Is this path empty? Move to (x0,y0).\\n    if (this._x1 === null) {\\n      this._ += \\\"M\\\" + x0 + \\\",\\\" + y0;\\n    }\\n\\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\\n      this._ += \\\"L\\\" + x0 + \\\",\\\" + y0;\\n    }\\n\\n    // Is this arc empty? We’re done.\\n    if (!r) return;\\n\\n    // Does the angle go the wrong way? Flip the direction.\\n    if (da < 0) da = da % tau + tau;\\n\\n    // Is this a complete circle? Draw two arcs to complete the circle.\\n    if (da > tauEpsilon) {\\n      this._ += \\\"A\\\" + r + \\\",\\\" + r + \\\",0,1,\\\" + cw + \\\",\\\" + (x - dx) + \\\",\\\" + (y - dy) + \\\"A\\\" + r + \\\",\\\" + r + \\\",0,1,\\\" + cw + \\\",\\\" + (this._x1 = x0) + \\\",\\\" + (this._y1 = y0);\\n    }\\n\\n    // Is this arc non-empty? Draw an arc!\\n    else if (da > epsilon) {\\n      this._ += \\\"A\\\" + r + \\\",\\\" + r + \\\",0,\\\" + (+(da >= pi)) + \\\",\\\" + cw + \\\",\\\" + (this._x1 = x + r * Math.cos(a1)) + \\\",\\\" + (this._y1 = y + r * Math.sin(a1));\\n    }\\n  },\\n  rect: function(x, y, w, h) {\\n    this._ += \\\"M\\\" + (this._x0 = this._x1 = +x) + \\\",\\\" + (this._y0 = this._y1 = +y) + \\\"h\\\" + (+w) + \\\"v\\\" + (+h) + \\\"h\\\" + (-w) + \\\"Z\\\";\\n  },\\n  toString: function() {\\n    return this._;\\n  }\\n};\\n\\nexport default path;\\n\",\"import {slice} from \\\"./array\\\";\\nimport constant from \\\"./constant\\\";\\nimport {cos, halfPi, sin} from \\\"./math\\\";\\nimport {path} from \\\"d3-path\\\";\\n\\nfunction defaultSource(d) {\\n  return d.source;\\n}\\n\\nfunction defaultTarget(d) {\\n  return d.target;\\n}\\n\\nfunction defaultRadius(d) {\\n  return d.radius;\\n}\\n\\nfunction defaultStartAngle(d) {\\n  return d.startAngle;\\n}\\n\\nfunction defaultEndAngle(d) {\\n  return d.endAngle;\\n}\\n\\nexport default function() {\\n  var source = defaultSource,\\n      target = defaultTarget,\\n      radius = defaultRadius,\\n      startAngle = defaultStartAngle,\\n      endAngle = defaultEndAngle,\\n      context = null;\\n\\n  function ribbon() {\\n    var buffer,\\n        argv = slice.call(arguments),\\n        s = source.apply(this, argv),\\n        t = target.apply(this, argv),\\n        sr = +radius.apply(this, (argv[0] = s, argv)),\\n        sa0 = startAngle.apply(this, argv) - halfPi,\\n        sa1 = endAngle.apply(this, argv) - halfPi,\\n        sx0 = sr * cos(sa0),\\n        sy0 = sr * sin(sa0),\\n        tr = +radius.apply(this, (argv[0] = t, argv)),\\n        ta0 = startAngle.apply(this, argv) - halfPi,\\n        ta1 = endAngle.apply(this, argv) - halfPi;\\n\\n    if (!context) context = buffer = path();\\n\\n    context.moveTo(sx0, sy0);\\n    context.arc(0, 0, sr, sa0, sa1);\\n    if (sa0 !== ta0 || sa1 !== ta1) { // TODO sr !== tr?\\n      context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\\n      context.arc(0, 0, tr, ta0, ta1);\\n    }\\n    context.quadraticCurveTo(0, 0, sx0, sy0);\\n    context.closePath();\\n\\n    if (buffer) return context = null, buffer + \\\"\\\" || null;\\n  }\\n\\n  ribbon.radius = function(_) {\\n    return arguments.length ? (radius = typeof _ === \\\"function\\\" ? _ : constant(+_), ribbon) : radius;\\n  };\\n\\n  ribbon.startAngle = function(_) {\\n    return arguments.length ? (startAngle = typeof _ === \\\"function\\\" ? _ : constant(+_), ribbon) : startAngle;\\n  };\\n\\n  ribbon.endAngle = function(_) {\\n    return arguments.length ? (endAngle = typeof _ === \\\"function\\\" ? _ : constant(+_), ribbon) : endAngle;\\n  };\\n\\n  ribbon.source = function(_) {\\n    return arguments.length ? (source = _, ribbon) : source;\\n  };\\n\\n  ribbon.target = function(_) {\\n    return arguments.length ? (target = _, ribbon) : target;\\n  };\\n\\n  ribbon.context = function(_) {\\n    return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;\\n  };\\n\\n  return ribbon;\\n}\\n\",\"export var prefix = \\\"$\\\";\\n\\nfunction Map() {}\\n\\nMap.prototype = map.prototype = {\\n  constructor: Map,\\n  has: function(key) {\\n    return (prefix + key) in this;\\n  },\\n  get: function(key) {\\n    return this[prefix + key];\\n  },\\n  set: function(key, value) {\\n    this[prefix + key] = value;\\n    return this;\\n  },\\n  remove: function(key) {\\n    var property = prefix + key;\\n    return property in this && delete this[property];\\n  },\\n  clear: function() {\\n    for (var property in this) if (property[0] === prefix) delete this[property];\\n  },\\n  keys: function() {\\n    var keys = [];\\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\\n    return keys;\\n  },\\n  values: function() {\\n    var values = [];\\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\\n    return values;\\n  },\\n  entries: function() {\\n    var entries = [];\\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\\n    return entries;\\n  },\\n  size: function() {\\n    var size = 0;\\n    for (var property in this) if (property[0] === prefix) ++size;\\n    return size;\\n  },\\n  empty: function() {\\n    for (var property in this) if (property[0] === prefix) return false;\\n    return true;\\n  },\\n  each: function(f) {\\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\\n  }\\n};\\n\\nfunction map(object, f) {\\n  var map = new Map;\\n\\n  // Copy constructor.\\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\\n\\n  // Index array by numeric index or specified key function.\\n  else if (Array.isArray(object)) {\\n    var i = -1,\\n        n = object.length,\\n        o;\\n\\n    if (f == null) while (++i < n) map.set(i, object[i]);\\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\\n  }\\n\\n  // Convert object to map.\\n  else if (object) for (var key in object) map.set(key, object[key]);\\n\\n  return map;\\n}\\n\\nexport default map;\\n\",\"import map from \\\"./map\\\";\\n\\nexport default function() {\\n  var keys = [],\\n      sortKeys = [],\\n      sortValues,\\n      rollup,\\n      nest;\\n\\n  function apply(array, depth, createResult, setResult) {\\n    if (depth >= keys.length) {\\n      if (sortValues != null) array.sort(sortValues);\\n      return rollup != null ? rollup(array) : array;\\n    }\\n\\n    var i = -1,\\n        n = array.length,\\n        key = keys[depth++],\\n        keyValue,\\n        value,\\n        valuesByKey = map(),\\n        values,\\n        result = createResult();\\n\\n    while (++i < n) {\\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \\\"\\\")) {\\n        values.push(value);\\n      } else {\\n        valuesByKey.set(keyValue, [value]);\\n      }\\n    }\\n\\n    valuesByKey.each(function(values, key) {\\n      setResult(result, key, apply(values, depth, createResult, setResult));\\n    });\\n\\n    return result;\\n  }\\n\\n  function entries(map, depth) {\\n    if (++depth > keys.length) return map;\\n    var array, sortKey = sortKeys[depth - 1];\\n    if (rollup != null && depth >= keys.length) array = map.entries();\\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\\n  }\\n\\n  return nest = {\\n    object: function(array) { return apply(array, 0, createObject, setObject); },\\n    map: function(array) { return apply(array, 0, createMap, setMap); },\\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\\n    key: function(d) { keys.push(d); return nest; },\\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\\n    sortValues: function(order) { sortValues = order; return nest; },\\n    rollup: function(f) { rollup = f; return nest; }\\n  };\\n}\\n\\nfunction createObject() {\\n  return {};\\n}\\n\\nfunction setObject(object, key, value) {\\n  object[key] = value;\\n}\\n\\nfunction createMap() {\\n  return map();\\n}\\n\\nfunction setMap(map, key, value) {\\n  map.set(key, value);\\n}\\n\",\"import {default as map, prefix} from \\\"./map\\\";\\n\\nfunction Set() {}\\n\\nvar proto = map.prototype;\\n\\nSet.prototype = set.prototype = {\\n  constructor: Set,\\n  has: proto.has,\\n  add: function(value) {\\n    value += \\\"\\\";\\n    this[prefix + value] = value;\\n    return this;\\n  },\\n  remove: proto.remove,\\n  clear: proto.clear,\\n  values: proto.keys,\\n  size: proto.size,\\n  empty: proto.empty,\\n  each: proto.each\\n};\\n\\nfunction set(object, f) {\\n  var set = new Set;\\n\\n  // Copy constructor.\\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\\n\\n  // Otherwise, assume it’s an array.\\n  else if (object) {\\n    var i = -1, n = object.length;\\n    if (f == null) while (++i < n) set.add(object[i]);\\n    else while (++i < n) set.add(f(object[i], i, object));\\n  }\\n\\n  return set;\\n}\\n\\nexport default set;\\n\",\"export default function(map) {\\n  var keys = [];\\n  for (var key in map) keys.push(key);\\n  return keys;\\n}\\n\",\"export default function(map) {\\n  var values = [];\\n  for (var key in map) values.push(map[key]);\\n  return values;\\n}\\n\",\"export default function(map) {\\n  var entries = [];\\n  for (var key in map) entries.push({key: key, value: map[key]});\\n  return entries;\\n}\\n\",\"var array = Array.prototype;\\n\\nexport var slice = array.slice;\\n\",\"export default function(a, b) {\\n  return a - b;\\n}\\n\",\"export default function(ring) {\\n  var i = 0, n = ring.length, area = ring[n - 1][1] * ring[0][0] - ring[n - 1][0] * ring[0][1];\\n  while (++i < n) area += ring[i - 1][1] * ring[i][0] - ring[i - 1][0] * ring[i][1];\\n  return area;\\n}\\n\",\"export default function(x) {\\n  return function() {\\n    return x;\\n  };\\n}\\n\",\"export default function(ring, hole) {\\n  var i = -1, n = hole.length, c;\\n  while (++i < n) if (c = ringContains(ring, hole[i])) return c;\\n  return 0;\\n}\\n\\nfunction ringContains(ring, point) {\\n  var x = point[0], y = point[1], contains = -1;\\n  for (var i = 0, n = ring.length, j = n - 1; i < n; j = i++) {\\n    var pi = ring[i], xi = pi[0], yi = pi[1], pj = ring[j], xj = pj[0], yj = pj[1];\\n    if (segmentContains(pi, pj, point)) return 0;\\n    if (((yi > y) !== (yj > y)) && ((x < (xj - xi) * (y - yi) / (yj - yi) + xi))) contains = -contains;\\n  }\\n  return contains;\\n}\\n\\nfunction segmentContains(a, b, c) {\\n  var i; return collinear(a, b, c) && within(a[i = +(a[0] === b[0])], c[i], b[i]);\\n}\\n\\nfunction collinear(a, b, c) {\\n  return (b[0] - a[0]) * (c[1] - a[1]) === (c[0] - a[0]) * (b[1] - a[1]);\\n}\\n\\nfunction within(p, q, r) {\\n  return p <= q && q <= r || r <= q && q <= p;\\n}\\n\",\"export default function() {}\\n\",\"import {extent, thresholdSturges, tickStep, range} from \\\"d3-array\\\";\\nimport {slice} from \\\"./array\\\";\\nimport ascending from \\\"./ascending\\\";\\nimport area from \\\"./area\\\";\\nimport constant from \\\"./constant\\\";\\nimport contains from \\\"./contains\\\";\\nimport noop from \\\"./noop\\\";\\n\\nvar cases = [\\n  [],\\n  [[[1.0, 1.5], [0.5, 1.0]]],\\n  [[[1.5, 1.0], [1.0, 1.5]]],\\n  [[[1.5, 1.0], [0.5, 1.0]]],\\n  [[[1.0, 0.5], [1.5, 1.0]]],\\n  [[[1.0, 1.5], [0.5, 1.0]], [[1.0, 0.5], [1.5, 1.0]]],\\n  [[[1.0, 0.5], [1.0, 1.5]]],\\n  [[[1.0, 0.5], [0.5, 1.0]]],\\n  [[[0.5, 1.0], [1.0, 0.5]]],\\n  [[[1.0, 1.5], [1.0, 0.5]]],\\n  [[[0.5, 1.0], [1.0, 0.5]], [[1.5, 1.0], [1.0, 1.5]]],\\n  [[[1.5, 1.0], [1.0, 0.5]]],\\n  [[[0.5, 1.0], [1.5, 1.0]]],\\n  [[[1.0, 1.5], [1.5, 1.0]]],\\n  [[[0.5, 1.0], [1.0, 1.5]]],\\n  []\\n];\\n\\nexport default function() {\\n  var dx = 1,\\n      dy = 1,\\n      threshold = thresholdSturges,\\n      smooth = smoothLinear;\\n\\n  function contours(values) {\\n    var tz = threshold(values);\\n\\n    // Convert number of thresholds into uniform thresholds.\\n    if (!Array.isArray(tz)) {\\n      var domain = extent(values), start = domain[0], stop = domain[1];\\n      tz = tickStep(start, stop, tz);\\n      tz = range(Math.floor(start / tz) * tz, Math.floor(stop / tz) * tz, tz);\\n    } else {\\n      tz = tz.slice().sort(ascending);\\n    }\\n\\n    return tz.map(function(value) {\\n      return contour(values, value);\\n    });\\n  }\\n\\n  // Accumulate, smooth contour rings, assign holes to exterior rings.\\n  // Based on https://github.com/mbostock/shapefile/blob/v0.6.2/shp/polygon.js\\n  function contour(values, value) {\\n    var polygons = [],\\n        holes = [];\\n\\n    isorings(values, value, function(ring) {\\n      smooth(ring, values, value);\\n      if (area(ring) > 0) polygons.push([ring]);\\n      else holes.push(ring);\\n    });\\n\\n    holes.forEach(function(hole) {\\n      for (var i = 0, n = polygons.length, polygon; i < n; ++i) {\\n        if (contains((polygon = polygons[i])[0], hole) !== -1) {\\n          polygon.push(hole);\\n          return;\\n        }\\n      }\\n    });\\n\\n    return {\\n      type: \\\"MultiPolygon\\\",\\n      value: value,\\n      coordinates: polygons\\n    };\\n  }\\n\\n  // Marching squares with isolines stitched into rings.\\n  // Based on https://github.com/topojson/topojson-client/blob/v3.0.0/src/stitch.js\\n  function isorings(values, value, callback) {\\n    var fragmentByStart = new Array,\\n        fragmentByEnd = new Array,\\n        x, y, t0, t1, t2, t3;\\n\\n    // Special case for the first row (y = -1, t2 = t3 = 0).\\n    x = y = -1;\\n    t1 = values[0] >= value;\\n    cases[t1 << 1].forEach(stitch);\\n    while (++x < dx - 1) {\\n      t0 = t1, t1 = values[x + 1] >= value;\\n      cases[t0 | t1 << 1].forEach(stitch);\\n    }\\n    cases[t1 << 0].forEach(stitch);\\n\\n    // General case for the intermediate rows.\\n    while (++y < dy - 1) {\\n      x = -1;\\n      t1 = values[y * dx + dx] >= value;\\n      t2 = values[y * dx] >= value;\\n      cases[t1 << 1 | t2 << 2].forEach(stitch);\\n      while (++x < dx - 1) {\\n        t0 = t1, t1 = values[y * dx + dx + x + 1] >= value;\\n        t3 = t2, t2 = values[y * dx + x + 1] >= value;\\n        cases[t0 | t1 << 1 | t2 << 2 | t3 << 3].forEach(stitch);\\n      }\\n      cases[t1 | t2 << 3].forEach(stitch);\\n    }\\n\\n    // Special case for the last row (y = dy - 1, t0 = t1 = 0).\\n    x = -1;\\n    t2 = values[y * dx] >= value;\\n    cases[t2 << 2].forEach(stitch);\\n    while (++x < dx - 1) {\\n      t3 = t2, t2 = values[y * dx + x + 1] >= value;\\n      cases[t2 << 2 | t3 << 3].forEach(stitch);\\n    }\\n    cases[t2 << 3].forEach(stitch);\\n\\n    function stitch(line) {\\n      var start = [line[0][0] + x, line[0][1] + y],\\n          end = [line[1][0] + x, line[1][1] + y],\\n          startIndex = index(start),\\n          endIndex = index(end),\\n          f, g;\\n      if (f = fragmentByEnd[startIndex]) {\\n        if (g = fragmentByStart[endIndex]) {\\n          delete fragmentByEnd[f.end];\\n          delete fragmentByStart[g.start];\\n          if (f === g) {\\n            f.ring.push(end);\\n            callback(f.ring);\\n          } else {\\n            fragmentByStart[f.start] = fragmentByEnd[g.end] = {start: f.start, end: g.end, ring: f.ring.concat(g.ring)};\\n          }\\n        } else {\\n          delete fragmentByEnd[f.end];\\n          f.ring.push(end);\\n          fragmentByEnd[f.end = endIndex] = f;\\n        }\\n      } else if (f = fragmentByStart[endIndex]) {\\n        if (g = fragmentByEnd[startIndex]) {\\n          delete fragmentByStart[f.start];\\n          delete fragmentByEnd[g.end];\\n          if (f === g) {\\n            f.ring.push(end);\\n            callback(f.ring);\\n          } else {\\n            fragmentByStart[g.start] = fragmentByEnd[f.end] = {start: g.start, end: f.end, ring: g.ring.concat(f.ring)};\\n          }\\n        } else {\\n          delete fragmentByStart[f.start];\\n          f.ring.unshift(start);\\n          fragmentByStart[f.start = startIndex] = f;\\n        }\\n      } else {\\n        fragmentByStart[startIndex] = fragmentByEnd[endIndex] = {start: startIndex, end: endIndex, ring: [start, end]};\\n      }\\n    }\\n  }\\n\\n  function index(point) {\\n    return point[0] * 2 + point[1] * (dx + 1) * 4;\\n  }\\n\\n  function smoothLinear(ring, values, value) {\\n    ring.forEach(function(point) {\\n      var x = point[0],\\n          y = point[1],\\n          xt = x | 0,\\n          yt = y | 0,\\n          v0,\\n          v1 = values[yt * dx + xt];\\n      if (x > 0 && x < dx && xt === x) {\\n        v0 = values[yt * dx + xt - 1];\\n        point[0] = x + (value - v0) / (v1 - v0) - 0.5;\\n      }\\n      if (y > 0 && y < dy && yt === y) {\\n        v0 = values[(yt - 1) * dx + xt];\\n        point[1] = y + (value - v0) / (v1 - v0) - 0.5;\\n      }\\n    });\\n  }\\n\\n  contours.contour = contour;\\n\\n  contours.size = function(_) {\\n    if (!arguments.length) return [dx, dy];\\n    var _0 = Math.ceil(_[0]), _1 = Math.ceil(_[1]);\\n    if (!(_0 > 0) || !(_1 > 0)) throw new Error(\\\"invalid size\\\");\\n    return dx = _0, dy = _1, contours;\\n  };\\n\\n  contours.thresholds = function(_) {\\n    return arguments.length ? (threshold = typeof _ === \\\"function\\\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), contours) : threshold;\\n  };\\n\\n  contours.smooth = function(_) {\\n    return arguments.length ? (smooth = _ ? smoothLinear : noop, contours) : smooth === smoothLinear;\\n  };\\n\\n  return contours;\\n}\\n\",\"// TODO Optimize edge cases.\\n// TODO Optimize index calculation.\\n// TODO Optimize arguments.\\nexport function blurX(source, target, r) {\\n  var n = source.width,\\n      m = source.height,\\n      w = (r << 1) + 1;\\n  for (var j = 0; j < m; ++j) {\\n    for (var i = 0, sr = 0; i < n + r; ++i) {\\n      if (i < n) {\\n        sr += source.data[i + j * n];\\n      }\\n      if (i >= r) {\\n        if (i >= w) {\\n          sr -= source.data[i - w + j * n];\\n        }\\n        target.data[i - r + j * n] = sr / Math.min(i + 1, n - 1 + w - i, w);\\n      }\\n    }\\n  }\\n}\\n\\n// TODO Optimize edge cases.\\n// TODO Optimize index calculation.\\n// TODO Optimize arguments.\\nexport function blurY(source, target, r) {\\n  var n = source.width,\\n      m = source.height,\\n      w = (r << 1) + 1;\\n  for (var i = 0; i < n; ++i) {\\n    for (var j = 0, sr = 0; j < m + r; ++j) {\\n      if (j < m) {\\n        sr += source.data[i + j * n];\\n      }\\n      if (j >= r) {\\n        if (j >= w) {\\n          sr -= source.data[i + (j - w) * n];\\n        }\\n        target.data[i + (j - r) * n] = sr / Math.min(j + 1, m - 1 + w - j, w);\\n      }\\n    }\\n  }\\n}\\n\",\"import {max, range, tickStep} from \\\"d3-array\\\";\\nimport {slice} from \\\"./array\\\";\\nimport {blurX, blurY} from \\\"./blur\\\";\\nimport constant from \\\"./constant\\\";\\nimport contours from \\\"./contours\\\";\\n\\nfunction defaultX(d) {\\n  return d[0];\\n}\\n\\nfunction defaultY(d) {\\n  return d[1];\\n}\\n\\nfunction defaultWeight() {\\n  return 1;\\n}\\n\\nexport default function() {\\n  var x = defaultX,\\n      y = defaultY,\\n      weight = defaultWeight,\\n      dx = 960,\\n      dy = 500,\\n      r = 20, // blur radius\\n      k = 2, // log2(grid cell size)\\n      o = r * 3, // grid offset, to pad for blur\\n      n = (dx + o * 2) >> k, // grid width\\n      m = (dy + o * 2) >> k, // grid height\\n      threshold = constant(20);\\n\\n  function density(data) {\\n    var values0 = new Float32Array(n * m),\\n        values1 = new Float32Array(n * m);\\n\\n    data.forEach(function(d, i, data) {\\n      var xi = (+x(d, i, data) + o) >> k,\\n          yi = (+y(d, i, data) + o) >> k,\\n          wi = +weight(d, i, data);\\n      if (xi >= 0 && xi < n && yi >= 0 && yi < m) {\\n        values0[xi + yi * n] += wi;\\n      }\\n    });\\n\\n    // TODO Optimize.\\n    blurX({width: n, height: m, data: values0}, {width: n, height: m, data: values1}, r >> k);\\n    blurY({width: n, height: m, data: values1}, {width: n, height: m, data: values0}, r >> k);\\n    blurX({width: n, height: m, data: values0}, {width: n, height: m, data: values1}, r >> k);\\n    blurY({width: n, height: m, data: values1}, {width: n, height: m, data: values0}, r >> k);\\n    blurX({width: n, height: m, data: values0}, {width: n, height: m, data: values1}, r >> k);\\n    blurY({width: n, height: m, data: values1}, {width: n, height: m, data: values0}, r >> k);\\n\\n    var tz = threshold(values0);\\n\\n    // Convert number of thresholds into uniform thresholds.\\n    if (!Array.isArray(tz)) {\\n      var stop = max(values0);\\n      tz = tickStep(0, stop, tz);\\n      tz = range(0, Math.floor(stop / tz) * tz, tz);\\n      tz.shift();\\n    }\\n\\n    return contours()\\n        .thresholds(tz)\\n        .size([n, m])\\n      (values0)\\n        .map(transform);\\n  }\\n\\n  function transform(geometry) {\\n    geometry.value *= Math.pow(2, -2 * k); // Density in points per square pixel.\\n    geometry.coordinates.forEach(transformPolygon);\\n    return geometry;\\n  }\\n\\n  function transformPolygon(coordinates) {\\n    coordinates.forEach(transformRing);\\n  }\\n\\n  function transformRing(coordinates) {\\n    coordinates.forEach(transformPoint);\\n  }\\n\\n  // TODO Optimize.\\n  function transformPoint(coordinates) {\\n    coordinates[0] = coordinates[0] * Math.pow(2, k) - o;\\n    coordinates[1] = coordinates[1] * Math.pow(2, k) - o;\\n  }\\n\\n  function resize() {\\n    o = r * 3;\\n    n = (dx + o * 2) >> k;\\n    m = (dy + o * 2) >> k;\\n    return density;\\n  }\\n\\n  density.x = function(_) {\\n    return arguments.length ? (x = typeof _ === \\\"function\\\" ? _ : constant(+_), density) : x;\\n  };\\n\\n  density.y = function(_) {\\n    return arguments.length ? (y = typeof _ === \\\"function\\\" ? _ : constant(+_), density) : y;\\n  };\\n\\n  density.weight = function(_) {\\n    return arguments.length ? (weight = typeof _ === \\\"function\\\" ? _ : constant(+_), density) : weight;\\n  };\\n\\n  density.size = function(_) {\\n    if (!arguments.length) return [dx, dy];\\n    var _0 = Math.ceil(_[0]), _1 = Math.ceil(_[1]);\\n    if (!(_0 >= 0) && !(_0 >= 0)) throw new Error(\\\"invalid size\\\");\\n    return dx = _0, dy = _1, resize();\\n  };\\n\\n  density.cellSize = function(_) {\\n    if (!arguments.length) return 1 << k;\\n    if (!((_ = +_) >= 1)) throw new Error(\\\"invalid cell size\\\");\\n    return k = Math.floor(Math.log(_) / Math.LN2), resize();\\n  };\\n\\n  density.thresholds = function(_) {\\n    return arguments.length ? (threshold = typeof _ === \\\"function\\\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), density) : threshold;\\n  };\\n\\n  density.bandwidth = function(_) {\\n    if (!arguments.length) return Math.sqrt(r * (r + 1));\\n    if (!((_ = +_) >= 0)) throw new Error(\\\"invalid bandwidth\\\");\\n    return r = Math.round((Math.sqrt(4 * _ * _ + 1) - 1) / 2), resize();\\n  };\\n\\n  return density;\\n}\\n\",\"var EOL = {},\\n    EOF = {},\\n    QUOTE = 34,\\n    NEWLINE = 10,\\n    RETURN = 13;\\n\\nfunction objectConverter(columns) {\\n  return new Function(\\\"d\\\", \\\"return {\\\" + columns.map(function(name, i) {\\n    return JSON.stringify(name) + \\\": d[\\\" + i + \\\"]\\\";\\n  }).join(\\\",\\\") + \\\"}\\\");\\n}\\n\\nfunction customConverter(columns, f) {\\n  var object = objectConverter(columns);\\n  return function(row, i) {\\n    return f(object(row), i, columns);\\n  };\\n}\\n\\n// Compute unique columns in order of discovery.\\nfunction inferColumns(rows) {\\n  var columnSet = Object.create(null),\\n      columns = [];\\n\\n  rows.forEach(function(row) {\\n    for (var column in row) {\\n      if (!(column in columnSet)) {\\n        columns.push(columnSet[column] = column);\\n      }\\n    }\\n  });\\n\\n  return columns;\\n}\\n\\nfunction pad(value, width) {\\n  var s = value + \\\"\\\", length = s.length;\\n  return length < width ? new Array(width - length + 1).join(0) + s : s;\\n}\\n\\nfunction formatYear(year) {\\n  return year < 0 ? \\\"-\\\" + pad(-year, 6)\\n    : year > 9999 ? \\\"+\\\" + pad(year, 6)\\n    : pad(year, 4);\\n}\\n\\nfunction formatDate(date) {\\n  var hours = date.getUTCHours(),\\n      minutes = date.getUTCMinutes(),\\n      seconds = date.getUTCSeconds(),\\n      milliseconds = date.getUTCMilliseconds();\\n  return isNaN(date) ? \\\"Invalid Date\\\"\\n      : formatYear(date.getUTCFullYear(), 4) + \\\"-\\\" + pad(date.getUTCMonth() + 1, 2) + \\\"-\\\" + pad(date.getUTCDate(), 2)\\n      + (milliseconds ? \\\"T\\\" + pad(hours, 2) + \\\":\\\" + pad(minutes, 2) + \\\":\\\" + pad(seconds, 2) + \\\".\\\" + pad(milliseconds, 3) + \\\"Z\\\"\\n      : seconds ? \\\"T\\\" + pad(hours, 2) + \\\":\\\" + pad(minutes, 2) + \\\":\\\" + pad(seconds, 2) + \\\"Z\\\"\\n      : minutes || hours ? \\\"T\\\" + pad(hours, 2) + \\\":\\\" + pad(minutes, 2) + \\\"Z\\\"\\n      : \\\"\\\");\\n}\\n\\nexport default function(delimiter) {\\n  var reFormat = new RegExp(\\\"[\\\\\\\"\\\" + delimiter + \\\"\\\\n\\\\r]\\\"),\\n      DELIMITER = delimiter.charCodeAt(0);\\n\\n  function parse(text, f) {\\n    var convert, columns, rows = parseRows(text, function(row, i) {\\n      if (convert) return convert(row, i - 1);\\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\\n    });\\n    rows.columns = columns || [];\\n    return rows;\\n  }\\n\\n  function parseRows(text, f) {\\n    var rows = [], // output rows\\n        N = text.length,\\n        I = 0, // current character index\\n        n = 0, // current line number\\n        t, // current token\\n        eof = N <= 0, // current token followed by EOF?\\n        eol = false; // current token followed by EOL?\\n\\n    // Strip the trailing newline.\\n    if (text.charCodeAt(N - 1) === NEWLINE) --N;\\n    if (text.charCodeAt(N - 1) === RETURN) --N;\\n\\n    function token() {\\n      if (eof) return EOF;\\n      if (eol) return eol = false, EOL;\\n\\n      // Unescape quotes.\\n      var i, j = I, c;\\n      if (text.charCodeAt(j) === QUOTE) {\\n        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);\\n        if ((i = I) >= N) eof = true;\\n        else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;\\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\\n        return text.slice(j + 1, i - 1).replace(/\\\"\\\"/g, \\\"\\\\\\\"\\\");\\n      }\\n\\n      // Find next delimiter or newline.\\n      while (I < N) {\\n        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;\\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\\n        else if (c !== DELIMITER) continue;\\n        return text.slice(j, i);\\n      }\\n\\n      // Return last token before EOF.\\n      return eof = true, text.slice(j, N);\\n    }\\n\\n    while ((t = token()) !== EOF) {\\n      var row = [];\\n      while (t !== EOL && t !== EOF) row.push(t), t = token();\\n      if (f && (row = f(row, n++)) == null) continue;\\n      rows.push(row);\\n    }\\n\\n    return rows;\\n  }\\n\\n  function preformatBody(rows, columns) {\\n    return rows.map(function(row) {\\n      return columns.map(function(column) {\\n        return formatValue(row[column]);\\n      }).join(delimiter);\\n    });\\n  }\\n\\n  function format(rows, columns) {\\n    if (columns == null) columns = inferColumns(rows);\\n    return [columns.map(formatValue).join(delimiter)].concat(preformatBody(rows, columns)).join(\\\"\\\\n\\\");\\n  }\\n\\n  function formatBody(rows, columns) {\\n    if (columns == null) columns = inferColumns(rows);\\n    return preformatBody(rows, columns).join(\\\"\\\\n\\\");\\n  }\\n\\n  function formatRows(rows) {\\n    return rows.map(formatRow).join(\\\"\\\\n\\\");\\n  }\\n\\n  function formatRow(row) {\\n    return row.map(formatValue).join(delimiter);\\n  }\\n\\n  function formatValue(value) {\\n    return value == null ? \\\"\\\"\\n        : value instanceof Date ? formatDate(value)\\n        : reFormat.test(value += \\\"\\\") ? \\\"\\\\\\\"\\\" + value.replace(/\\\"/g, \\\"\\\\\\\"\\\\\\\"\\\") + \\\"\\\\\\\"\\\"\\n        : value;\\n  }\\n\\n  return {\\n    parse: parse,\\n    parseRows: parseRows,\\n    format: format,\\n    formatBody: formatBody,\\n    formatRows: formatRows\\n  };\\n}\\n\",\"import dsv from \\\"./dsv\\\";\\n\\nvar csv = dsv(\\\",\\\");\\n\\nexport var csvParse = csv.parse;\\nexport var csvParseRows = csv.parseRows;\\nexport var csvFormat = csv.format;\\nexport var csvFormatBody = csv.formatBody;\\nexport var csvFormatRows = csv.formatRows;\\n\",\"import dsv from \\\"./dsv\\\";\\n\\nvar tsv = dsv(\\\"\\\\t\\\");\\n\\nexport var tsvParse = tsv.parse;\\nexport var tsvParseRows = tsv.parseRows;\\nexport var tsvFormat = tsv.format;\\nexport var tsvFormatBody = tsv.formatBody;\\nexport var tsvFormatRows = tsv.formatRows;\\n\",\"export default function autoType(object) {\\n  for (var key in object) {\\n    var value = object[key].trim(), number;\\n    if (!value) value = null;\\n    else if (value === \\\"true\\\") value = true;\\n    else if (value === \\\"false\\\") value = false;\\n    else if (value === \\\"NaN\\\") value = NaN;\\n    else if (!isNaN(number = +value)) value = number;\\n    else if (/^([-+]\\\\d{2})?\\\\d{4}(-\\\\d{2}(-\\\\d{2})?)?(T\\\\d{2}:\\\\d{2}(:\\\\d{2}(\\\\.\\\\d{3})?)?(Z|[-+]\\\\d{2}:\\\\d{2})?)?$/.test(value)) value = new Date(value);\\n    else continue;\\n    object[key] = value;\\n  }\\n  return object;\\n}\\n\",\"function responseBlob(response) {\\n  if (!response.ok) throw new Error(response.status + \\\" \\\" + response.statusText);\\n  return response.blob();\\n}\\n\\nexport default function(input, init) {\\n  return fetch(input, init).then(responseBlob);\\n}\\n\",\"function responseArrayBuffer(response) {\\n  if (!response.ok) throw new Error(response.status + \\\" \\\" + response.statusText);\\n  return response.arrayBuffer();\\n}\\n\\nexport default function(input, init) {\\n  return fetch(input, init).then(responseArrayBuffer);\\n}\\n\",\"function responseText(response) {\\n  if (!response.ok) throw new Error(response.status + \\\" \\\" + response.statusText);\\n  return response.text();\\n}\\n\\nexport default function(input, init) {\\n  return fetch(input, init).then(responseText);\\n}\\n\",\"import {csvParse, dsvFormat, tsvParse} from \\\"d3-dsv\\\";\\nimport text from \\\"./text\\\";\\n\\nfunction dsvParse(parse) {\\n  return function(input, init, row) {\\n    if (arguments.length === 2 && typeof init === \\\"function\\\") row = init, init = undefined;\\n    return text(input, init).then(function(response) {\\n      return parse(response, row);\\n    });\\n  };\\n}\\n\\nexport default function dsv(delimiter, input, init, row) {\\n  if (arguments.length === 3 && typeof init === \\\"function\\\") row = init, init = undefined;\\n  var format = dsvFormat(delimiter);\\n  return text(input, init).then(function(response) {\\n    return format.parse(response, row);\\n  });\\n}\\n\\nexport var csv = dsvParse(csvParse);\\nexport var tsv = dsvParse(tsvParse);\\n\",\"export default function(input, init) {\\n  return new Promise(function(resolve, reject) {\\n    var image = new Image;\\n    for (var key in init) image[key] = init[key];\\n    image.onerror = reject;\\n    image.onload = function() { resolve(image); };\\n    image.src = input;\\n  });\\n}\\n\",\"function responseJson(response) {\\n  if (!response.ok) throw new Error(response.status + \\\" \\\" + response.statusText);\\n  return response.json();\\n}\\n\\nexport default function(input, init) {\\n  return fetch(input, init).then(responseJson);\\n}\\n\",\"import text from \\\"./text\\\";\\n\\nfunction parser(type) {\\n  return function(input, init)  {\\n    return text(input, init).then(function(text) {\\n      return (new DOMParser).parseFromString(text, type);\\n    });\\n  };\\n}\\n\\nexport default parser(\\\"application/xml\\\");\\n\\nexport var html = parser(\\\"text/html\\\");\\n\\nexport var svg = parser(\\\"image/svg+xml\\\");\\n\",\"export default function(x, y) {\\n  var nodes;\\n\\n  if (x == null) x = 0;\\n  if (y == null) y = 0;\\n\\n  function force() {\\n    var i,\\n        n = nodes.length,\\n        node,\\n        sx = 0,\\n        sy = 0;\\n\\n    for (i = 0; i < n; ++i) {\\n      node = nodes[i], sx += node.x, sy += node.y;\\n    }\\n\\n    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\\n      node = nodes[i], node.x -= sx, node.y -= sy;\\n    }\\n  }\\n\\n  force.initialize = function(_) {\\n    nodes = _;\\n  };\\n\\n  force.x = function(_) {\\n    return arguments.length ? (x = +_, force) : x;\\n  };\\n\\n  force.y = function(_) {\\n    return arguments.length ? (y = +_, force) : y;\\n  };\\n\\n  return force;\\n}\\n\",\"export default function(x) {\\n  return function() {\\n    return x;\\n  };\\n}\\n\",\"export default function() {\\n  return (Math.random() - 0.5) * 1e-6;\\n}\\n\",\"export default function(d) {\\n  var x = +this._x.call(null, d),\\n      y = +this._y.call(null, d);\\n  return add(this.cover(x, y), x, y, d);\\n}\\n\\nfunction add(tree, x, y, d) {\\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\\n\\n  var parent,\\n      node = tree._root,\\n      leaf = {data: d},\\n      x0 = tree._x0,\\n      y0 = tree._y0,\\n      x1 = tree._x1,\\n      y1 = tree._y1,\\n      xm,\\n      ym,\\n      xp,\\n      yp,\\n      right,\\n      bottom,\\n      i,\\n      j;\\n\\n  // If the tree is empty, initialize the root as a leaf.\\n  if (!node) return tree._root = leaf, tree;\\n\\n  // Find the existing leaf for the new point, or add it.\\n  while (node.length) {\\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\\n  }\\n\\n  // Is the new point is exactly coincident with the existing point?\\n  xp = +tree._x.call(null, node.data);\\n  yp = +tree._y.call(null, node.data);\\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\\n\\n  // Otherwise, split the leaf node until the old and new point are separated.\\n  do {\\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\\n  return parent[j] = node, parent[i] = leaf, tree;\\n}\\n\\nexport function addAll(data) {\\n  var d, i, n = data.length,\\n      x,\\n      y,\\n      xz = new Array(n),\\n      yz = new Array(n),\\n      x0 = Infinity,\\n      y0 = Infinity,\\n      x1 = -Infinity,\\n      y1 = -Infinity;\\n\\n  // Compute the points and their extent.\\n  for (i = 0; i < n; ++i) {\\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\\n    xz[i] = x;\\n    yz[i] = y;\\n    if (x < x0) x0 = x;\\n    if (x > x1) x1 = x;\\n    if (y < y0) y0 = y;\\n    if (y > y1) y1 = y;\\n  }\\n\\n  // If there were no (valid) points, abort.\\n  if (x0 > x1 || y0 > y1) return this;\\n\\n  // Expand the tree to cover the new points.\\n  this.cover(x0, y0).cover(x1, y1);\\n\\n  // Add the new points.\\n  for (i = 0; i < n; ++i) {\\n    add(this, xz[i], yz[i], data[i]);\\n  }\\n\\n  return this;\\n}\\n\",\"export default function(x, y) {\\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\\n\\n  var x0 = this._x0,\\n      y0 = this._y0,\\n      x1 = this._x1,\\n      y1 = this._y1;\\n\\n  // If the quadtree has no extent, initialize them.\\n  // Integer extent are necessary so that if we later double the extent,\\n  // the existing quadrant boundaries don’t change due to floating point error!\\n  if (isNaN(x0)) {\\n    x1 = (x0 = Math.floor(x)) + 1;\\n    y1 = (y0 = Math.floor(y)) + 1;\\n  }\\n\\n  // Otherwise, double repeatedly to cover.\\n  else {\\n    var z = x1 - x0,\\n        node = this._root,\\n        parent,\\n        i;\\n\\n    while (x0 > x || x >= x1 || y0 > y || y >= y1) {\\n      i = (y < y0) << 1 | (x < x0);\\n      parent = new Array(4), parent[i] = node, node = parent, z *= 2;\\n      switch (i) {\\n        case 0: x1 = x0 + z, y1 = y0 + z; break;\\n        case 1: x0 = x1 - z, y1 = y0 + z; break;\\n        case 2: x1 = x0 + z, y0 = y1 - z; break;\\n        case 3: x0 = x1 - z, y0 = y1 - z; break;\\n      }\\n    }\\n\\n    if (this._root && this._root.length) this._root = node;\\n  }\\n\\n  this._x0 = x0;\\n  this._y0 = y0;\\n  this._x1 = x1;\\n  this._y1 = y1;\\n  return this;\\n}\\n\",\"export default function(node, x0, y0, x1, y1) {\\n  this.node = node;\\n  this.x0 = x0;\\n  this.y0 = y0;\\n  this.x1 = x1;\\n  this.y1 = y1;\\n}\\n\",\"export function defaultX(d) {\\n  return d[0];\\n}\\n\\nexport default function(_) {\\n  return arguments.length ? (this._x = _, this) : this._x;\\n}\\n\",\"export function defaultY(d) {\\n  return d[1];\\n}\\n\\nexport default function(_) {\\n  return arguments.length ? (this._y = _, this) : this._y;\\n}\\n\",\"import tree_add, {addAll as tree_addAll} from \\\"./add\\\";\\nimport tree_cover from \\\"./cover\\\";\\nimport tree_data from \\\"./data\\\";\\nimport tree_extent from \\\"./extent\\\";\\nimport tree_find from \\\"./find\\\";\\nimport tree_remove, {removeAll as tree_removeAll} from \\\"./remove\\\";\\nimport tree_root from \\\"./root\\\";\\nimport tree_size from \\\"./size\\\";\\nimport tree_visit from \\\"./visit\\\";\\nimport tree_visitAfter from \\\"./visitAfter\\\";\\nimport tree_x, {defaultX} from \\\"./x\\\";\\nimport tree_y, {defaultY} from \\\"./y\\\";\\n\\nexport default function quadtree(nodes, x, y) {\\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\\n  return nodes == null ? tree : tree.addAll(nodes);\\n}\\n\\nfunction Quadtree(x, y, x0, y0, x1, y1) {\\n  this._x = x;\\n  this._y = y;\\n  this._x0 = x0;\\n  this._y0 = y0;\\n  this._x1 = x1;\\n  this._y1 = y1;\\n  this._root = undefined;\\n}\\n\\nfunction leaf_copy(leaf) {\\n  var copy = {data: leaf.data}, next = copy;\\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\\n  return copy;\\n}\\n\\nvar treeProto = quadtree.prototype = Quadtree.prototype;\\n\\ntreeProto.copy = function() {\\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\\n      node = this._root,\\n      nodes,\\n      child;\\n\\n  if (!node) return copy;\\n\\n  if (!node.length) return copy._root = leaf_copy(node), copy;\\n\\n  nodes = [{source: node, target: copy._root = new Array(4)}];\\n  while (node = nodes.pop()) {\\n    for (var i = 0; i < 4; ++i) {\\n      if (child = node.source[i]) {\\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\\n        else node.target[i] = leaf_copy(child);\\n      }\\n    }\\n  }\\n\\n  return copy;\\n};\\n\\ntreeProto.add = tree_add;\\ntreeProto.addAll = tree_addAll;\\ntreeProto.cover = tree_cover;\\ntreeProto.data = tree_data;\\ntreeProto.extent = tree_extent;\\ntreeProto.find = tree_find;\\ntreeProto.remove = tree_remove;\\ntreeProto.removeAll = tree_removeAll;\\ntreeProto.root = tree_root;\\ntreeProto.size = tree_size;\\ntreeProto.visit = tree_visit;\\ntreeProto.visitAfter = tree_visitAfter;\\ntreeProto.x = tree_x;\\ntreeProto.y = tree_y;\\n\",\"import constant from \\\"./constant\\\";\\nimport jiggle from \\\"./jiggle\\\";\\nimport {quadtree} from \\\"d3-quadtree\\\";\\n\\nfunction x(d) {\\n  return d.x + d.vx;\\n}\\n\\nfunction y(d) {\\n  return d.y + d.vy;\\n}\\n\\nexport default function(radius) {\\n  var nodes,\\n      radii,\\n      strength = 1,\\n      iterations = 1;\\n\\n  if (typeof radius !== \\\"function\\\") radius = constant(radius == null ? 1 : +radius);\\n\\n  function force() {\\n    var i, n = nodes.length,\\n        tree,\\n        node,\\n        xi,\\n        yi,\\n        ri,\\n        ri2;\\n\\n    for (var k = 0; k < iterations; ++k) {\\n      tree = quadtree(nodes, x, y).visitAfter(prepare);\\n      for (i = 0; i < n; ++i) {\\n        node = nodes[i];\\n        ri = radii[node.index], ri2 = ri * ri;\\n        xi = node.x + node.vx;\\n        yi = node.y + node.vy;\\n        tree.visit(apply);\\n      }\\n    }\\n\\n    function apply(quad, x0, y0, x1, y1) {\\n      var data = quad.data, rj = quad.r, r = ri + rj;\\n      if (data) {\\n        if (data.index > node.index) {\\n          var x = xi - data.x - data.vx,\\n              y = yi - data.y - data.vy,\\n              l = x * x + y * y;\\n          if (l < r * r) {\\n            if (x === 0) x = jiggle(), l += x * x;\\n            if (y === 0) y = jiggle(), l += y * y;\\n            l = (r - (l = Math.sqrt(l))) / l * strength;\\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\\n            node.vy += (y *= l) * r;\\n            data.vx -= x * (r = 1 - r);\\n            data.vy -= y * r;\\n          }\\n        }\\n        return;\\n      }\\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\\n    }\\n  }\\n\\n  function prepare(quad) {\\n    if (quad.data) return quad.r = radii[quad.data.index];\\n    for (var i = quad.r = 0; i < 4; ++i) {\\n      if (quad[i] && quad[i].r > quad.r) {\\n        quad.r = quad[i].r;\\n      }\\n    }\\n  }\\n\\n  function initialize() {\\n    if (!nodes) return;\\n    var i, n = nodes.length, node;\\n    radii = new Array(n);\\n    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\\n  }\\n\\n  force.initialize = function(_) {\\n    nodes = _;\\n    initialize();\\n  };\\n\\n  force.iterations = function(_) {\\n    return arguments.length ? (iterations = +_, force) : iterations;\\n  };\\n\\n  force.strength = function(_) {\\n    return arguments.length ? (strength = +_, force) : strength;\\n  };\\n\\n  force.radius = function(_) {\\n    return arguments.length ? (radius = typeof _ === \\\"function\\\" ? _ : constant(+_), initialize(), force) : radius;\\n  };\\n\\n  return force;\\n}\\n\",\"export default function() {\\n  var data = [];\\n  this.visit(function(node) {\\n    if (!node.length) do data.push(node.data); while (node = node.next)\\n  });\\n  return data;\\n}\\n\",\"export default function(_) {\\n  return arguments.length\\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\\n}\\n\",\"import Quad from \\\"./quad\\\";\\n\\nexport default function(x, y, radius) {\\n  var data,\\n      x0 = this._x0,\\n      y0 = this._y0,\\n      x1,\\n      y1,\\n      x2,\\n      y2,\\n      x3 = this._x1,\\n      y3 = this._y1,\\n      quads = [],\\n      node = this._root,\\n      q,\\n      i;\\n\\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\\n  if (radius == null) radius = Infinity;\\n  else {\\n    x0 = x - radius, y0 = y - radius;\\n    x3 = x + radius, y3 = y + radius;\\n    radius *= radius;\\n  }\\n\\n  while (q = quads.pop()) {\\n\\n    // Stop searching if this quadrant can’t contain a closer node.\\n    if (!(node = q.node)\\n        || (x1 = q.x0) > x3\\n        || (y1 = q.y0) > y3\\n        || (x2 = q.x1) < x0\\n        || (y2 = q.y1) < y0) continue;\\n\\n    // Bisect the current quadrant.\\n    if (node.length) {\\n      var xm = (x1 + x2) / 2,\\n          ym = (y1 + y2) / 2;\\n\\n      quads.push(\\n        new Quad(node[3], xm, ym, x2, y2),\\n        new Quad(node[2], x1, ym, xm, y2),\\n        new Quad(node[1], xm, y1, x2, ym),\\n        new Quad(node[0], x1, y1, xm, ym)\\n      );\\n\\n      // Visit the closest quadrant first.\\n      if (i = (y >= ym) << 1 | (x >= xm)) {\\n        q = quads[quads.length - 1];\\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\\n        quads[quads.length - 1 - i] = q;\\n      }\\n    }\\n\\n    // Visit this point. (Visiting coincident points isn’t necessary!)\\n    else {\\n      var dx = x - +this._x.call(null, node.data),\\n          dy = y - +this._y.call(null, node.data),\\n          d2 = dx * dx + dy * dy;\\n      if (d2 < radius) {\\n        var d = Math.sqrt(radius = d2);\\n        x0 = x - d, y0 = y - d;\\n        x3 = x + d, y3 = y + d;\\n        data = node.data;\\n      }\\n    }\\n  }\\n\\n  return data;\\n}\\n\",\"export default function(d) {\\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\\n\\n  var parent,\\n      node = this._root,\\n      retainer,\\n      previous,\\n      next,\\n      x0 = this._x0,\\n      y0 = this._y0,\\n      x1 = this._x1,\\n      y1 = this._y1,\\n      x,\\n      y,\\n      xm,\\n      ym,\\n      right,\\n      bottom,\\n      i,\\n      j;\\n\\n  // If the tree is empty, initialize the root as a leaf.\\n  if (!node) return this;\\n\\n  // Find the leaf node for the point.\\n  // While descending, also retain the deepest parent with a non-removed sibling.\\n  if (node.length) while (true) {\\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\\n    if (!node.length) break;\\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\\n  }\\n\\n  // Find the point to remove.\\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\\n  if (next = node.next) delete node.next;\\n\\n  // If there are multiple coincident points, remove just the point.\\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\\n\\n  // If this is the root point, remove it.\\n  if (!parent) return this._root = next, this;\\n\\n  // Remove this leaf.\\n  next ? parent[i] = next : delete parent[i];\\n\\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\\n      && !node.length) {\\n    if (retainer) retainer[j] = node;\\n    else this._root = node;\\n  }\\n\\n  return this;\\n}\\n\\nexport function removeAll(data) {\\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\\n  return this;\\n}\\n\",\"export default function() {\\n  return this._root;\\n}\\n\",\"export default function() {\\n  var size = 0;\\n  this.visit(function(node) {\\n    if (!node.length) do ++size; while (node = node.next)\\n  });\\n  return size;\\n}\\n\",\"import Quad from \\\"./quad\\\";\\n\\nexport default function(callback) {\\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\\n  while (q = quads.pop()) {\\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\\n    }\\n  }\\n  return this;\\n}\\n\",\"import Quad from \\\"./quad\\\";\\n\\nexport default function(callback) {\\n  var quads = [], next = [], q;\\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\\n  while (q = quads.pop()) {\\n    var node = q.node;\\n    if (node.length) {\\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\\n    }\\n    next.push(q);\\n  }\\n  while (q = next.pop()) {\\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\\n  }\\n  return this;\\n}\\n\",\"import constant from \\\"./constant\\\";\\nimport jiggle from \\\"./jiggle\\\";\\nimport {map} from \\\"d3-collection\\\";\\n\\nfunction index(d) {\\n  return d.index;\\n}\\n\\nfunction find(nodeById, nodeId) {\\n  var node = nodeById.get(nodeId);\\n  if (!node) throw new Error(\\\"missing: \\\" + nodeId);\\n  return node;\\n}\\n\\nexport default function(links) {\\n  var id = index,\\n      strength = defaultStrength,\\n      strengths,\\n      distance = constant(30),\\n      distances,\\n      nodes,\\n      count,\\n      bias,\\n      iterations = 1;\\n\\n  if (links == null) links = [];\\n\\n  function defaultStrength(link) {\\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\\n  }\\n\\n  function force(alpha) {\\n    for (var k = 0, n = links.length; k < iterations; ++k) {\\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\\n        link = links[i], source = link.source, target = link.target;\\n        x = target.x + target.vx - source.x - source.vx || jiggle();\\n        y = target.y + target.vy - source.y - source.vy || jiggle();\\n        l = Math.sqrt(x * x + y * y);\\n        l = (l - distances[i]) / l * alpha * strengths[i];\\n        x *= l, y *= l;\\n        target.vx -= x * (b = bias[i]);\\n        target.vy -= y * b;\\n        source.vx += x * (b = 1 - b);\\n        source.vy += y * b;\\n      }\\n    }\\n  }\\n\\n  function initialize() {\\n    if (!nodes) return;\\n\\n    var i,\\n        n = nodes.length,\\n        m = links.length,\\n        nodeById = map(nodes, id),\\n        link;\\n\\n    for (i = 0, count = new Array(n); i < m; ++i) {\\n      link = links[i], link.index = i;\\n      if (typeof link.source !== \\\"object\\\") link.source = find(nodeById, link.source);\\n      if (typeof link.target !== \\\"object\\\") link.target = find(nodeById, link.target);\\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\\n    }\\n\\n    for (i = 0, bias = new Array(m); i < m; ++i) {\\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\\n    }\\n\\n    strengths = new Array(m), initializeStrength();\\n    distances = new Array(m), initializeDistance();\\n  }\\n\\n  function initializeStrength() {\\n    if (!nodes) return;\\n\\n    for (var i = 0, n = links.length; i < n; ++i) {\\n      strengths[i] = +strength(links[i], i, links);\\n    }\\n  }\\n\\n  function initializeDistance() {\\n    if (!nodes) return;\\n\\n    for (var i = 0, n = links.length; i < n; ++i) {\\n      distances[i] = +distance(links[i], i, links);\\n    }\\n  }\\n\\n  force.initialize = function(_) {\\n    nodes = _;\\n    initialize();\\n  };\\n\\n  force.links = function(_) {\\n    return arguments.length ? (links = _, initialize(), force) : links;\\n  };\\n\\n  force.id = function(_) {\\n    return arguments.length ? (id = _, force) : id;\\n  };\\n\\n  force.iterations = function(_) {\\n    return arguments.length ? (iterations = +_, force) : iterations;\\n  };\\n\\n  force.strength = function(_) {\\n    return arguments.length ? (strength = typeof _ === \\\"function\\\" ? _ : constant(+_), initializeStrength(), force) : strength;\\n  };\\n\\n  force.distance = function(_) {\\n    return arguments.length ? (distance = typeof _ === \\\"function\\\" ? _ : constant(+_), initializeDistance(), force) : distance;\\n  };\\n\\n  return force;\\n}\\n\",\"import {dispatch} from \\\"d3-dispatch\\\";\\nimport {map} from \\\"d3-collection\\\";\\nimport {timer} from \\\"d3-timer\\\";\\n\\nexport function x(d) {\\n  return d.x;\\n}\\n\\nexport function y(d) {\\n  return d.y;\\n}\\n\\nvar initialRadius = 10,\\n    initialAngle = Math.PI * (3 - Math.sqrt(5));\\n\\nexport default function(nodes) {\\n  var simulation,\\n      alpha = 1,\\n      alphaMin = 0.001,\\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\\n      alphaTarget = 0,\\n      velocityDecay = 0.6,\\n      forces = map(),\\n      stepper = timer(step),\\n      event = dispatch(\\\"tick\\\", \\\"end\\\");\\n\\n  if (nodes == null) nodes = [];\\n\\n  function step() {\\n    tick();\\n    event.call(\\\"tick\\\", simulation);\\n    if (alpha < alphaMin) {\\n      stepper.stop();\\n      event.call(\\\"end\\\", simulation);\\n    }\\n  }\\n\\n  function tick(iterations) {\\n    var i, n = nodes.length, node;\\n\\n    if (iterations === undefined) iterations = 1;\\n\\n    for (var k = 0; k < iterations; ++k) {\\n      alpha += (alphaTarget - alpha) * alphaDecay;\\n\\n      forces.each(function (force) {\\n        force(alpha);\\n      });\\n\\n      for (i = 0; i < n; ++i) {\\n        node = nodes[i];\\n        if (node.fx == null) node.x += node.vx *= velocityDecay;\\n        else node.x = node.fx, node.vx = 0;\\n        if (node.fy == null) node.y += node.vy *= velocityDecay;\\n        else node.y = node.fy, node.vy = 0;\\n      }\\n    }\\n\\n    return simulation;\\n  }\\n\\n  function initializeNodes() {\\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\\n      node = nodes[i], node.index = i;\\n      if (!isNaN(node.fx)) node.x = node.fx;\\n      if (!isNaN(node.fy)) node.y = node.fy;\\n      if (isNaN(node.x) || isNaN(node.y)) {\\n        var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\\n        node.x = radius * Math.cos(angle);\\n        node.y = radius * Math.sin(angle);\\n      }\\n      if (isNaN(node.vx) || isNaN(node.vy)) {\\n        node.vx = node.vy = 0;\\n      }\\n    }\\n  }\\n\\n  function initializeForce(force) {\\n    if (force.initialize) force.initialize(nodes);\\n    return force;\\n  }\\n\\n  initializeNodes();\\n\\n  return simulation = {\\n    tick: tick,\\n\\n    restart: function() {\\n      return stepper.restart(step), simulation;\\n    },\\n\\n    stop: function() {\\n      return stepper.stop(), simulation;\\n    },\\n\\n    nodes: function(_) {\\n      return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;\\n    },\\n\\n    alpha: function(_) {\\n      return arguments.length ? (alpha = +_, simulation) : alpha;\\n    },\\n\\n    alphaMin: function(_) {\\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\\n    },\\n\\n    alphaDecay: function(_) {\\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\\n    },\\n\\n    alphaTarget: function(_) {\\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\\n    },\\n\\n    velocityDecay: function(_) {\\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\\n    },\\n\\n    force: function(name, _) {\\n      return arguments.length > 1 ? ((_ == null ? forces.remove(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\\n    },\\n\\n    find: function(x, y, radius) {\\n      var i = 0,\\n          n = nodes.length,\\n          dx,\\n          dy,\\n          d2,\\n          node,\\n          closest;\\n\\n      if (radius == null) radius = Infinity;\\n      else radius *= radius;\\n\\n      for (i = 0; i < n; ++i) {\\n        node = nodes[i];\\n        dx = x - node.x;\\n        dy = y - node.y;\\n        d2 = dx * dx + dy * dy;\\n        if (d2 < radius) closest = node, radius = d2;\\n      }\\n\\n      return closest;\\n    },\\n\\n    on: function(name, _) {\\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\\n    }\\n  };\\n}\\n\",\"import constant from \\\"./constant\\\";\\nimport jiggle from \\\"./jiggle\\\";\\nimport {quadtree} from \\\"d3-quadtree\\\";\\nimport {x, y} from \\\"./simulation\\\";\\n\\nexport default function() {\\n  var nodes,\\n      node,\\n      alpha,\\n      strength = constant(-30),\\n      strengths,\\n      distanceMin2 = 1,\\n      distanceMax2 = Infinity,\\n      theta2 = 0.81;\\n\\n  function force(_) {\\n    var i, n = nodes.length, tree = quadtree(nodes, x, y).visitAfter(accumulate);\\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\\n  }\\n\\n  function initialize() {\\n    if (!nodes) return;\\n    var i, n = nodes.length, node;\\n    strengths = new Array(n);\\n    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\\n  }\\n\\n  function accumulate(quad) {\\n    var strength = 0, q, c, weight = 0, x, y, i;\\n\\n    // For internal nodes, accumulate forces from child quadrants.\\n    if (quad.length) {\\n      for (x = y = i = 0; i < 4; ++i) {\\n        if ((q = quad[i]) && (c = Math.abs(q.value))) {\\n          strength += q.value, weight += c, x += c * q.x, y += c * q.y;\\n        }\\n      }\\n      quad.x = x / weight;\\n      quad.y = y / weight;\\n    }\\n\\n    // For leaf nodes, accumulate forces from coincident quadrants.\\n    else {\\n      q = quad;\\n      q.x = q.data.x;\\n      q.y = q.data.y;\\n      do strength += strengths[q.data.index];\\n      while (q = q.next);\\n    }\\n\\n    quad.value = strength;\\n  }\\n\\n  function apply(quad, x1, _, x2) {\\n    if (!quad.value) return true;\\n\\n    var x = quad.x - node.x,\\n        y = quad.y - node.y,\\n        w = x2 - x1,\\n        l = x * x + y * y;\\n\\n    // Apply the Barnes-Hut approximation if possible.\\n    // Limit forces for very close nodes; randomize direction if coincident.\\n    if (w * w / theta2 < l) {\\n      if (l < distanceMax2) {\\n        if (x === 0) x = jiggle(), l += x * x;\\n        if (y === 0) y = jiggle(), l += y * y;\\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\\n        node.vx += x * quad.value * alpha / l;\\n        node.vy += y * quad.value * alpha / l;\\n      }\\n      return true;\\n    }\\n\\n    // Otherwise, process points directly.\\n    else if (quad.length || l >= distanceMax2) return;\\n\\n    // Limit forces for very close nodes; randomize direction if coincident.\\n    if (quad.data !== node || quad.next) {\\n      if (x === 0) x = jiggle(), l += x * x;\\n      if (y === 0) y = jiggle(), l += y * y;\\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\\n    }\\n\\n    do if (quad.data !== node) {\\n      w = strengths[quad.data.index] * alpha / l;\\n      node.vx += x * w;\\n      node.vy += y * w;\\n    } while (quad = quad.next);\\n  }\\n\\n  force.initialize = function(_) {\\n    nodes = _;\\n    initialize();\\n  };\\n\\n  force.strength = function(_) {\\n    return arguments.length ? (strength = typeof _ === \\\"function\\\" ? _ : constant(+_), initialize(), force) : strength;\\n  };\\n\\n  force.distanceMin = function(_) {\\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\\n  };\\n\\n  force.distanceMax = function(_) {\\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\\n  };\\n\\n  force.theta = function(_) {\\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\\n  };\\n\\n  return force;\\n}\\n\",\"import constant from \\\"./constant\\\";\\n\\nexport default function(radius, x, y) {\\n  var nodes,\\n      strength = constant(0.1),\\n      strengths,\\n      radiuses;\\n\\n  if (typeof radius !== \\\"function\\\") radius = constant(+radius);\\n  if (x == null) x = 0;\\n  if (y == null) y = 0;\\n\\n  function force(alpha) {\\n    for (var i = 0, n = nodes.length; i < n; ++i) {\\n      var node = nodes[i],\\n          dx = node.x - x || 1e-6,\\n          dy = node.y - y || 1e-6,\\n          r = Math.sqrt(dx * dx + dy * dy),\\n          k = (radiuses[i] - r) * strengths[i] * alpha / r;\\n      node.vx += dx * k;\\n      node.vy += dy * k;\\n    }\\n  }\\n\\n  function initialize() {\\n    if (!nodes) return;\\n    var i, n = nodes.length;\\n    strengths = new Array(n);\\n    radiuses = new Array(n);\\n    for (i = 0; i < n; ++i) {\\n      radiuses[i] = +radius(nodes[i], i, nodes);\\n      strengths[i] = isNaN(radiuses[i]) ? 0 : +strength(nodes[i], i, nodes);\\n    }\\n  }\\n\\n  force.initialize = function(_) {\\n    nodes = _, initialize();\\n  };\\n\\n  force.strength = function(_) {\\n    return arguments.length ? (strength = typeof _ === \\\"function\\\" ? _ : constant(+_), initialize(), force) : strength;\\n  };\\n\\n  force.radius = function(_) {\\n    return arguments.length ? (radius = typeof _ === \\\"function\\\" ? _ : constant(+_), initialize(), force) : radius;\\n  };\\n\\n  force.x = function(_) {\\n    return arguments.length ? (x = +_, force) : x;\\n  };\\n\\n  force.y = function(_) {\\n    return arguments.length ? (y = +_, force) : y;\\n  };\\n\\n  return force;\\n}\\n\",\"import constant from \\\"./constant\\\";\\n\\nexport default function(x) {\\n  var strength = constant(0.1),\\n      nodes,\\n      strengths,\\n      xz;\\n\\n  if (typeof x !== \\\"function\\\") x = constant(x == null ? 0 : +x);\\n\\n  function force(alpha) {\\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\\n    }\\n  }\\n\\n  function initialize() {\\n    if (!nodes) return;\\n    var i, n = nodes.length;\\n    strengths = new Array(n);\\n    xz = new Array(n);\\n    for (i = 0; i < n; ++i) {\\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\\n    }\\n  }\\n\\n  force.initialize = function(_) {\\n    nodes = _;\\n    initialize();\\n  };\\n\\n  force.strength = function(_) {\\n    return arguments.length ? (strength = typeof _ === \\\"function\\\" ? _ : constant(+_), initialize(), force) : strength;\\n  };\\n\\n  force.x = function(_) {\\n    return arguments.length ? (x = typeof _ === \\\"function\\\" ? _ : constant(+_), initialize(), force) : x;\\n  };\\n\\n  return force;\\n}\\n\",\"import constant from \\\"./constant\\\";\\n\\nexport default function(y) {\\n  var strength = constant(0.1),\\n      nodes,\\n      strengths,\\n      yz;\\n\\n  if (typeof y !== \\\"function\\\") y = constant(y == null ? 0 : +y);\\n\\n  function force(alpha) {\\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\\n    }\\n  }\\n\\n  function initialize() {\\n    if (!nodes) return;\\n    var i, n = nodes.length;\\n    strengths = new Array(n);\\n    yz = new Array(n);\\n    for (i = 0; i < n; ++i) {\\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\\n    }\\n  }\\n\\n  force.initialize = function(_) {\\n    nodes = _;\\n    initialize();\\n  };\\n\\n  force.strength = function(_) {\\n    return arguments.length ? (strength = typeof _ === \\\"function\\\" ? _ : constant(+_), initialize(), force) : strength;\\n  };\\n\\n  force.y = function(_) {\\n    return arguments.length ? (y = typeof _ === \\\"function\\\" ? _ : constant(+_), initialize(), force) : y;\\n  };\\n\\n  return force;\\n}\\n\",\"// Computes the decimal coefficient and exponent of the specified number x with\\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\\n// For example, formatDecimal(1.23) returns [\\\"123\\\", 0].\\nexport default function(x, p) {\\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\\\"e\\\")) < 0) return null; // NaN, ±Infinity\\n  var i, coefficient = x.slice(0, i);\\n\\n  // The string returned by toExponential either has the form \\\\d\\\\.\\\\d+e[-+]\\\\d+\\n  // (e.g., 1.2e+3) or the form \\\\de[-+]\\\\d+ (e.g., 1e+3).\\n  return [\\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\\n    +x.slice(i + 1)\\n  ];\\n}\\n\",\"import formatDecimal from \\\"./formatDecimal\\\";\\n\\nexport default function(x) {\\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\\n}\\n\",\"// [[fill]align][sign][symbol][0][width][,][.precision][~][type]\\nvar re = /^(?:(.)?([<>=^]))?([+\\\\-( ])?([$#])?(0)?(\\\\d+)?(,)?(\\\\.\\\\d+)?(~)?([a-z%])?$/i;\\n\\nexport default function formatSpecifier(specifier) {\\n  return new FormatSpecifier(specifier);\\n}\\n\\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\\n\\nfunction FormatSpecifier(specifier) {\\n  if (!(match = re.exec(specifier))) throw new Error(\\\"invalid format: \\\" + specifier);\\n  var match;\\n  this.fill = match[1] || \\\" \\\";\\n  this.align = match[2] || \\\">\\\";\\n  this.sign = match[3] || \\\"-\\\";\\n  this.symbol = match[4] || \\\"\\\";\\n  this.zero = !!match[5];\\n  this.width = match[6] && +match[6];\\n  this.comma = !!match[7];\\n  this.precision = match[8] && +match[8].slice(1);\\n  this.trim = !!match[9];\\n  this.type = match[10] || \\\"\\\";\\n}\\n\\nFormatSpecifier.prototype.toString = function() {\\n  return this.fill\\n      + this.align\\n      + this.sign\\n      + this.symbol\\n      + (this.zero ? \\\"0\\\" : \\\"\\\")\\n      + (this.width == null ? \\\"\\\" : Math.max(1, this.width | 0))\\n      + (this.comma ? \\\",\\\" : \\\"\\\")\\n      + (this.precision == null ? \\\"\\\" : \\\".\\\" + Math.max(0, this.precision | 0))\\n      + (this.trim ? \\\"~\\\" : \\\"\\\")\\n      + this.type;\\n};\\n\",\"// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.\\nexport default function(s) {\\n  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {\\n    switch (s[i]) {\\n      case \\\".\\\": i0 = i1 = i; break;\\n      case \\\"0\\\": if (i0 === 0) i0 = i; i1 = i; break;\\n      default: if (i0 > 0) { if (!+s[i]) break out; i0 = 0; } break;\\n    }\\n  }\\n  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;\\n}\\n\",\"import formatDecimal from \\\"./formatDecimal\\\";\\n\\nexport var prefixExponent;\\n\\nexport default function(x, p) {\\n  var d = formatDecimal(x, p);\\n  if (!d) return x + \\\"\\\";\\n  var coefficient = d[0],\\n      exponent = d[1],\\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\\n      n = coefficient.length;\\n  return i === n ? coefficient\\n      : i > n ? coefficient + new Array(i - n + 1).join(\\\"0\\\")\\n      : i > 0 ? coefficient.slice(0, i) + \\\".\\\" + coefficient.slice(i)\\n      : \\\"0.\\\" + new Array(1 - i).join(\\\"0\\\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\\n}\\n\",\"import formatLocale from \\\"./locale\\\";\\n\\nvar locale;\\nexport var format;\\nexport var formatPrefix;\\n\\ndefaultLocale({\\n  decimal: \\\".\\\",\\n  thousands: \\\",\\\",\\n  grouping: [3],\\n  currency: [\\\"$\\\", \\\"\\\"]\\n});\\n\\nexport default function defaultLocale(definition) {\\n  locale = formatLocale(definition);\\n  format = locale.format;\\n  formatPrefix = locale.formatPrefix;\\n  return locale;\\n}\\n\",\"import formatDecimal from \\\"./formatDecimal\\\";\\n\\nexport default function(x, p) {\\n  var d = formatDecimal(x, p);\\n  if (!d) return x + \\\"\\\";\\n  var coefficient = d[0],\\n      exponent = d[1];\\n  return exponent < 0 ? \\\"0.\\\" + new Array(-exponent).join(\\\"0\\\") + coefficient\\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \\\".\\\" + coefficient.slice(exponent + 1)\\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\\\"0\\\");\\n}\\n\",\"import formatPrefixAuto from \\\"./formatPrefixAuto\\\";\\nimport formatRounded from \\\"./formatRounded\\\";\\n\\nexport default {\\n  \\\"%\\\": function(x, p) { return (x * 100).toFixed(p); },\\n  \\\"b\\\": function(x) { return Math.round(x).toString(2); },\\n  \\\"c\\\": function(x) { return x + \\\"\\\"; },\\n  \\\"d\\\": function(x) { return Math.round(x).toString(10); },\\n  \\\"e\\\": function(x, p) { return x.toExponential(p); },\\n  \\\"f\\\": function(x, p) { return x.toFixed(p); },\\n  \\\"g\\\": function(x, p) { return x.toPrecision(p); },\\n  \\\"o\\\": function(x) { return Math.round(x).toString(8); },\\n  \\\"p\\\": function(x, p) { return formatRounded(x * 100, p); },\\n  \\\"r\\\": formatRounded,\\n  \\\"s\\\": formatPrefixAuto,\\n  \\\"X\\\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\\n  \\\"x\\\": function(x) { return Math.round(x).toString(16); }\\n};\\n\",\"export default function(x) {\\n  return x;\\n}\\n\",\"import exponent from \\\"./exponent\\\";\\nimport formatGroup from \\\"./formatGroup\\\";\\nimport formatNumerals from \\\"./formatNumerals\\\";\\nimport formatSpecifier from \\\"./formatSpecifier\\\";\\nimport formatTrim from \\\"./formatTrim\\\";\\nimport formatTypes from \\\"./formatTypes\\\";\\nimport {prefixExponent} from \\\"./formatPrefixAuto\\\";\\nimport identity from \\\"./identity\\\";\\n\\nvar prefixes = [\\\"y\\\",\\\"z\\\",\\\"a\\\",\\\"f\\\",\\\"p\\\",\\\"n\\\",\\\"µ\\\",\\\"m\\\",\\\"\\\",\\\"k\\\",\\\"M\\\",\\\"G\\\",\\\"T\\\",\\\"P\\\",\\\"E\\\",\\\"Z\\\",\\\"Y\\\"];\\n\\nexport default function(locale) {\\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity,\\n      currency = locale.currency,\\n      decimal = locale.decimal,\\n      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity,\\n      percent = locale.percent || \\\"%\\\";\\n\\n  function newFormat(specifier) {\\n    specifier = formatSpecifier(specifier);\\n\\n    var fill = specifier.fill,\\n        align = specifier.align,\\n        sign = specifier.sign,\\n        symbol = specifier.symbol,\\n        zero = specifier.zero,\\n        width = specifier.width,\\n        comma = specifier.comma,\\n        precision = specifier.precision,\\n        trim = specifier.trim,\\n        type = specifier.type;\\n\\n    // The \\\"n\\\" type is an alias for \\\",g\\\".\\n    if (type === \\\"n\\\") comma = true, type = \\\"g\\\";\\n\\n    // The \\\"\\\" type, and any invalid type, is an alias for \\\".12~g\\\".\\n    else if (!formatTypes[type]) precision == null && (precision = 12), trim = true, type = \\\"g\\\";\\n\\n    // If zero fill is specified, padding goes after sign and before digits.\\n    if (zero || (fill === \\\"0\\\" && align === \\\"=\\\")) zero = true, fill = \\\"0\\\", align = \\\"=\\\";\\n\\n    // Compute the prefix and suffix.\\n    // For SI-prefix, the suffix is lazily computed.\\n    var prefix = symbol === \\\"$\\\" ? currency[0] : symbol === \\\"#\\\" && /[boxX]/.test(type) ? \\\"0\\\" + type.toLowerCase() : \\\"\\\",\\n        suffix = symbol === \\\"$\\\" ? currency[1] : /[%p]/.test(type) ? percent : \\\"\\\";\\n\\n    // What format function should we use?\\n    // Is this an integer type?\\n    // Can this type generate exponential notation?\\n    var formatType = formatTypes[type],\\n        maybeSuffix = /[defgprs%]/.test(type);\\n\\n    // Set the default precision if not specified,\\n    // or clamp the specified precision to the supported range.\\n    // For significant precision, it must be in [1, 21].\\n    // For fixed precision, it must be in [0, 20].\\n    precision = precision == null ? 6\\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\\n        : Math.max(0, Math.min(20, precision));\\n\\n    function format(value) {\\n      var valuePrefix = prefix,\\n          valueSuffix = suffix,\\n          i, n, c;\\n\\n      if (type === \\\"c\\\") {\\n        valueSuffix = formatType(value) + valueSuffix;\\n        value = \\\"\\\";\\n      } else {\\n        value = +value;\\n\\n        // Perform the initial formatting.\\n        var valueNegative = value < 0;\\n        value = formatType(Math.abs(value), precision);\\n\\n        // Trim insignificant zeros.\\n        if (trim) value = formatTrim(value);\\n\\n        // If a negative value rounds to zero during formatting, treat as positive.\\n        if (valueNegative && +value === 0) valueNegative = false;\\n\\n        // Compute the prefix and suffix.\\n        valuePrefix = (valueNegative ? (sign === \\\"(\\\" ? sign : \\\"-\\\") : sign === \\\"-\\\" || sign === \\\"(\\\" ? \\\"\\\" : sign) + valuePrefix;\\n        valueSuffix = (type === \\\"s\\\" ? prefixes[8 + prefixExponent / 3] : \\\"\\\") + valueSuffix + (valueNegative && sign === \\\"(\\\" ? \\\")\\\" : \\\"\\\");\\n\\n        // Break the formatted value into the integer “value” part that can be\\n        // grouped, and fractional or exponential “suffix” part that is not.\\n        if (maybeSuffix) {\\n          i = -1, n = value.length;\\n          while (++i < n) {\\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\\n              value = value.slice(0, i);\\n              break;\\n            }\\n          }\\n        }\\n      }\\n\\n      // If the fill character is not \\\"0\\\", grouping is applied before padding.\\n      if (comma && !zero) value = group(value, Infinity);\\n\\n      // Compute the padding.\\n      var length = valuePrefix.length + value.length + valueSuffix.length,\\n          padding = length < width ? new Array(width - length + 1).join(fill) : \\\"\\\";\\n\\n      // If the fill character is \\\"0\\\", grouping is applied after padding.\\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \\\"\\\";\\n\\n      // Reconstruct the final output based on the desired alignment.\\n      switch (align) {\\n        case \\\"<\\\": value = valuePrefix + value + valueSuffix + padding; break;\\n        case \\\"=\\\": value = valuePrefix + padding + value + valueSuffix; break;\\n        case \\\"^\\\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\\n        default: value = padding + valuePrefix + value + valueSuffix; break;\\n      }\\n\\n      return numerals(value);\\n    }\\n\\n    format.toString = function() {\\n      return specifier + \\\"\\\";\\n    };\\n\\n    return format;\\n  }\\n\\n  function formatPrefix(specifier, value) {\\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \\\"f\\\", specifier)),\\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\\n        k = Math.pow(10, -e),\\n        prefix = prefixes[8 + e / 3];\\n    return function(value) {\\n      return f(k * value) + prefix;\\n    };\\n  }\\n\\n  return {\\n    format: newFormat,\\n    formatPrefix: formatPrefix\\n  };\\n}\\n\",\"export default function(grouping, thousands) {\\n  return function(value, width) {\\n    var i = value.length,\\n        t = [],\\n        j = 0,\\n        g = grouping[0],\\n        length = 0;\\n\\n    while (i > 0 && g > 0) {\\n      if (length + g + 1 > width) g = Math.max(1, width - length);\\n      t.push(value.substring(i -= g, i + g));\\n      if ((length += g + 1) > width) break;\\n      g = grouping[j = (j + 1) % grouping.length];\\n    }\\n\\n    return t.reverse().join(thousands);\\n  };\\n}\\n\",\"export default function(numerals) {\\n  return function(value) {\\n    return value.replace(/[0-9]/g, function(i) {\\n      return numerals[+i];\\n    });\\n  };\\n}\\n\",\"import exponent from \\\"./exponent\\\";\\n\\nexport default function(step) {\\n  return Math.max(0, -exponent(Math.abs(step)));\\n}\\n\",\"import exponent from \\\"./exponent\\\";\\n\\nexport default function(step, value) {\\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\\n}\\n\",\"import exponent from \\\"./exponent\\\";\\n\\nexport default function(step, max) {\\n  step = Math.abs(step), max = Math.abs(max) - step;\\n  return Math.max(0, exponent(max) - exponent(step)) + 1;\\n}\\n\",\"// Adds floating point numbers with twice the normal precision.\\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\\n// 305–363 (1997).\\n// Code adapted from GeographicLib by Charles F. F. Karney,\\n// http://geographiclib.sourceforge.net/\\n\\nexport default function() {\\n  return new Adder;\\n}\\n\\nfunction Adder() {\\n  this.reset();\\n}\\n\\nAdder.prototype = {\\n  constructor: Adder,\\n  reset: function() {\\n    this.s = // rounded value\\n    this.t = 0; // exact error\\n  },\\n  add: function(y) {\\n    add(temp, y, this.t);\\n    add(this, temp.s, this.s);\\n    if (this.s) this.t += temp.t;\\n    else this.s = temp.t;\\n  },\\n  valueOf: function() {\\n    return this.s;\\n  }\\n};\\n\\nvar temp = new Adder;\\n\\nfunction add(adder, a, b) {\\n  var x = adder.s = a + b,\\n      bv = x - a,\\n      av = x - bv;\\n  adder.t = (a - av) + (b - bv);\\n}\\n\",\"export var epsilon = 1e-6;\\nexport var epsilon2 = 1e-12;\\nexport var pi = Math.PI;\\nexport var halfPi = pi / 2;\\nexport var quarterPi = pi / 4;\\nexport var tau = pi * 2;\\n\\nexport var degrees = 180 / pi;\\nexport var radians = pi / 180;\\n\\nexport var abs = Math.abs;\\nexport var atan = Math.atan;\\nexport var atan2 = Math.atan2;\\nexport var cos = Math.cos;\\nexport var ceil = Math.ceil;\\nexport var exp = Math.exp;\\nexport var floor = Math.floor;\\nexport var log = Math.log;\\nexport var pow = Math.pow;\\nexport var sin = Math.sin;\\nexport var sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\\nexport var sqrt = Math.sqrt;\\nexport var tan = Math.tan;\\n\\nexport function acos(x) {\\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\\n}\\n\\nexport function asin(x) {\\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\\n}\\n\\nexport function haversin(x) {\\n  return (x = sin(x / 2)) * x;\\n}\\n\",\"export default function noop() {}\\n\",\"function streamGeometry(geometry, stream) {\\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\\n    streamGeometryType[geometry.type](geometry, stream);\\n  }\\n}\\n\\nvar streamObjectType = {\\n  Feature: function(object, stream) {\\n    streamGeometry(object.geometry, stream);\\n  },\\n  FeatureCollection: function(object, stream) {\\n    var features = object.features, i = -1, n = features.length;\\n    while (++i < n) streamGeometry(features[i].geometry, stream);\\n  }\\n};\\n\\nvar streamGeometryType = {\\n  Sphere: function(object, stream) {\\n    stream.sphere();\\n  },\\n  Point: function(object, stream) {\\n    object = object.coordinates;\\n    stream.point(object[0], object[1], object[2]);\\n  },\\n  MultiPoint: function(object, stream) {\\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\\n  },\\n  LineString: function(object, stream) {\\n    streamLine(object.coordinates, stream, 0);\\n  },\\n  MultiLineString: function(object, stream) {\\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\\n    while (++i < n) streamLine(coordinates[i], stream, 0);\\n  },\\n  Polygon: function(object, stream) {\\n    streamPolygon(object.coordinates, stream);\\n  },\\n  MultiPolygon: function(object, stream) {\\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\\n    while (++i < n) streamPolygon(coordinates[i], stream);\\n  },\\n  GeometryCollection: function(object, stream) {\\n    var geometries = object.geometries, i = -1, n = geometries.length;\\n    while (++i < n) streamGeometry(geometries[i], stream);\\n  }\\n};\\n\\nfunction streamLine(coordinates, stream, closed) {\\n  var i = -1, n = coordinates.length - closed, coordinate;\\n  stream.lineStart();\\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\\n  stream.lineEnd();\\n}\\n\\nfunction streamPolygon(coordinates, stream) {\\n  var i = -1, n = coordinates.length;\\n  stream.polygonStart();\\n  while (++i < n) streamLine(coordinates[i], stream, 1);\\n  stream.polygonEnd();\\n}\\n\\nexport default function(object, stream) {\\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\\n    streamObjectType[object.type](object, stream);\\n  } else {\\n    streamGeometry(object, stream);\\n  }\\n}\\n\",\"import adder from \\\"./adder\\\";\\nimport {atan2, cos, quarterPi, radians, sin, tau} from \\\"./math\\\";\\nimport noop from \\\"./noop\\\";\\nimport stream from \\\"./stream\\\";\\n\\nexport var areaRingSum = adder();\\n\\nvar areaSum = adder(),\\n    lambda00,\\n    phi00,\\n    lambda0,\\n    cosPhi0,\\n    sinPhi0;\\n\\nexport var areaStream = {\\n  point: noop,\\n  lineStart: noop,\\n  lineEnd: noop,\\n  polygonStart: function() {\\n    areaRingSum.reset();\\n    areaStream.lineStart = areaRingStart;\\n    areaStream.lineEnd = areaRingEnd;\\n  },\\n  polygonEnd: function() {\\n    var areaRing = +areaRingSum;\\n    areaSum.add(areaRing < 0 ? tau + areaRing : areaRing);\\n    this.lineStart = this.lineEnd = this.point = noop;\\n  },\\n  sphere: function() {\\n    areaSum.add(tau);\\n  }\\n};\\n\\nfunction areaRingStart() {\\n  areaStream.point = areaPointFirst;\\n}\\n\\nfunction areaRingEnd() {\\n  areaPoint(lambda00, phi00);\\n}\\n\\nfunction areaPointFirst(lambda, phi) {\\n  areaStream.point = areaPoint;\\n  lambda00 = lambda, phi00 = phi;\\n  lambda *= radians, phi *= radians;\\n  lambda0 = lambda, cosPhi0 = cos(phi = phi / 2 + quarterPi), sinPhi0 = sin(phi);\\n}\\n\\nfunction areaPoint(lambda, phi) {\\n  lambda *= radians, phi *= radians;\\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\\n\\n  // Spherical excess E for a spherical triangle with vertices: south pole,\\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\\n  var dLambda = lambda - lambda0,\\n      sdLambda = dLambda >= 0 ? 1 : -1,\\n      adLambda = sdLambda * dLambda,\\n      cosPhi = cos(phi),\\n      sinPhi = sin(phi),\\n      k = sinPhi0 * sinPhi,\\n      u = cosPhi0 * cosPhi + k * cos(adLambda),\\n      v = k * sdLambda * sin(adLambda);\\n  areaRingSum.add(atan2(v, u));\\n\\n  // Advance the previous points.\\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\\n}\\n\\nexport default function(object) {\\n  areaSum.reset();\\n  stream(object, areaStream);\\n  return areaSum * 2;\\n}\\n\",\"import {asin, atan2, cos, sin, sqrt} from \\\"./math\\\";\\n\\nexport function spherical(cartesian) {\\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\\n}\\n\\nexport function cartesian(spherical) {\\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos(phi);\\n  return [cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi)];\\n}\\n\\nexport function cartesianDot(a, b) {\\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\\n}\\n\\nexport function cartesianCross(a, b) {\\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\\n}\\n\\n// TODO return a\\nexport function cartesianAddInPlace(a, b) {\\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\\n}\\n\\nexport function cartesianScale(vector, k) {\\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\\n}\\n\\n// TODO return d\\nexport function cartesianNormalizeInPlace(d) {\\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\\n  d[0] /= l, d[1] /= l, d[2] /= l;\\n}\\n\",\"import adder from \\\"./adder\\\";\\nimport {areaStream, areaRingSum} from \\\"./area\\\";\\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace, spherical} from \\\"./cartesian\\\";\\nimport {abs, degrees, epsilon, radians} from \\\"./math\\\";\\nimport stream from \\\"./stream\\\";\\n\\nvar lambda0, phi0, lambda1, phi1, // bounds\\n    lambda2, // previous lambda-coordinate\\n    lambda00, phi00, // first point\\n    p0, // previous 3D point\\n    deltaSum = adder(),\\n    ranges,\\n    range;\\n\\nvar boundsStream = {\\n  point: boundsPoint,\\n  lineStart: boundsLineStart,\\n  lineEnd: boundsLineEnd,\\n  polygonStart: function() {\\n    boundsStream.point = boundsRingPoint;\\n    boundsStream.lineStart = boundsRingStart;\\n    boundsStream.lineEnd = boundsRingEnd;\\n    deltaSum.reset();\\n    areaStream.polygonStart();\\n  },\\n  polygonEnd: function() {\\n    areaStream.polygonEnd();\\n    boundsStream.point = boundsPoint;\\n    boundsStream.lineStart = boundsLineStart;\\n    boundsStream.lineEnd = boundsLineEnd;\\n    if (areaRingSum < 0) lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);\\n    else if (deltaSum > epsilon) phi1 = 90;\\n    else if (deltaSum < -epsilon) phi0 = -90;\\n    range[0] = lambda0, range[1] = lambda1;\\n  }\\n};\\n\\nfunction boundsPoint(lambda, phi) {\\n  ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\\n  if (phi < phi0) phi0 = phi;\\n  if (phi > phi1) phi1 = phi;\\n}\\n\\nfunction linePoint(lambda, phi) {\\n  var p = cartesian([lambda * radians, phi * radians]);\\n  if (p0) {\\n    var normal = cartesianCross(p0, p),\\n        equatorial = [normal[1], -normal[0], 0],\\n        inflection = cartesianCross(equatorial, normal);\\n    cartesianNormalizeInPlace(inflection);\\n    inflection = spherical(inflection);\\n    var delta = lambda - lambda2,\\n        sign = delta > 0 ? 1 : -1,\\n        lambdai = inflection[0] * degrees * sign,\\n        phii,\\n        antimeridian = abs(delta) > 180;\\n    if (antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\\n      phii = inflection[1] * degrees;\\n      if (phii > phi1) phi1 = phii;\\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\\n      phii = -inflection[1] * degrees;\\n      if (phii < phi0) phi0 = phii;\\n    } else {\\n      if (phi < phi0) phi0 = phi;\\n      if (phi > phi1) phi1 = phi;\\n    }\\n    if (antimeridian) {\\n      if (lambda < lambda2) {\\n        if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\\n      } else {\\n        if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\\n      }\\n    } else {\\n      if (lambda1 >= lambda0) {\\n        if (lambda < lambda0) lambda0 = lambda;\\n        if (lambda > lambda1) lambda1 = lambda;\\n      } else {\\n        if (lambda > lambda2) {\\n          if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\\n        } else {\\n          if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\\n        }\\n      }\\n    }\\n  } else {\\n    ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\\n  }\\n  if (phi < phi0) phi0 = phi;\\n  if (phi > phi1) phi1 = phi;\\n  p0 = p, lambda2 = lambda;\\n}\\n\\nfunction boundsLineStart() {\\n  boundsStream.point = linePoint;\\n}\\n\\nfunction boundsLineEnd() {\\n  range[0] = lambda0, range[1] = lambda1;\\n  boundsStream.point = boundsPoint;\\n  p0 = null;\\n}\\n\\nfunction boundsRingPoint(lambda, phi) {\\n  if (p0) {\\n    var delta = lambda - lambda2;\\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\\n  } else {\\n    lambda00 = lambda, phi00 = phi;\\n  }\\n  areaStream.point(lambda, phi);\\n  linePoint(lambda, phi);\\n}\\n\\nfunction boundsRingStart() {\\n  areaStream.lineStart();\\n}\\n\\nfunction boundsRingEnd() {\\n  boundsRingPoint(lambda00, phi00);\\n  areaStream.lineEnd();\\n  if (abs(deltaSum) > epsilon) lambda0 = -(lambda1 = 180);\\n  range[0] = lambda0, range[1] = lambda1;\\n  p0 = null;\\n}\\n\\n// Finds the left-right distance between two longitudes.\\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\\n// the distance between ±180° to be 360°.\\nfunction angle(lambda0, lambda1) {\\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\\n}\\n\\nfunction rangeCompare(a, b) {\\n  return a[0] - b[0];\\n}\\n\\nfunction rangeContains(range, x) {\\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\\n}\\n\\nexport default function(feature) {\\n  var i, n, a, b, merged, deltaMax, delta;\\n\\n  phi1 = lambda1 = -(lambda0 = phi0 = Infinity);\\n  ranges = [];\\n  stream(feature, boundsStream);\\n\\n  // First, sort ranges by their minimum longitudes.\\n  if (n = ranges.length) {\\n    ranges.sort(rangeCompare);\\n\\n    // Then, merge any ranges that overlap.\\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\\n      b = ranges[i];\\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\\n      } else {\\n        merged.push(a = b);\\n      }\\n    }\\n\\n    // Finally, find the largest gap between the merged ranges.\\n    // The final bounding box will be the inverse of this gap.\\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\\n      b = merged[i];\\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0 = b[0], lambda1 = a[1];\\n    }\\n  }\\n\\n  ranges = range = null;\\n\\n  return lambda0 === Infinity || phi0 === Infinity\\n      ? [[NaN, NaN], [NaN, NaN]]\\n      : [[lambda0, phi0], [lambda1, phi1]];\\n}\\n\",\"import {asin, atan2, cos, degrees, epsilon, epsilon2, radians, sin, sqrt} from \\\"./math\\\";\\nimport noop from \\\"./noop\\\";\\nimport stream from \\\"./stream\\\";\\n\\nvar W0, W1,\\n    X0, Y0, Z0,\\n    X1, Y1, Z1,\\n    X2, Y2, Z2,\\n    lambda00, phi00, // first point\\n    x0, y0, z0; // previous point\\n\\nvar centroidStream = {\\n  sphere: noop,\\n  point: centroidPoint,\\n  lineStart: centroidLineStart,\\n  lineEnd: centroidLineEnd,\\n  polygonStart: function() {\\n    centroidStream.lineStart = centroidRingStart;\\n    centroidStream.lineEnd = centroidRingEnd;\\n  },\\n  polygonEnd: function() {\\n    centroidStream.lineStart = centroidLineStart;\\n    centroidStream.lineEnd = centroidLineEnd;\\n  }\\n};\\n\\n// Arithmetic mean of Cartesian vectors.\\nfunction centroidPoint(lambda, phi) {\\n  lambda *= radians, phi *= radians;\\n  var cosPhi = cos(phi);\\n  centroidPointCartesian(cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi));\\n}\\n\\nfunction centroidPointCartesian(x, y, z) {\\n  ++W0;\\n  X0 += (x - X0) / W0;\\n  Y0 += (y - Y0) / W0;\\n  Z0 += (z - Z0) / W0;\\n}\\n\\nfunction centroidLineStart() {\\n  centroidStream.point = centroidLinePointFirst;\\n}\\n\\nfunction centroidLinePointFirst(lambda, phi) {\\n  lambda *= radians, phi *= radians;\\n  var cosPhi = cos(phi);\\n  x0 = cosPhi * cos(lambda);\\n  y0 = cosPhi * sin(lambda);\\n  z0 = sin(phi);\\n  centroidStream.point = centroidLinePoint;\\n  centroidPointCartesian(x0, y0, z0);\\n}\\n\\nfunction centroidLinePoint(lambda, phi) {\\n  lambda *= radians, phi *= radians;\\n  var cosPhi = cos(phi),\\n      x = cosPhi * cos(lambda),\\n      y = cosPhi * sin(lambda),\\n      z = sin(phi),\\n      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\\n  W1 += w;\\n  X1 += w * (x0 + (x0 = x));\\n  Y1 += w * (y0 + (y0 = y));\\n  Z1 += w * (z0 + (z0 = z));\\n  centroidPointCartesian(x0, y0, z0);\\n}\\n\\nfunction centroidLineEnd() {\\n  centroidStream.point = centroidPoint;\\n}\\n\\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\\n// J. Applied Mechanics 42, 239 (1975).\\nfunction centroidRingStart() {\\n  centroidStream.point = centroidRingPointFirst;\\n}\\n\\nfunction centroidRingEnd() {\\n  centroidRingPoint(lambda00, phi00);\\n  centroidStream.point = centroidPoint;\\n}\\n\\nfunction centroidRingPointFirst(lambda, phi) {\\n  lambda00 = lambda, phi00 = phi;\\n  lambda *= radians, phi *= radians;\\n  centroidStream.point = centroidRingPoint;\\n  var cosPhi = cos(phi);\\n  x0 = cosPhi * cos(lambda);\\n  y0 = cosPhi * sin(lambda);\\n  z0 = sin(phi);\\n  centroidPointCartesian(x0, y0, z0);\\n}\\n\\nfunction centroidRingPoint(lambda, phi) {\\n  lambda *= radians, phi *= radians;\\n  var cosPhi = cos(phi),\\n      x = cosPhi * cos(lambda),\\n      y = cosPhi * sin(lambda),\\n      z = sin(phi),\\n      cx = y0 * z - z0 * y,\\n      cy = z0 * x - x0 * z,\\n      cz = x0 * y - y0 * x,\\n      m = sqrt(cx * cx + cy * cy + cz * cz),\\n      w = asin(m), // line weight = angle\\n      v = m && -w / m; // area weight multiplier\\n  X2 += v * cx;\\n  Y2 += v * cy;\\n  Z2 += v * cz;\\n  W1 += w;\\n  X1 += w * (x0 + (x0 = x));\\n  Y1 += w * (y0 + (y0 = y));\\n  Z1 += w * (z0 + (z0 = z));\\n  centroidPointCartesian(x0, y0, z0);\\n}\\n\\nexport default function(object) {\\n  W0 = W1 =\\n  X0 = Y0 = Z0 =\\n  X1 = Y1 = Z1 =\\n  X2 = Y2 = Z2 = 0;\\n  stream(object, centroidStream);\\n\\n  var x = X2,\\n      y = Y2,\\n      z = Z2,\\n      m = x * x + y * y + z * z;\\n\\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\\n  if (m < epsilon2) {\\n    x = X1, y = Y1, z = Z1;\\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\\n    if (W1 < epsilon) x = X0, y = Y0, z = Z0;\\n    m = x * x + y * y + z * z;\\n    // If the feature still has an undefined ccentroid, then return.\\n    if (m < epsilon2) return [NaN, NaN];\\n  }\\n\\n  return [atan2(y, x) * degrees, asin(z / sqrt(m)) * degrees];\\n}\\n\",\"export default function(x) {\\n  return function() {\\n    return x;\\n  };\\n}\\n\",\"export default function(a, b) {\\n\\n  function compose(x, y) {\\n    return x = a(x, y), b(x[0], x[1]);\\n  }\\n\\n  if (a.invert && b.invert) compose.invert = function(x, y) {\\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\\n  };\\n\\n  return compose;\\n}\\n\",\"import compose from \\\"./compose\\\";\\nimport {abs, asin, atan2, cos, degrees, pi, radians, sin, tau} from \\\"./math\\\";\\n\\nfunction rotationIdentity(lambda, phi) {\\n  return [abs(lambda) > pi ? lambda + Math.round(-lambda / tau) * tau : lambda, phi];\\n}\\n\\nrotationIdentity.invert = rotationIdentity;\\n\\nexport function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\\n  return (deltaLambda %= tau) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\\n    : rotationLambda(deltaLambda))\\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\\n    : rotationIdentity);\\n}\\n\\nfunction forwardRotationLambda(deltaLambda) {\\n  return function(lambda, phi) {\\n    return lambda += deltaLambda, [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\\n  };\\n}\\n\\nfunction rotationLambda(deltaLambda) {\\n  var rotation = forwardRotationLambda(deltaLambda);\\n  rotation.invert = forwardRotationLambda(-deltaLambda);\\n  return rotation;\\n}\\n\\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\\n  var cosDeltaPhi = cos(deltaPhi),\\n      sinDeltaPhi = sin(deltaPhi),\\n      cosDeltaGamma = cos(deltaGamma),\\n      sinDeltaGamma = sin(deltaGamma);\\n\\n  function rotation(lambda, phi) {\\n    var cosPhi = cos(phi),\\n        x = cos(lambda) * cosPhi,\\n        y = sin(lambda) * cosPhi,\\n        z = sin(phi),\\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\\n    return [\\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\\n    ];\\n  }\\n\\n  rotation.invert = function(lambda, phi) {\\n    var cosPhi = cos(phi),\\n        x = cos(lambda) * cosPhi,\\n        y = sin(lambda) * cosPhi,\\n        z = sin(phi),\\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\\n    return [\\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\\n    ];\\n  };\\n\\n  return rotation;\\n}\\n\\nexport default function(rotate) {\\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\\n\\n  function forward(coordinates) {\\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\\n  }\\n\\n  forward.invert = function(coordinates) {\\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\\n  };\\n\\n  return forward;\\n}\\n\",\"import {cartesian, cartesianNormalizeInPlace, spherical} from \\\"./cartesian\\\";\\nimport constant from \\\"./constant\\\";\\nimport {acos, cos, degrees, epsilon, radians, sin, tau} from \\\"./math\\\";\\nimport {rotateRadians} from \\\"./rotation\\\";\\n\\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\\nexport function circleStream(stream, radius, delta, direction, t0, t1) {\\n  if (!delta) return;\\n  var cosRadius = cos(radius),\\n      sinRadius = sin(radius),\\n      step = direction * delta;\\n  if (t0 == null) {\\n    t0 = radius + direction * tau;\\n    t1 = radius - step / 2;\\n  } else {\\n    t0 = circleRadius(cosRadius, t0);\\n    t1 = circleRadius(cosRadius, t1);\\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau;\\n  }\\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\\n    point = spherical([cosRadius, -sinRadius * cos(t), -sinRadius * sin(t)]);\\n    stream.point(point[0], point[1]);\\n  }\\n}\\n\\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\\nfunction circleRadius(cosRadius, point) {\\n  point = cartesian(point), point[0] -= cosRadius;\\n  cartesianNormalizeInPlace(point);\\n  var radius = acos(-point[1]);\\n  return ((-point[2] < 0 ? -radius : radius) + tau - epsilon) % tau;\\n}\\n\\nexport default function() {\\n  var center = constant([0, 0]),\\n      radius = constant(90),\\n      precision = constant(6),\\n      ring,\\n      rotate,\\n      stream = {point: point};\\n\\n  function point(x, y) {\\n    ring.push(x = rotate(x, y));\\n    x[0] *= degrees, x[1] *= degrees;\\n  }\\n\\n  function circle() {\\n    var c = center.apply(this, arguments),\\n        r = radius.apply(this, arguments) * radians,\\n        p = precision.apply(this, arguments) * radians;\\n    ring = [];\\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\\n    circleStream(stream, r, p, 1);\\n    c = {type: \\\"Polygon\\\", coordinates: [ring]};\\n    ring = rotate = null;\\n    return c;\\n  }\\n\\n  circle.center = function(_) {\\n    return arguments.length ? (center = typeof _ === \\\"function\\\" ? _ : constant([+_[0], +_[1]]), circle) : center;\\n  };\\n\\n  circle.radius = function(_) {\\n    return arguments.length ? (radius = typeof _ === \\\"function\\\" ? _ : constant(+_), circle) : radius;\\n  };\\n\\n  circle.precision = function(_) {\\n    return arguments.length ? (precision = typeof _ === \\\"function\\\" ? _ : constant(+_), circle) : precision;\\n  };\\n\\n  return circle;\\n}\\n\",\"import noop from \\\"../noop\\\";\\n\\nexport default function() {\\n  var lines = [],\\n      line;\\n  return {\\n    point: function(x, y) {\\n      line.push([x, y]);\\n    },\\n    lineStart: function() {\\n      lines.push(line = []);\\n    },\\n    lineEnd: noop,\\n    rejoin: function() {\\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\\n    },\\n    result: function() {\\n      var result = lines;\\n      lines = [];\\n      line = null;\\n      return result;\\n    }\\n  };\\n}\\n\",\"import {abs, epsilon} from \\\"./math\\\";\\n\\nexport default function(a, b) {\\n  return abs(a[0] - b[0]) < epsilon && abs(a[1] - b[1]) < epsilon;\\n}\\n\",\"import pointEqual from \\\"../pointEqual\\\";\\n\\nfunction Intersection(point, points, other, entry) {\\n  this.x = point;\\n  this.z = points;\\n  this.o = other; // another intersection\\n  this.e = entry; // is an entry?\\n  this.v = false; // visited\\n  this.n = this.p = null; // next & previous\\n}\\n\\n// A generalized polygon clipping algorithm: given a polygon that has been cut\\n// into its visible line segments, and rejoins the segments by interpolating\\n// along the clip edge.\\nexport default function(segments, compareIntersection, startInside, interpolate, stream) {\\n  var subject = [],\\n      clip = [],\\n      i,\\n      n;\\n\\n  segments.forEach(function(segment) {\\n    if ((n = segment.length - 1) <= 0) return;\\n    var n, p0 = segment[0], p1 = segment[n], x;\\n\\n    // If the first and last points of a segment are coincident, then treat as a\\n    // closed ring. TODO if all rings are closed, then the winding order of the\\n    // exterior ring should be checked.\\n    if (pointEqual(p0, p1)) {\\n      stream.lineStart();\\n      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\\n      stream.lineEnd();\\n      return;\\n    }\\n\\n    subject.push(x = new Intersection(p0, segment, null, true));\\n    clip.push(x.o = new Intersection(p0, null, x, false));\\n    subject.push(x = new Intersection(p1, segment, null, false));\\n    clip.push(x.o = new Intersection(p1, null, x, true));\\n  });\\n\\n  if (!subject.length) return;\\n\\n  clip.sort(compareIntersection);\\n  link(subject);\\n  link(clip);\\n\\n  for (i = 0, n = clip.length; i < n; ++i) {\\n    clip[i].e = startInside = !startInside;\\n  }\\n\\n  var start = subject[0],\\n      points,\\n      point;\\n\\n  while (1) {\\n    // Find first unvisited intersection.\\n    var current = start,\\n        isSubject = true;\\n    while (current.v) if ((current = current.n) === start) return;\\n    points = current.z;\\n    stream.lineStart();\\n    do {\\n      current.v = current.o.v = true;\\n      if (current.e) {\\n        if (isSubject) {\\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\\n        } else {\\n          interpolate(current.x, current.n.x, 1, stream);\\n        }\\n        current = current.n;\\n      } else {\\n        if (isSubject) {\\n          points = current.p.z;\\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\\n        } else {\\n          interpolate(current.x, current.p.x, -1, stream);\\n        }\\n        current = current.p;\\n      }\\n      current = current.o;\\n      points = current.z;\\n      isSubject = !isSubject;\\n    } while (!current.v);\\n    stream.lineEnd();\\n  }\\n}\\n\\nfunction link(array) {\\n  if (!(n = array.length)) return;\\n  var n,\\n      i = 0,\\n      a = array[0],\\n      b;\\n  while (++i < n) {\\n    a.n = b = array[i];\\n    b.p = a;\\n    a = b;\\n  }\\n  a.n = b = array[0];\\n  b.p = a;\\n}\\n\",\"import adder from \\\"./adder\\\";\\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace} from \\\"./cartesian\\\";\\nimport {asin, atan2, cos, epsilon, halfPi, pi, quarterPi, sin, tau} from \\\"./math\\\";\\n\\nvar sum = adder();\\n\\nexport default function(polygon, point) {\\n  var lambda = point[0],\\n      phi = point[1],\\n      sinPhi = sin(phi),\\n      normal = [sin(lambda), -cos(lambda), 0],\\n      angle = 0,\\n      winding = 0;\\n\\n  sum.reset();\\n\\n  if (sinPhi === 1) phi = halfPi + epsilon;\\n  else if (sinPhi === -1) phi = -halfPi - epsilon;\\n\\n  for (var i = 0, n = polygon.length; i < n; ++i) {\\n    if (!(m = (ring = polygon[i]).length)) continue;\\n    var ring,\\n        m,\\n        point0 = ring[m - 1],\\n        lambda0 = point0[0],\\n        phi0 = point0[1] / 2 + quarterPi,\\n        sinPhi0 = sin(phi0),\\n        cosPhi0 = cos(phi0);\\n\\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\\n      var point1 = ring[j],\\n          lambda1 = point1[0],\\n          phi1 = point1[1] / 2 + quarterPi,\\n          sinPhi1 = sin(phi1),\\n          cosPhi1 = cos(phi1),\\n          delta = lambda1 - lambda0,\\n          sign = delta >= 0 ? 1 : -1,\\n          absDelta = sign * delta,\\n          antimeridian = absDelta > pi,\\n          k = sinPhi0 * sinPhi1;\\n\\n      sum.add(atan2(k * sign * sin(absDelta), cosPhi0 * cosPhi1 + k * cos(absDelta)));\\n      angle += antimeridian ? delta + sign * tau : delta;\\n\\n      // Are the longitudes either side of the point’s meridian (lambda),\\n      // and are the latitudes smaller than the parallel (phi)?\\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\\n        cartesianNormalizeInPlace(arc);\\n        var intersection = cartesianCross(normal, arc);\\n        cartesianNormalizeInPlace(intersection);\\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\\n        }\\n      }\\n    }\\n  }\\n\\n  // First, determine whether the South pole is inside or outside:\\n  //\\n  // It is inside if:\\n  // * the polygon winds around it in a clockwise direction.\\n  // * the polygon does not (cumulatively) wind around it, but has a negative\\n  //   (counter-clockwise) area.\\n  //\\n  // Second, count the (signed) number of times a segment crosses a lambda\\n  // from the point to the South pole.  If it is zero, then the point is the\\n  // same side as the South pole.\\n\\n  return (angle < -epsilon || angle < epsilon && sum < -epsilon) ^ (winding & 1);\\n}\\n\",\"import clipBuffer from \\\"./buffer\\\";\\nimport clipRejoin from \\\"./rejoin\\\";\\nimport {epsilon, halfPi} from \\\"../math\\\";\\nimport polygonContains from \\\"../polygonContains\\\";\\nimport {merge} from \\\"d3-array\\\";\\n\\nexport default function(pointVisible, clipLine, interpolate, start) {\\n  return function(sink) {\\n    var line = clipLine(sink),\\n        ringBuffer = clipBuffer(),\\n        ringSink = clipLine(ringBuffer),\\n        polygonStarted = false,\\n        polygon,\\n        segments,\\n        ring;\\n\\n    var clip = {\\n      point: point,\\n      lineStart: lineStart,\\n      lineEnd: lineEnd,\\n      polygonStart: function() {\\n        clip.point = pointRing;\\n        clip.lineStart = ringStart;\\n        clip.lineEnd = ringEnd;\\n        segments = [];\\n        polygon = [];\\n      },\\n      polygonEnd: function() {\\n        clip.point = point;\\n        clip.lineStart = lineStart;\\n        clip.lineEnd = lineEnd;\\n        segments = merge(segments);\\n        var startInside = polygonContains(polygon, start);\\n        if (segments.length) {\\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\\n          clipRejoin(segments, compareIntersection, startInside, interpolate, sink);\\n        } else if (startInside) {\\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\\n          sink.lineStart();\\n          interpolate(null, null, 1, sink);\\n          sink.lineEnd();\\n        }\\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\\n        segments = polygon = null;\\n      },\\n      sphere: function() {\\n        sink.polygonStart();\\n        sink.lineStart();\\n        interpolate(null, null, 1, sink);\\n        sink.lineEnd();\\n        sink.polygonEnd();\\n      }\\n    };\\n\\n    function point(lambda, phi) {\\n      if (pointVisible(lambda, phi)) sink.point(lambda, phi);\\n    }\\n\\n    function pointLine(lambda, phi) {\\n      line.point(lambda, phi);\\n    }\\n\\n    function lineStart() {\\n      clip.point = pointLine;\\n      line.lineStart();\\n    }\\n\\n    function lineEnd() {\\n      clip.point = point;\\n      line.lineEnd();\\n    }\\n\\n    function pointRing(lambda, phi) {\\n      ring.push([lambda, phi]);\\n      ringSink.point(lambda, phi);\\n    }\\n\\n    function ringStart() {\\n      ringSink.lineStart();\\n      ring = [];\\n    }\\n\\n    function ringEnd() {\\n      pointRing(ring[0][0], ring[0][1]);\\n      ringSink.lineEnd();\\n\\n      var clean = ringSink.clean(),\\n          ringSegments = ringBuffer.result(),\\n          i, n = ringSegments.length, m,\\n          segment,\\n          point;\\n\\n      ring.pop();\\n      polygon.push(ring);\\n      ring = null;\\n\\n      if (!n) return;\\n\\n      // No intersections.\\n      if (clean & 1) {\\n        segment = ringSegments[0];\\n        if ((m = segment.length - 1) > 0) {\\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\\n          sink.lineStart();\\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\\n          sink.lineEnd();\\n        }\\n        return;\\n      }\\n\\n      // Rejoin connected segments.\\n      // TODO reuse ringBuffer.rejoin()?\\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\\n\\n      segments.push(ringSegments.filter(validSegment));\\n    }\\n\\n    return clip;\\n  };\\n}\\n\\nfunction validSegment(segment) {\\n  return segment.length > 1;\\n}\\n\\n// Intersections are sorted along the clip edge. For both antimeridian cutting\\n// and circle clipping, the same comparison is used.\\nfunction compareIntersection(a, b) {\\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi - epsilon : halfPi - a[1])\\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi - epsilon : halfPi - b[1]);\\n}\\n\",\"import clip from \\\"./index\\\";\\nimport {abs, atan, cos, epsilon, halfPi, pi, sin} from \\\"../math\\\";\\n\\nexport default clip(\\n  function() { return true; },\\n  clipAntimeridianLine,\\n  clipAntimeridianInterpolate,\\n  [-pi, -halfPi]\\n);\\n\\n// Takes a line and cuts into visible segments. Return values: 0 - there were\\n// intersections or the line was empty; 1 - no intersections; 2 - there were\\n// intersections, and the first and last segments should be rejoined.\\nfunction clipAntimeridianLine(stream) {\\n  var lambda0 = NaN,\\n      phi0 = NaN,\\n      sign0 = NaN,\\n      clean; // no intersections\\n\\n  return {\\n    lineStart: function() {\\n      stream.lineStart();\\n      clean = 1;\\n    },\\n    point: function(lambda1, phi1) {\\n      var sign1 = lambda1 > 0 ? pi : -pi,\\n          delta = abs(lambda1 - lambda0);\\n      if (abs(delta - pi) < epsilon) { // line crosses a pole\\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi : -halfPi);\\n        stream.point(sign0, phi0);\\n        stream.lineEnd();\\n        stream.lineStart();\\n        stream.point(sign1, phi0);\\n        stream.point(lambda1, phi0);\\n        clean = 0;\\n      } else if (sign0 !== sign1 && delta >= pi) { // line crosses antimeridian\\n        if (abs(lambda0 - sign0) < epsilon) lambda0 -= sign0 * epsilon; // handle degeneracies\\n        if (abs(lambda1 - sign1) < epsilon) lambda1 -= sign1 * epsilon;\\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\\n        stream.point(sign0, phi0);\\n        stream.lineEnd();\\n        stream.lineStart();\\n        stream.point(sign1, phi0);\\n        clean = 0;\\n      }\\n      stream.point(lambda0 = lambda1, phi0 = phi1);\\n      sign0 = sign1;\\n    },\\n    lineEnd: function() {\\n      stream.lineEnd();\\n      lambda0 = phi0 = NaN;\\n    },\\n    clean: function() {\\n      return 2 - clean; // if intersections, rejoin first and last segments\\n    }\\n  };\\n}\\n\\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\\n  var cosPhi0,\\n      cosPhi1,\\n      sinLambda0Lambda1 = sin(lambda0 - lambda1);\\n  return abs(sinLambda0Lambda1) > epsilon\\n      ? atan((sin(phi0) * (cosPhi1 = cos(phi1)) * sin(lambda1)\\n          - sin(phi1) * (cosPhi0 = cos(phi0)) * sin(lambda0))\\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\\n      : (phi0 + phi1) / 2;\\n}\\n\\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\\n  var phi;\\n  if (from == null) {\\n    phi = direction * halfPi;\\n    stream.point(-pi, phi);\\n    stream.point(0, phi);\\n    stream.point(pi, phi);\\n    stream.point(pi, 0);\\n    stream.point(pi, -phi);\\n    stream.point(0, -phi);\\n    stream.point(-pi, -phi);\\n    stream.point(-pi, 0);\\n    stream.point(-pi, phi);\\n  } else if (abs(from[0] - to[0]) > epsilon) {\\n    var lambda = from[0] < to[0] ? pi : -pi;\\n    phi = direction * lambda / 2;\\n    stream.point(-lambda, phi);\\n    stream.point(0, phi);\\n    stream.point(lambda, phi);\\n  } else {\\n    stream.point(to[0], to[1]);\\n  }\\n}\\n\",\"import {cartesian, cartesianAddInPlace, cartesianCross, cartesianDot, cartesianScale, spherical} from \\\"../cartesian\\\";\\nimport {circleStream} from \\\"../circle\\\";\\nimport {abs, cos, epsilon, pi, radians, sqrt} from \\\"../math\\\";\\nimport pointEqual from \\\"../pointEqual\\\";\\nimport clip from \\\"./index\\\";\\n\\nexport default function(radius) {\\n  var cr = cos(radius),\\n      delta = 6 * radians,\\n      smallRadius = cr > 0,\\n      notHemisphere = abs(cr) > epsilon; // TODO optimise for this common case\\n\\n  function interpolate(from, to, direction, stream) {\\n    circleStream(stream, radius, delta, direction, from, to);\\n  }\\n\\n  function visible(lambda, phi) {\\n    return cos(lambda) * cos(phi) > cr;\\n  }\\n\\n  // Takes a line and cuts into visible segments. Return values used for polygon\\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\\n  // intersections 2 - there were intersections, and the first and last segments\\n  // should be rejoined.\\n  function clipLine(stream) {\\n    var point0, // previous point\\n        c0, // code for previous point\\n        v0, // visibility of previous point\\n        v00, // visibility of first point\\n        clean; // no intersections\\n    return {\\n      lineStart: function() {\\n        v00 = v0 = false;\\n        clean = 1;\\n      },\\n      point: function(lambda, phi) {\\n        var point1 = [lambda, phi],\\n            point2,\\n            v = visible(lambda, phi),\\n            c = smallRadius\\n              ? v ? 0 : code(lambda, phi)\\n              : v ? code(lambda + (lambda < 0 ? pi : -pi), phi) : 0;\\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\\n        // Handle degeneracies.\\n        // TODO ignore if not clipping polygons.\\n        if (v !== v0) {\\n          point2 = intersect(point0, point1);\\n          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2)) {\\n            point1[0] += epsilon;\\n            point1[1] += epsilon;\\n            v = visible(point1[0], point1[1]);\\n          }\\n        }\\n        if (v !== v0) {\\n          clean = 0;\\n          if (v) {\\n            // outside going in\\n            stream.lineStart();\\n            point2 = intersect(point1, point0);\\n            stream.point(point2[0], point2[1]);\\n          } else {\\n            // inside going out\\n            point2 = intersect(point0, point1);\\n            stream.point(point2[0], point2[1]);\\n            stream.lineEnd();\\n          }\\n          point0 = point2;\\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\\n          var t;\\n          // If the codes for two points are different, or are both zero,\\n          // and there this segment intersects with the small circle.\\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\\n            clean = 0;\\n            if (smallRadius) {\\n              stream.lineStart();\\n              stream.point(t[0][0], t[0][1]);\\n              stream.point(t[1][0], t[1][1]);\\n              stream.lineEnd();\\n            } else {\\n              stream.point(t[1][0], t[1][1]);\\n              stream.lineEnd();\\n              stream.lineStart();\\n              stream.point(t[0][0], t[0][1]);\\n            }\\n          }\\n        }\\n        if (v && (!point0 || !pointEqual(point0, point1))) {\\n          stream.point(point1[0], point1[1]);\\n        }\\n        point0 = point1, v0 = v, c0 = c;\\n      },\\n      lineEnd: function() {\\n        if (v0) stream.lineEnd();\\n        point0 = null;\\n      },\\n      // Rejoin first and last segments if there were intersections and the first\\n      // and last points were visible.\\n      clean: function() {\\n        return clean | ((v00 && v0) << 1);\\n      }\\n    };\\n  }\\n\\n  // Intersects the great circle between a and b with the clip circle.\\n  function intersect(a, b, two) {\\n    var pa = cartesian(a),\\n        pb = cartesian(b);\\n\\n    // We have two planes, n1.p = d1 and n2.p = d2.\\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\\n    var n1 = [1, 0, 0], // normal\\n        n2 = cartesianCross(pa, pb),\\n        n2n2 = cartesianDot(n2, n2),\\n        n1n2 = n2[0], // cartesianDot(n1, n2),\\n        determinant = n2n2 - n1n2 * n1n2;\\n\\n    // Two polar points.\\n    if (!determinant) return !two && a;\\n\\n    var c1 =  cr * n2n2 / determinant,\\n        c2 = -cr * n1n2 / determinant,\\n        n1xn2 = cartesianCross(n1, n2),\\n        A = cartesianScale(n1, c1),\\n        B = cartesianScale(n2, c2);\\n    cartesianAddInPlace(A, B);\\n\\n    // Solve |p(t)|^2 = 1.\\n    var u = n1xn2,\\n        w = cartesianDot(A, u),\\n        uu = cartesianDot(u, u),\\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\\n\\n    if (t2 < 0) return;\\n\\n    var t = sqrt(t2),\\n        q = cartesianScale(u, (-w - t) / uu);\\n    cartesianAddInPlace(q, A);\\n    q = spherical(q);\\n\\n    if (!two) return q;\\n\\n    // Two intersection points.\\n    var lambda0 = a[0],\\n        lambda1 = b[0],\\n        phi0 = a[1],\\n        phi1 = b[1],\\n        z;\\n\\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\\n\\n    var delta = lambda1 - lambda0,\\n        polar = abs(delta - pi) < epsilon,\\n        meridian = polar || delta < epsilon;\\n\\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\\n\\n    // Check that the first point is between a and b.\\n    if (meridian\\n        ? polar\\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon ? phi0 : phi1)\\n          : phi0 <= q[1] && q[1] <= phi1\\n        : delta > pi ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\\n      var q1 = cartesianScale(u, (-w + t) / uu);\\n      cartesianAddInPlace(q1, A);\\n      return [q, spherical(q1)];\\n    }\\n  }\\n\\n  // Generates a 4-bit vector representing the location of a point relative to\\n  // the small circle's bounding box.\\n  function code(lambda, phi) {\\n    var r = smallRadius ? radius : pi - radius,\\n        code = 0;\\n    if (lambda < -r) code |= 1; // left\\n    else if (lambda > r) code |= 2; // right\\n    if (phi < -r) code |= 4; // below\\n    else if (phi > r) code |= 8; // above\\n    return code;\\n  }\\n\\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi, radius - pi]);\\n}\\n\",\"export default function(a, b, x0, y0, x1, y1) {\\n  var ax = a[0],\\n      ay = a[1],\\n      bx = b[0],\\n      by = b[1],\\n      t0 = 0,\\n      t1 = 1,\\n      dx = bx - ax,\\n      dy = by - ay,\\n      r;\\n\\n  r = x0 - ax;\\n  if (!dx && r > 0) return;\\n  r /= dx;\\n  if (dx < 0) {\\n    if (r < t0) return;\\n    if (r < t1) t1 = r;\\n  } else if (dx > 0) {\\n    if (r > t1) return;\\n    if (r > t0) t0 = r;\\n  }\\n\\n  r = x1 - ax;\\n  if (!dx && r < 0) return;\\n  r /= dx;\\n  if (dx < 0) {\\n    if (r > t1) return;\\n    if (r > t0) t0 = r;\\n  } else if (dx > 0) {\\n    if (r < t0) return;\\n    if (r < t1) t1 = r;\\n  }\\n\\n  r = y0 - ay;\\n  if (!dy && r > 0) return;\\n  r /= dy;\\n  if (dy < 0) {\\n    if (r < t0) return;\\n    if (r < t1) t1 = r;\\n  } else if (dy > 0) {\\n    if (r > t1) return;\\n    if (r > t0) t0 = r;\\n  }\\n\\n  r = y1 - ay;\\n  if (!dy && r < 0) return;\\n  r /= dy;\\n  if (dy < 0) {\\n    if (r > t1) return;\\n    if (r > t0) t0 = r;\\n  } else if (dy > 0) {\\n    if (r < t0) return;\\n    if (r < t1) t1 = r;\\n  }\\n\\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\\n  return true;\\n}\\n\",\"import {abs, epsilon} from \\\"../math\\\";\\nimport clipBuffer from \\\"./buffer\\\";\\nimport clipLine from \\\"./line\\\";\\nimport clipRejoin from \\\"./rejoin\\\";\\nimport {merge} from \\\"d3-array\\\";\\n\\nvar clipMax = 1e9, clipMin = -clipMax;\\n\\n// TODO Use d3-polygon’s polygonContains here for the ring check?\\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\\n\\nexport default function clipRectangle(x0, y0, x1, y1) {\\n\\n  function visible(x, y) {\\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\\n  }\\n\\n  function interpolate(from, to, direction, stream) {\\n    var a = 0, a1 = 0;\\n    if (from == null\\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\\n        || comparePoint(from, to) < 0 ^ direction > 0) {\\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\\n      while ((a = (a + direction + 4) % 4) !== a1);\\n    } else {\\n      stream.point(to[0], to[1]);\\n    }\\n  }\\n\\n  function corner(p, direction) {\\n    return abs(p[0] - x0) < epsilon ? direction > 0 ? 0 : 3\\n        : abs(p[0] - x1) < epsilon ? direction > 0 ? 2 : 1\\n        : abs(p[1] - y0) < epsilon ? direction > 0 ? 1 : 0\\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\\n  }\\n\\n  function compareIntersection(a, b) {\\n    return comparePoint(a.x, b.x);\\n  }\\n\\n  function comparePoint(a, b) {\\n    var ca = corner(a, 1),\\n        cb = corner(b, 1);\\n    return ca !== cb ? ca - cb\\n        : ca === 0 ? b[1] - a[1]\\n        : ca === 1 ? a[0] - b[0]\\n        : ca === 2 ? a[1] - b[1]\\n        : b[0] - a[0];\\n  }\\n\\n  return function(stream) {\\n    var activeStream = stream,\\n        bufferStream = clipBuffer(),\\n        segments,\\n        polygon,\\n        ring,\\n        x__, y__, v__, // first point\\n        x_, y_, v_, // previous point\\n        first,\\n        clean;\\n\\n    var clipStream = {\\n      point: point,\\n      lineStart: lineStart,\\n      lineEnd: lineEnd,\\n      polygonStart: polygonStart,\\n      polygonEnd: polygonEnd\\n    };\\n\\n    function point(x, y) {\\n      if (visible(x, y)) activeStream.point(x, y);\\n    }\\n\\n    function polygonInside() {\\n      var winding = 0;\\n\\n      for (var i = 0, n = polygon.length; i < n; ++i) {\\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\\n        }\\n      }\\n\\n      return winding;\\n    }\\n\\n    // Buffer geometry within a polygon and then clip it en masse.\\n    function polygonStart() {\\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\\n    }\\n\\n    function polygonEnd() {\\n      var startInside = polygonInside(),\\n          cleanInside = clean && startInside,\\n          visible = (segments = merge(segments)).length;\\n      if (cleanInside || visible) {\\n        stream.polygonStart();\\n        if (cleanInside) {\\n          stream.lineStart();\\n          interpolate(null, null, 1, stream);\\n          stream.lineEnd();\\n        }\\n        if (visible) {\\n          clipRejoin(segments, compareIntersection, startInside, interpolate, stream);\\n        }\\n        stream.polygonEnd();\\n      }\\n      activeStream = stream, segments = polygon = ring = null;\\n    }\\n\\n    function lineStart() {\\n      clipStream.point = linePoint;\\n      if (polygon) polygon.push(ring = []);\\n      first = true;\\n      v_ = false;\\n      x_ = y_ = NaN;\\n    }\\n\\n    // TODO rather than special-case polygons, simply handle them separately.\\n    // Ideally, coincident intersection points should be jittered to avoid\\n    // clipping issues.\\n    function lineEnd() {\\n      if (segments) {\\n        linePoint(x__, y__);\\n        if (v__ && v_) bufferStream.rejoin();\\n        segments.push(bufferStream.result());\\n      }\\n      clipStream.point = point;\\n      if (v_) activeStream.lineEnd();\\n    }\\n\\n    function linePoint(x, y) {\\n      var v = visible(x, y);\\n      if (polygon) ring.push([x, y]);\\n      if (first) {\\n        x__ = x, y__ = y, v__ = v;\\n        first = false;\\n        if (v) {\\n          activeStream.lineStart();\\n          activeStream.point(x, y);\\n        }\\n      } else {\\n        if (v && v_) activeStream.point(x, y);\\n        else {\\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\\n          if (clipLine(a, b, x0, y0, x1, y1)) {\\n            if (!v_) {\\n              activeStream.lineStart();\\n              activeStream.point(a[0], a[1]);\\n            }\\n            activeStream.point(b[0], b[1]);\\n            if (!v) activeStream.lineEnd();\\n            clean = false;\\n          } else if (v) {\\n            activeStream.lineStart();\\n            activeStream.point(x, y);\\n            clean = false;\\n          }\\n        }\\n      }\\n      x_ = x, y_ = y, v_ = v;\\n    }\\n\\n    return clipStream;\\n  };\\n}\\n\",\"import clipRectangle from \\\"./rectangle\\\";\\n\\nexport default function() {\\n  var x0 = 0,\\n      y0 = 0,\\n      x1 = 960,\\n      y1 = 500,\\n      cache,\\n      cacheStream,\\n      clip;\\n\\n  return clip = {\\n    stream: function(stream) {\\n      return cache && cacheStream === stream ? cache : cache = clipRectangle(x0, y0, x1, y1)(cacheStream = stream);\\n    },\\n    extent: function(_) {\\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\\n    }\\n  };\\n}\\n\",\"import adder from \\\"./adder\\\";\\nimport {abs, atan2, cos, radians, sin, sqrt} from \\\"./math\\\";\\nimport noop from \\\"./noop\\\";\\nimport stream from \\\"./stream\\\";\\n\\nvar lengthSum = adder(),\\n    lambda0,\\n    sinPhi0,\\n    cosPhi0;\\n\\nvar lengthStream = {\\n  sphere: noop,\\n  point: noop,\\n  lineStart: lengthLineStart,\\n  lineEnd: noop,\\n  polygonStart: noop,\\n  polygonEnd: noop\\n};\\n\\nfunction lengthLineStart() {\\n  lengthStream.point = lengthPointFirst;\\n  lengthStream.lineEnd = lengthLineEnd;\\n}\\n\\nfunction lengthLineEnd() {\\n  lengthStream.point = lengthStream.lineEnd = noop;\\n}\\n\\nfunction lengthPointFirst(lambda, phi) {\\n  lambda *= radians, phi *= radians;\\n  lambda0 = lambda, sinPhi0 = sin(phi), cosPhi0 = cos(phi);\\n  lengthStream.point = lengthPoint;\\n}\\n\\nfunction lengthPoint(lambda, phi) {\\n  lambda *= radians, phi *= radians;\\n  var sinPhi = sin(phi),\\n      cosPhi = cos(phi),\\n      delta = abs(lambda - lambda0),\\n      cosDelta = cos(delta),\\n      sinDelta = sin(delta),\\n      x = cosPhi * sinDelta,\\n      y = cosPhi0 * sinPhi - sinPhi0 * cosPhi * cosDelta,\\n      z = sinPhi0 * sinPhi + cosPhi0 * cosPhi * cosDelta;\\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\\n  lambda0 = lambda, sinPhi0 = sinPhi, cosPhi0 = cosPhi;\\n}\\n\\nexport default function(object) {\\n  lengthSum.reset();\\n  stream(object, lengthStream);\\n  return +lengthSum;\\n}\\n\",\"import length from \\\"./length\\\";\\n\\nvar coordinates = [null, null],\\n    object = {type: \\\"LineString\\\", coordinates: coordinates};\\n\\nexport default function(a, b) {\\n  coordinates[0] = a;\\n  coordinates[1] = b;\\n  return length(object);\\n}\\n\",\"import {default as polygonContains} from \\\"./polygonContains\\\";\\nimport {default as distance} from \\\"./distance\\\";\\nimport {epsilon, radians} from \\\"./math\\\";\\n\\nvar containsObjectType = {\\n  Feature: function(object, point) {\\n    return containsGeometry(object.geometry, point);\\n  },\\n  FeatureCollection: function(object, point) {\\n    var features = object.features, i = -1, n = features.length;\\n    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;\\n    return false;\\n  }\\n};\\n\\nvar containsGeometryType = {\\n  Sphere: function() {\\n    return true;\\n  },\\n  Point: function(object, point) {\\n    return containsPoint(object.coordinates, point);\\n  },\\n  MultiPoint: function(object, point) {\\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\\n    while (++i < n) if (containsPoint(coordinates[i], point)) return true;\\n    return false;\\n  },\\n  LineString: function(object, point) {\\n    return containsLine(object.coordinates, point);\\n  },\\n  MultiLineString: function(object, point) {\\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\\n    while (++i < n) if (containsLine(coordinates[i], point)) return true;\\n    return false;\\n  },\\n  Polygon: function(object, point) {\\n    return containsPolygon(object.coordinates, point);\\n  },\\n  MultiPolygon: function(object, point) {\\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\\n    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;\\n    return false;\\n  },\\n  GeometryCollection: function(object, point) {\\n    var geometries = object.geometries, i = -1, n = geometries.length;\\n    while (++i < n) if (containsGeometry(geometries[i], point)) return true;\\n    return false;\\n  }\\n};\\n\\nfunction containsGeometry(geometry, point) {\\n  return geometry && containsGeometryType.hasOwnProperty(geometry.type)\\n      ? containsGeometryType[geometry.type](geometry, point)\\n      : false;\\n}\\n\\nfunction containsPoint(coordinates, point) {\\n  return distance(coordinates, point) === 0;\\n}\\n\\nfunction containsLine(coordinates, point) {\\n  var ab = distance(coordinates[0], coordinates[1]),\\n      ao = distance(coordinates[0], point),\\n      ob = distance(point, coordinates[1]);\\n  return ao + ob <= ab + epsilon;\\n}\\n\\nfunction containsPolygon(coordinates, point) {\\n  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\\n}\\n\\nfunction ringRadians(ring) {\\n  return ring = ring.map(pointRadians), ring.pop(), ring;\\n}\\n\\nfunction pointRadians(point) {\\n  return [point[0] * radians, point[1] * radians];\\n}\\n\\nexport default function(object, point) {\\n  return (object && containsObjectType.hasOwnProperty(object.type)\\n      ? containsObjectType[object.type]\\n      : containsGeometry)(object, point);\\n}\\n\",\"import {range} from \\\"d3-array\\\";\\nimport {abs, ceil, epsilon} from \\\"./math\\\";\\n\\nfunction graticuleX(y0, y1, dy) {\\n  var y = range(y0, y1 - epsilon, dy).concat(y1);\\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\\n}\\n\\nfunction graticuleY(x0, x1, dx) {\\n  var x = range(x0, x1 - epsilon, dx).concat(x1);\\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\\n}\\n\\nexport default function graticule() {\\n  var x1, x0, X1, X0,\\n      y1, y0, Y1, Y0,\\n      dx = 10, dy = dx, DX = 90, DY = 360,\\n      x, y, X, Y,\\n      precision = 2.5;\\n\\n  function graticule() {\\n    return {type: \\\"MultiLineString\\\", coordinates: lines()};\\n  }\\n\\n  function lines() {\\n    return range(ceil(X0 / DX) * DX, X1, DX).map(X)\\n        .concat(range(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\\n        .concat(range(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon; }).map(x))\\n        .concat(range(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon; }).map(y));\\n  }\\n\\n  graticule.lines = function() {\\n    return lines().map(function(coordinates) { return {type: \\\"LineString\\\", coordinates: coordinates}; });\\n  };\\n\\n  graticule.outline = function() {\\n    return {\\n      type: \\\"Polygon\\\",\\n      coordinates: [\\n        X(X0).concat(\\n        Y(Y1).slice(1),\\n        X(X1).reverse().slice(1),\\n        Y(Y0).reverse().slice(1))\\n      ]\\n    };\\n  };\\n\\n  graticule.extent = function(_) {\\n    if (!arguments.length) return graticule.extentMinor();\\n    return graticule.extentMajor(_).extentMinor(_);\\n  };\\n\\n  graticule.extentMajor = function(_) {\\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\\n    X0 = +_[0][0], X1 = +_[1][0];\\n    Y0 = +_[0][1], Y1 = +_[1][1];\\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\\n    return graticule.precision(precision);\\n  };\\n\\n  graticule.extentMinor = function(_) {\\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\\n    x0 = +_[0][0], x1 = +_[1][0];\\n    y0 = +_[0][1], y1 = +_[1][1];\\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\\n    return graticule.precision(precision);\\n  };\\n\\n  graticule.step = function(_) {\\n    if (!arguments.length) return graticule.stepMinor();\\n    return graticule.stepMajor(_).stepMinor(_);\\n  };\\n\\n  graticule.stepMajor = function(_) {\\n    if (!arguments.length) return [DX, DY];\\n    DX = +_[0], DY = +_[1];\\n    return graticule;\\n  };\\n\\n  graticule.stepMinor = function(_) {\\n    if (!arguments.length) return [dx, dy];\\n    dx = +_[0], dy = +_[1];\\n    return graticule;\\n  };\\n\\n  graticule.precision = function(_) {\\n    if (!arguments.length) return precision;\\n    precision = +_;\\n    x = graticuleX(y0, y1, 90);\\n    y = graticuleY(x0, x1, precision);\\n    X = graticuleX(Y0, Y1, 90);\\n    Y = graticuleY(X0, X1, precision);\\n    return graticule;\\n  };\\n\\n  return graticule\\n      .extentMajor([[-180, -90 + epsilon], [180, 90 - epsilon]])\\n      .extentMinor([[-180, -80 - epsilon], [180, 80 + epsilon]]);\\n}\\n\\nexport function graticule10() {\\n  return graticule()();\\n}\\n\",\"import {asin, atan2, cos, degrees, haversin, radians, sin, sqrt} from \\\"./math\\\";\\n\\nexport default function(a, b) {\\n  var x0 = a[0] * radians,\\n      y0 = a[1] * radians,\\n      x1 = b[0] * radians,\\n      y1 = b[1] * radians,\\n      cy0 = cos(y0),\\n      sy0 = sin(y0),\\n      cy1 = cos(y1),\\n      sy1 = sin(y1),\\n      kx0 = cy0 * cos(x0),\\n      ky0 = cy0 * sin(x0),\\n      kx1 = cy1 * cos(x1),\\n      ky1 = cy1 * sin(x1),\\n      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\\n      k = sin(d);\\n\\n  var interpolate = d ? function(t) {\\n    var B = sin(t *= d) / k,\\n        A = sin(d - t) / k,\\n        x = A * kx0 + B * kx1,\\n        y = A * ky0 + B * ky1,\\n        z = A * sy0 + B * sy1;\\n    return [\\n      atan2(y, x) * degrees,\\n      atan2(z, sqrt(x * x + y * y)) * degrees\\n    ];\\n  } : function() {\\n    return [x0 * degrees, y0 * degrees];\\n  };\\n\\n  interpolate.distance = d;\\n\\n  return interpolate;\\n}\\n\",\"import adder from \\\"../adder\\\";\\nimport {abs} from \\\"../math\\\";\\nimport noop from \\\"../noop\\\";\\n\\nvar areaSum = adder(),\\n    areaRingSum = adder(),\\n    x00,\\n    y00,\\n    x0,\\n    y0;\\n\\nvar areaStream = {\\n  point: noop,\\n  lineStart: noop,\\n  lineEnd: noop,\\n  polygonStart: function() {\\n    areaStream.lineStart = areaRingStart;\\n    areaStream.lineEnd = areaRingEnd;\\n  },\\n  polygonEnd: function() {\\n    areaStream.lineStart = areaStream.lineEnd = areaStream.point = noop;\\n    areaSum.add(abs(areaRingSum));\\n    areaRingSum.reset();\\n  },\\n  result: function() {\\n    var area = areaSum / 2;\\n    areaSum.reset();\\n    return area;\\n  }\\n};\\n\\nfunction areaRingStart() {\\n  areaStream.point = areaPointFirst;\\n}\\n\\nfunction areaPointFirst(x, y) {\\n  areaStream.point = areaPoint;\\n  x00 = x0 = x, y00 = y0 = y;\\n}\\n\\nfunction areaPoint(x, y) {\\n  areaRingSum.add(y0 * x - x0 * y);\\n  x0 = x, y0 = y;\\n}\\n\\nfunction areaRingEnd() {\\n  areaPoint(x00, y00);\\n}\\n\\nexport default areaStream;\\n\",\"export default function(x) {\\n  return x;\\n}\\n\",\"import noop from \\\"../noop\\\";\\n\\nvar x0 = Infinity,\\n    y0 = x0,\\n    x1 = -x0,\\n    y1 = x1;\\n\\nvar boundsStream = {\\n  point: boundsPoint,\\n  lineStart: noop,\\n  lineEnd: noop,\\n  polygonStart: noop,\\n  polygonEnd: noop,\\n  result: function() {\\n    var bounds = [[x0, y0], [x1, y1]];\\n    x1 = y1 = -(y0 = x0 = Infinity);\\n    return bounds;\\n  }\\n};\\n\\nfunction boundsPoint(x, y) {\\n  if (x < x0) x0 = x;\\n  if (x > x1) x1 = x;\\n  if (y < y0) y0 = y;\\n  if (y > y1) y1 = y;\\n}\\n\\nexport default boundsStream;\\n\",\"import {sqrt} from \\\"../math\\\";\\n\\n// TODO Enforce positive area for exterior, negative area for interior?\\n\\nvar X0 = 0,\\n    Y0 = 0,\\n    Z0 = 0,\\n    X1 = 0,\\n    Y1 = 0,\\n    Z1 = 0,\\n    X2 = 0,\\n    Y2 = 0,\\n    Z2 = 0,\\n    x00,\\n    y00,\\n    x0,\\n    y0;\\n\\nvar centroidStream = {\\n  point: centroidPoint,\\n  lineStart: centroidLineStart,\\n  lineEnd: centroidLineEnd,\\n  polygonStart: function() {\\n    centroidStream.lineStart = centroidRingStart;\\n    centroidStream.lineEnd = centroidRingEnd;\\n  },\\n  polygonEnd: function() {\\n    centroidStream.point = centroidPoint;\\n    centroidStream.lineStart = centroidLineStart;\\n    centroidStream.lineEnd = centroidLineEnd;\\n  },\\n  result: function() {\\n    var centroid = Z2 ? [X2 / Z2, Y2 / Z2]\\n        : Z1 ? [X1 / Z1, Y1 / Z1]\\n        : Z0 ? [X0 / Z0, Y0 / Z0]\\n        : [NaN, NaN];\\n    X0 = Y0 = Z0 =\\n    X1 = Y1 = Z1 =\\n    X2 = Y2 = Z2 = 0;\\n    return centroid;\\n  }\\n};\\n\\nfunction centroidPoint(x, y) {\\n  X0 += x;\\n  Y0 += y;\\n  ++Z0;\\n}\\n\\nfunction centroidLineStart() {\\n  centroidStream.point = centroidPointFirstLine;\\n}\\n\\nfunction centroidPointFirstLine(x, y) {\\n  centroidStream.point = centroidPointLine;\\n  centroidPoint(x0 = x, y0 = y);\\n}\\n\\nfunction centroidPointLine(x, y) {\\n  var dx = x - x0, dy = y - y0, z = sqrt(dx * dx + dy * dy);\\n  X1 += z * (x0 + x) / 2;\\n  Y1 += z * (y0 + y) / 2;\\n  Z1 += z;\\n  centroidPoint(x0 = x, y0 = y);\\n}\\n\\nfunction centroidLineEnd() {\\n  centroidStream.point = centroidPoint;\\n}\\n\\nfunction centroidRingStart() {\\n  centroidStream.point = centroidPointFirstRing;\\n}\\n\\nfunction centroidRingEnd() {\\n  centroidPointRing(x00, y00);\\n}\\n\\nfunction centroidPointFirstRing(x, y) {\\n  centroidStream.point = centroidPointRing;\\n  centroidPoint(x00 = x0 = x, y00 = y0 = y);\\n}\\n\\nfunction centroidPointRing(x, y) {\\n  var dx = x - x0,\\n      dy = y - y0,\\n      z = sqrt(dx * dx + dy * dy);\\n\\n  X1 += z * (x0 + x) / 2;\\n  Y1 += z * (y0 + y) / 2;\\n  Z1 += z;\\n\\n  z = y0 * x - x0 * y;\\n  X2 += z * (x0 + x);\\n  Y2 += z * (y0 + y);\\n  Z2 += z * 3;\\n  centroidPoint(x0 = x, y0 = y);\\n}\\n\\nexport default centroidStream;\\n\",\"import {tau} from \\\"../math\\\";\\nimport noop from \\\"../noop\\\";\\n\\nexport default function PathContext(context) {\\n  this._context = context;\\n}\\n\\nPathContext.prototype = {\\n  _radius: 4.5,\\n  pointRadius: function(_) {\\n    return this._radius = _, this;\\n  },\\n  polygonStart: function() {\\n    this._line = 0;\\n  },\\n  polygonEnd: function() {\\n    this._line = NaN;\\n  },\\n  lineStart: function() {\\n    this._point = 0;\\n  },\\n  lineEnd: function() {\\n    if (this._line === 0) this._context.closePath();\\n    this._point = NaN;\\n  },\\n  point: function(x, y) {\\n    switch (this._point) {\\n      case 0: {\\n        this._context.moveTo(x, y);\\n        this._point = 1;\\n        break;\\n      }\\n      case 1: {\\n        this._context.lineTo(x, y);\\n        break;\\n      }\\n      default: {\\n        this._context.moveTo(x + this._radius, y);\\n        this._context.arc(x, y, this._radius, 0, tau);\\n        break;\\n      }\\n    }\\n  },\\n  result: noop\\n};\\n\",\"import adder from \\\"../adder\\\";\\nimport {sqrt} from \\\"../math\\\";\\nimport noop from \\\"../noop\\\";\\n\\nvar lengthSum = adder(),\\n    lengthRing,\\n    x00,\\n    y00,\\n    x0,\\n    y0;\\n\\nvar lengthStream = {\\n  point: noop,\\n  lineStart: function() {\\n    lengthStream.point = lengthPointFirst;\\n  },\\n  lineEnd: function() {\\n    if (lengthRing) lengthPoint(x00, y00);\\n    lengthStream.point = noop;\\n  },\\n  polygonStart: function() {\\n    lengthRing = true;\\n  },\\n  polygonEnd: function() {\\n    lengthRing = null;\\n  },\\n  result: function() {\\n    var length = +lengthSum;\\n    lengthSum.reset();\\n    return length;\\n  }\\n};\\n\\nfunction lengthPointFirst(x, y) {\\n  lengthStream.point = lengthPoint;\\n  x00 = x0 = x, y00 = y0 = y;\\n}\\n\\nfunction lengthPoint(x, y) {\\n  x0 -= x, y0 -= y;\\n  lengthSum.add(sqrt(x0 * x0 + y0 * y0));\\n  x0 = x, y0 = y;\\n}\\n\\nexport default lengthStream;\\n\",\"export default function PathString() {\\n  this._string = [];\\n}\\n\\nPathString.prototype = {\\n  _radius: 4.5,\\n  _circle: circle(4.5),\\n  pointRadius: function(_) {\\n    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;\\n    return this;\\n  },\\n  polygonStart: function() {\\n    this._line = 0;\\n  },\\n  polygonEnd: function() {\\n    this._line = NaN;\\n  },\\n  lineStart: function() {\\n    this._point = 0;\\n  },\\n  lineEnd: function() {\\n    if (this._line === 0) this._string.push(\\\"Z\\\");\\n    this._point = NaN;\\n  },\\n  point: function(x, y) {\\n    switch (this._point) {\\n      case 0: {\\n        this._string.push(\\\"M\\\", x, \\\",\\\", y);\\n        this._point = 1;\\n        break;\\n      }\\n      case 1: {\\n        this._string.push(\\\"L\\\", x, \\\",\\\", y);\\n        break;\\n      }\\n      default: {\\n        if (this._circle == null) this._circle = circle(this._radius);\\n        this._string.push(\\\"M\\\", x, \\\",\\\", y, this._circle);\\n        break;\\n      }\\n    }\\n  },\\n  result: function() {\\n    if (this._string.length) {\\n      var result = this._string.join(\\\"\\\");\\n      this._string = [];\\n      return result;\\n    } else {\\n      return null;\\n    }\\n  }\\n};\\n\\nfunction circle(radius) {\\n  return \\\"m0,\\\" + radius\\n      + \\\"a\\\" + radius + \\\",\\\" + radius + \\\" 0 1,1 0,\\\" + -2 * radius\\n      + \\\"a\\\" + radius + \\\",\\\" + radius + \\\" 0 1,1 0,\\\" + 2 * radius\\n      + \\\"z\\\";\\n}\\n\",\"import identity from \\\"../identity\\\";\\nimport stream from \\\"../stream\\\";\\nimport pathArea from \\\"./area\\\";\\nimport pathBounds from \\\"./bounds\\\";\\nimport pathCentroid from \\\"./centroid\\\";\\nimport PathContext from \\\"./context\\\";\\nimport pathMeasure from \\\"./measure\\\";\\nimport PathString from \\\"./string\\\";\\n\\nexport default function(projection, context) {\\n  var pointRadius = 4.5,\\n      projectionStream,\\n      contextStream;\\n\\n  function path(object) {\\n    if (object) {\\n      if (typeof pointRadius === \\\"function\\\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\\n      stream(object, projectionStream(contextStream));\\n    }\\n    return contextStream.result();\\n  }\\n\\n  path.area = function(object) {\\n    stream(object, projectionStream(pathArea));\\n    return pathArea.result();\\n  };\\n\\n  path.measure = function(object) {\\n    stream(object, projectionStream(pathMeasure));\\n    return pathMeasure.result();\\n  };\\n\\n  path.bounds = function(object) {\\n    stream(object, projectionStream(pathBounds));\\n    return pathBounds.result();\\n  };\\n\\n  path.centroid = function(object) {\\n    stream(object, projectionStream(pathCentroid));\\n    return pathCentroid.result();\\n  };\\n\\n  path.projection = function(_) {\\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity) : (projection = _).stream, path) : projection;\\n  };\\n\\n  path.context = function(_) {\\n    if (!arguments.length) return context;\\n    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\\n    if (typeof pointRadius !== \\\"function\\\") contextStream.pointRadius(pointRadius);\\n    return path;\\n  };\\n\\n  path.pointRadius = function(_) {\\n    if (!arguments.length) return pointRadius;\\n    pointRadius = typeof _ === \\\"function\\\" ? _ : (contextStream.pointRadius(+_), +_);\\n    return path;\\n  };\\n\\n  return path.projection(projection).context(context);\\n}\\n\",\"export default function(methods) {\\n  return {\\n    stream: transformer(methods)\\n  };\\n}\\n\\nexport function transformer(methods) {\\n  return function(stream) {\\n    var s = new TransformStream;\\n    for (var key in methods) s[key] = methods[key];\\n    s.stream = stream;\\n    return s;\\n  };\\n}\\n\\nfunction TransformStream() {}\\n\\nTransformStream.prototype = {\\n  constructor: TransformStream,\\n  point: function(x, y) { this.stream.point(x, y); },\\n  sphere: function() { this.stream.sphere(); },\\n  lineStart: function() { this.stream.lineStart(); },\\n  lineEnd: function() { this.stream.lineEnd(); },\\n  polygonStart: function() { this.stream.polygonStart(); },\\n  polygonEnd: function() { this.stream.polygonEnd(); }\\n};\\n\",\"import {default as geoStream} from \\\"../stream\\\";\\nimport boundsStream from \\\"../path/bounds\\\";\\n\\nfunction fit(projection, fitBounds, object) {\\n  var clip = projection.clipExtent && projection.clipExtent();\\n  projection.scale(150).translate([0, 0]);\\n  if (clip != null) projection.clipExtent(null);\\n  geoStream(object, projection.stream(boundsStream));\\n  fitBounds(boundsStream.result());\\n  if (clip != null) projection.clipExtent(clip);\\n  return projection;\\n}\\n\\nexport function fitExtent(projection, extent, object) {\\n  return fit(projection, function(b) {\\n    var w = extent[1][0] - extent[0][0],\\n        h = extent[1][1] - extent[0][1],\\n        k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\\n        x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\\n        y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\\n    projection.scale(150 * k).translate([x, y]);\\n  }, object);\\n}\\n\\nexport function fitSize(projection, size, object) {\\n  return fitExtent(projection, [[0, 0], size], object);\\n}\\n\\nexport function fitWidth(projection, width, object) {\\n  return fit(projection, function(b) {\\n    var w = +width,\\n        k = w / (b[1][0] - b[0][0]),\\n        x = (w - k * (b[1][0] + b[0][0])) / 2,\\n        y = -k * b[0][1];\\n    projection.scale(150 * k).translate([x, y]);\\n  }, object);\\n}\\n\\nexport function fitHeight(projection, height, object) {\\n  return fit(projection, function(b) {\\n    var h = +height,\\n        k = h / (b[1][1] - b[0][1]),\\n        x = -k * b[0][0],\\n        y = (h - k * (b[1][1] + b[0][1])) / 2;\\n    projection.scale(150 * k).translate([x, y]);\\n  }, object);\\n}\\n\",\"import {cartesian} from \\\"../cartesian\\\";\\nimport {abs, asin, atan2, cos, epsilon, radians, sqrt} from \\\"../math\\\";\\nimport {transformer} from \\\"../transform\\\";\\n\\nvar maxDepth = 16, // maximum depth of subdivision\\n    cosMinDistance = cos(30 * radians); // cos(minimum angular distance)\\n\\nexport default function(project, delta2) {\\n  return +delta2 ? resample(project, delta2) : resampleNone(project);\\n}\\n\\nfunction resampleNone(project) {\\n  return transformer({\\n    point: function(x, y) {\\n      x = project(x, y);\\n      this.stream.point(x[0], x[1]);\\n    }\\n  });\\n}\\n\\nfunction resample(project, delta2) {\\n\\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\\n    var dx = x1 - x0,\\n        dy = y1 - y0,\\n        d2 = dx * dx + dy * dy;\\n    if (d2 > 4 * delta2 && depth--) {\\n      var a = a0 + a1,\\n          b = b0 + b1,\\n          c = c0 + c1,\\n          m = sqrt(a * a + b * b + c * c),\\n          phi2 = asin(c /= m),\\n          lambda2 = abs(abs(c) - 1) < epsilon || abs(lambda0 - lambda1) < epsilon ? (lambda0 + lambda1) / 2 : atan2(b, a),\\n          p = project(lambda2, phi2),\\n          x2 = p[0],\\n          y2 = p[1],\\n          dx2 = x2 - x0,\\n          dy2 = y2 - y0,\\n          dz = dy * dx2 - dx * dy2;\\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\\n        stream.point(x2, y2);\\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\\n      }\\n    }\\n  }\\n  return function(stream) {\\n    var lambda00, x00, y00, a00, b00, c00, // first point\\n        lambda0, x0, y0, a0, b0, c0; // previous point\\n\\n    var resampleStream = {\\n      point: point,\\n      lineStart: lineStart,\\n      lineEnd: lineEnd,\\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\\n    };\\n\\n    function point(x, y) {\\n      x = project(x, y);\\n      stream.point(x[0], x[1]);\\n    }\\n\\n    function lineStart() {\\n      x0 = NaN;\\n      resampleStream.point = linePoint;\\n      stream.lineStart();\\n    }\\n\\n    function linePoint(lambda, phi) {\\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\\n      stream.point(x0, y0);\\n    }\\n\\n    function lineEnd() {\\n      resampleStream.point = point;\\n      stream.lineEnd();\\n    }\\n\\n    function ringStart() {\\n      lineStart();\\n      resampleStream.point = ringPoint;\\n      resampleStream.lineEnd = ringEnd;\\n    }\\n\\n    function ringPoint(lambda, phi) {\\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\\n      resampleStream.point = linePoint;\\n    }\\n\\n    function ringEnd() {\\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\\n      resampleStream.lineEnd = lineEnd;\\n      lineEnd();\\n    }\\n\\n    return resampleStream;\\n  };\\n}\\n\",\"import clipAntimeridian from \\\"../clip/antimeridian\\\";\\nimport clipCircle from \\\"../clip/circle\\\";\\nimport clipRectangle from \\\"../clip/rectangle\\\";\\nimport compose from \\\"../compose\\\";\\nimport identity from \\\"../identity\\\";\\nimport {cos, degrees, radians, sin, sqrt} from \\\"../math\\\";\\nimport {rotateRadians} from \\\"../rotation\\\";\\nimport {transformer} from \\\"../transform\\\";\\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \\\"./fit\\\";\\nimport resample from \\\"./resample\\\";\\n\\nvar transformRadians = transformer({\\n  point: function(x, y) {\\n    this.stream.point(x * radians, y * radians);\\n  }\\n});\\n\\nfunction transformRotate(rotate) {\\n  return transformer({\\n    point: function(x, y) {\\n      var r = rotate(x, y);\\n      return this.stream.point(r[0], r[1]);\\n    }\\n  });\\n}\\n\\nfunction scaleTranslate(k, dx, dy) {\\n  function transform(x, y) {\\n    return [dx + k * x, dy - k * y];\\n  }\\n  transform.invert = function(x, y) {\\n    return [(x - dx) / k, (dy - y) / k];\\n  };\\n  return transform;\\n}\\n\\nfunction scaleTranslateRotate(k, dx, dy, alpha) {\\n  var cosAlpha = cos(alpha),\\n      sinAlpha = sin(alpha),\\n      a = cosAlpha * k,\\n      b = sinAlpha * k,\\n      ai = cosAlpha / k,\\n      bi = sinAlpha / k,\\n      ci = (sinAlpha * dy - cosAlpha * dx) / k,\\n      fi = (sinAlpha * dx + cosAlpha * dy) / k;\\n  function transform(x, y) {\\n    return [a * x - b * y + dx, dy - b * x - a * y];\\n  }\\n  transform.invert = function(x, y) {\\n    return [ai * x - bi * y + ci, fi - bi * x - ai * y];\\n  };\\n  return transform;\\n}\\n\\nexport default function projection(project) {\\n  return projectionMutator(function() { return project; })();\\n}\\n\\nexport function projectionMutator(projectAt) {\\n  var project,\\n      k = 150, // scale\\n      x = 480, y = 250, // translate\\n      lambda = 0, phi = 0, // center\\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, // pre-rotate\\n      alpha = 0, // post-rotate\\n      theta = null, preclip = clipAntimeridian, // pre-clip angle\\n      x0 = null, y0, x1, y1, postclip = identity, // post-clip extent\\n      delta2 = 0.5, // precision\\n      projectResample,\\n      projectTransform,\\n      projectRotateTransform,\\n      cache,\\n      cacheStream;\\n\\n  function projection(point) {\\n    return projectRotateTransform(point[0] * radians, point[1] * radians);\\n  }\\n\\n  function invert(point) {\\n    point = projectRotateTransform.invert(point[0], point[1]);\\n    return point && [point[0] * degrees, point[1] * degrees];\\n  }\\n\\n  projection.stream = function(stream) {\\n    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));\\n  };\\n\\n  projection.preclip = function(_) {\\n    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;\\n  };\\n\\n  projection.postclip = function(_) {\\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\\n  };\\n\\n  projection.clipAngle = function(_) {\\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees;\\n  };\\n\\n  projection.clipExtent = function(_) {\\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\\n  };\\n\\n  projection.scale = function(_) {\\n    return arguments.length ? (k = +_, recenter()) : k;\\n  };\\n\\n  projection.translate = function(_) {\\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\\n  };\\n\\n  projection.center = function(_) {\\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees, phi * degrees];\\n  };\\n\\n  projection.rotate = function(_) {\\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees, deltaPhi * degrees, deltaGamma * degrees];\\n  };\\n\\n  projection.angle = function(_) {\\n    return arguments.length ? (alpha = _ % 360 * radians, recenter()) : alpha * degrees;\\n  };\\n\\n  projection.precision = function(_) {\\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\\n  };\\n\\n  projection.fitExtent = function(extent, object) {\\n    return fitExtent(projection, extent, object);\\n  };\\n\\n  projection.fitSize = function(size, object) {\\n    return fitSize(projection, size, object);\\n  };\\n\\n  projection.fitWidth = function(width, object) {\\n    return fitWidth(projection, width, object);\\n  };\\n\\n  projection.fitHeight = function(height, object) {\\n    return fitHeight(projection, height, object);\\n  };\\n\\n  function recenter() {\\n    var center = scaleTranslateRotate(k, 0, 0, alpha).apply(null, project(lambda, phi)),\\n        transform = (alpha ? scaleTranslateRotate : scaleTranslate)(k, x - center[0], y - center[1], alpha);\\n    rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma);\\n    projectTransform = compose(project, transform);\\n    projectRotateTransform = compose(rotate, projectTransform);\\n    projectResample = resample(projectTransform, delta2);\\n    return reset();\\n  }\\n\\n  function reset() {\\n    cache = cacheStream = null;\\n    return projection;\\n  }\\n\\n  return function() {\\n    project = projectAt.apply(this, arguments);\\n    projection.invert = project.invert && invert;\\n    return recenter();\\n  };\\n}\\n\",\"import {degrees, pi, radians} from \\\"../math\\\";\\nimport {projectionMutator} from \\\"./index\\\";\\n\\nexport function conicProjection(projectAt) {\\n  var phi0 = 0,\\n      phi1 = pi / 3,\\n      m = projectionMutator(projectAt),\\n      p = m(phi0, phi1);\\n\\n  p.parallels = function(_) {\\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees, phi1 * degrees];\\n  };\\n\\n  return p;\\n}\\n\",\"import {abs, asin, atan2, cos, epsilon, sign, sin, sqrt} from \\\"../math\\\";\\nimport {conicProjection} from \\\"./conic\\\";\\nimport {cylindricalEqualAreaRaw} from \\\"./cylindricalEqualArea\\\";\\n\\nexport function conicEqualAreaRaw(y0, y1) {\\n  var sy0 = sin(y0), n = (sy0 + sin(y1)) / 2;\\n\\n  // Are the parallels symmetrical around the Equator?\\n  if (abs(n) < epsilon) return cylindricalEqualAreaRaw(y0);\\n\\n  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;\\n\\n  function project(x, y) {\\n    var r = sqrt(c - 2 * n * sin(y)) / n;\\n    return [r * sin(x *= n), r0 - r * cos(x)];\\n  }\\n\\n  project.invert = function(x, y) {\\n    var r0y = r0 - y;\\n    return [atan2(x, abs(r0y)) / n * sign(r0y), asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\\n  };\\n\\n  return project;\\n}\\n\\nexport default function() {\\n  return conicProjection(conicEqualAreaRaw)\\n      .scale(155.424)\\n      .center([0, 33.6442]);\\n}\\n\",\"import {asin, cos, sin} from \\\"../math\\\";\\n\\nexport function cylindricalEqualAreaRaw(phi0) {\\n  var cosPhi0 = cos(phi0);\\n\\n  function forward(lambda, phi) {\\n    return [lambda * cosPhi0, sin(phi) / cosPhi0];\\n  }\\n\\n  forward.invert = function(x, y) {\\n    return [x / cosPhi0, asin(y * cosPhi0)];\\n  };\\n\\n  return forward;\\n}\\n\",\"import conicEqualArea from \\\"./conicEqualArea\\\";\\n\\nexport default function() {\\n  return conicEqualArea()\\n      .parallels([29.5, 45.5])\\n      .scale(1070)\\n      .translate([480, 250])\\n      .rotate([96, 0])\\n      .center([-0.6, 38.7]);\\n}\\n\",\"import {epsilon} from \\\"../math\\\";\\nimport albers from \\\"./albers\\\";\\nimport conicEqualArea from \\\"./conicEqualArea\\\";\\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \\\"./fit\\\";\\n\\n// The projections must have mutually exclusive clip regions on the sphere,\\n// as this will avoid emitting interleaving lines and polygons.\\nfunction multiplex(streams) {\\n  var n = streams.length;\\n  return {\\n    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\\n    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\\n    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\\n    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\\n    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\\n    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\\n  };\\n}\\n\\n// A composite projection for the United States, configured by default for\\n// 960×500. The projection also works quite well at 960×600 if you change the\\n// scale to 1285 and adjust the translate accordingly. The set of standard\\n// parallels for each region comes from USGS, which is published here:\\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\\nexport default function() {\\n  var cache,\\n      cacheStream,\\n      lower48 = albers(), lower48Point,\\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\\n      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\\n\\n  function albersUsa(coordinates) {\\n    var x = coordinates[0], y = coordinates[1];\\n    return point = null,\\n        (lower48Point.point(x, y), point)\\n        || (alaskaPoint.point(x, y), point)\\n        || (hawaiiPoint.point(x, y), point);\\n  }\\n\\n  albersUsa.invert = function(coordinates) {\\n    var k = lower48.scale(),\\n        t = lower48.translate(),\\n        x = (coordinates[0] - t[0]) / k,\\n        y = (coordinates[1] - t[1]) / k;\\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\\n        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\\n        : lower48).invert(coordinates);\\n  };\\n\\n  albersUsa.stream = function(stream) {\\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\\n  };\\n\\n  albersUsa.precision = function(_) {\\n    if (!arguments.length) return lower48.precision();\\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\\n    return reset();\\n  };\\n\\n  albersUsa.scale = function(_) {\\n    if (!arguments.length) return lower48.scale();\\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\\n    return albersUsa.translate(lower48.translate());\\n  };\\n\\n  albersUsa.translate = function(_) {\\n    if (!arguments.length) return lower48.translate();\\n    var k = lower48.scale(), x = +_[0], y = +_[1];\\n\\n    lower48Point = lower48\\n        .translate(_)\\n        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\\n        .stream(pointStream);\\n\\n    alaskaPoint = alaska\\n        .translate([x - 0.307 * k, y + 0.201 * k])\\n        .clipExtent([[x - 0.425 * k + epsilon, y + 0.120 * k + epsilon], [x - 0.214 * k - epsilon, y + 0.234 * k - epsilon]])\\n        .stream(pointStream);\\n\\n    hawaiiPoint = hawaii\\n        .translate([x - 0.205 * k, y + 0.212 * k])\\n        .clipExtent([[x - 0.214 * k + epsilon, y + 0.166 * k + epsilon], [x - 0.115 * k - epsilon, y + 0.234 * k - epsilon]])\\n        .stream(pointStream);\\n\\n    return reset();\\n  };\\n\\n  albersUsa.fitExtent = function(extent, object) {\\n    return fitExtent(albersUsa, extent, object);\\n  };\\n\\n  albersUsa.fitSize = function(size, object) {\\n    return fitSize(albersUsa, size, object);\\n  };\\n\\n  albersUsa.fitWidth = function(width, object) {\\n    return fitWidth(albersUsa, width, object);\\n  };\\n\\n  albersUsa.fitHeight = function(height, object) {\\n    return fitHeight(albersUsa, height, object);\\n  };\\n\\n  function reset() {\\n    cache = cacheStream = null;\\n    return albersUsa;\\n  }\\n\\n  return albersUsa.scale(1070);\\n}\\n\",\"import {asin, atan2, cos, sin, sqrt} from \\\"../math\\\";\\n\\nexport function azimuthalRaw(scale) {\\n  return function(x, y) {\\n    var cx = cos(x),\\n        cy = cos(y),\\n        k = scale(cx * cy);\\n    return [\\n      k * cy * sin(x),\\n      k * sin(y)\\n    ];\\n  }\\n}\\n\\nexport function azimuthalInvert(angle) {\\n  return function(x, y) {\\n    var z = sqrt(x * x + y * y),\\n        c = angle(z),\\n        sc = sin(c),\\n        cc = cos(c);\\n    return [\\n      atan2(x * sc, z * cc),\\n      asin(z && y * sc / z)\\n    ];\\n  }\\n}\\n\",\"import {asin, sqrt} from \\\"../math\\\";\\nimport {azimuthalRaw, azimuthalInvert} from \\\"./azimuthal\\\";\\nimport projection from \\\"./index\\\";\\n\\nexport var azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\\n  return sqrt(2 / (1 + cxcy));\\n});\\n\\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\\n  return 2 * asin(z / 2);\\n});\\n\\nexport default function() {\\n  return projection(azimuthalEqualAreaRaw)\\n      .scale(124.75)\\n      .clipAngle(180 - 1e-3);\\n}\\n\",\"import {acos, sin} from \\\"../math\\\";\\nimport {azimuthalRaw, azimuthalInvert} from \\\"./azimuthal\\\";\\nimport projection from \\\"./index\\\";\\n\\nexport var azimuthalEquidistantRaw = azimuthalRaw(function(c) {\\n  return (c = acos(c)) && c / sin(c);\\n});\\n\\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\\n  return z;\\n});\\n\\nexport default function() {\\n  return projection(azimuthalEquidistantRaw)\\n      .scale(79.4188)\\n      .clipAngle(180 - 1e-3);\\n}\\n\",\"import {atan, exp, halfPi, log, pi, tan, tau} from \\\"../math\\\";\\nimport rotation from \\\"../rotation\\\";\\nimport projection from \\\"./index\\\";\\n\\nexport function mercatorRaw(lambda, phi) {\\n  return [lambda, log(tan((halfPi + phi) / 2))];\\n}\\n\\nmercatorRaw.invert = function(x, y) {\\n  return [x, 2 * atan(exp(y)) - halfPi];\\n};\\n\\nexport default function() {\\n  return mercatorProjection(mercatorRaw)\\n      .scale(961 / tau);\\n}\\n\\nexport function mercatorProjection(project) {\\n  var m = projection(project),\\n      center = m.center,\\n      scale = m.scale,\\n      translate = m.translate,\\n      clipExtent = m.clipExtent,\\n      x0 = null, y0, x1, y1; // clip extent\\n\\n  m.scale = function(_) {\\n    return arguments.length ? (scale(_), reclip()) : scale();\\n  };\\n\\n  m.translate = function(_) {\\n    return arguments.length ? (translate(_), reclip()) : translate();\\n  };\\n\\n  m.center = function(_) {\\n    return arguments.length ? (center(_), reclip()) : center();\\n  };\\n\\n  m.clipExtent = function(_) {\\n    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\\n  };\\n\\n  function reclip() {\\n    var k = pi * scale(),\\n        t = m(rotation(m.rotate()).invert([0, 0]));\\n    return clipExtent(x0 == null\\n        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\\n        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\\n        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\\n  }\\n\\n  return reclip();\\n}\\n\",\"import {abs, atan, atan2, cos, epsilon, halfPi, log, pow, sign, sin, sqrt, tan} from \\\"../math\\\";\\nimport {conicProjection} from \\\"./conic\\\";\\nimport {mercatorRaw} from \\\"./mercator\\\";\\n\\nfunction tany(y) {\\n  return tan((halfPi + y) / 2);\\n}\\n\\nexport function conicConformalRaw(y0, y1) {\\n  var cy0 = cos(y0),\\n      n = y0 === y1 ? sin(y0) : log(cy0 / cos(y1)) / log(tany(y1) / tany(y0)),\\n      f = cy0 * pow(tany(y0), n) / n;\\n\\n  if (!n) return mercatorRaw;\\n\\n  function project(x, y) {\\n    if (f > 0) { if (y < -halfPi + epsilon) y = -halfPi + epsilon; }\\n    else { if (y > halfPi - epsilon) y = halfPi - epsilon; }\\n    var r = f / pow(tany(y), n);\\n    return [r * sin(n * x), f - r * cos(n * x)];\\n  }\\n\\n  project.invert = function(x, y) {\\n    var fy = f - y, r = sign(n) * sqrt(x * x + fy * fy);\\n    return [atan2(x, abs(fy)) / n * sign(fy), 2 * atan(pow(f / r, 1 / n)) - halfPi];\\n  };\\n\\n  return project;\\n}\\n\\nexport default function() {\\n  return conicProjection(conicConformalRaw)\\n      .scale(109.5)\\n      .parallels([30, 30]);\\n}\\n\",\"import projection from \\\"./index\\\";\\n\\nexport function equirectangularRaw(lambda, phi) {\\n  return [lambda, phi];\\n}\\n\\nequirectangularRaw.invert = equirectangularRaw;\\n\\nexport default function() {\\n  return projection(equirectangularRaw)\\n      .scale(152.63);\\n}\\n\",\"import {abs, atan2, cos, epsilon, sign, sin, sqrt} from \\\"../math\\\";\\nimport {conicProjection} from \\\"./conic\\\";\\nimport {equirectangularRaw} from \\\"./equirectangular\\\";\\n\\nexport function conicEquidistantRaw(y0, y1) {\\n  var cy0 = cos(y0),\\n      n = y0 === y1 ? sin(y0) : (cy0 - cos(y1)) / (y1 - y0),\\n      g = cy0 / n + y0;\\n\\n  if (abs(n) < epsilon) return equirectangularRaw;\\n\\n  function project(x, y) {\\n    var gy = g - y, nx = n * x;\\n    return [gy * sin(nx), g - gy * cos(nx)];\\n  }\\n\\n  project.invert = function(x, y) {\\n    var gy = g - y;\\n    return [atan2(x, abs(gy)) / n * sign(gy), g - sign(n) * sqrt(x * x + gy * gy)];\\n  };\\n\\n  return project;\\n}\\n\\nexport default function() {\\n  return conicProjection(conicEquidistantRaw)\\n      .scale(131.154)\\n      .center([0, 13.9389]);\\n}\\n\",\"import projection from \\\"./index.js\\\";\\nimport {abs, asin, cos, epsilon2, sin, sqrt} from \\\"../math.js\\\";\\n\\nvar A1 = 1.340264,\\n    A2 = -0.081106,\\n    A3 = 0.000893,\\n    A4 = 0.003796,\\n    M = sqrt(3) / 2,\\n    iterations = 12;\\n\\nexport function equalEarthRaw(lambda, phi) {\\n  var l = asin(M * sin(phi)), l2 = l * l, l6 = l2 * l2 * l2;\\n  return [\\n    lambda * cos(l) / (M * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2))),\\n    l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2))\\n  ];\\n}\\n\\nequalEarthRaw.invert = function(x, y) {\\n  var l = y, l2 = l * l, l6 = l2 * l2 * l2;\\n  for (var i = 0, delta, fy, fpy; i < iterations; ++i) {\\n    fy = l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2)) - y;\\n    fpy = A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2);\\n    l -= delta = fy / fpy, l2 = l * l, l6 = l2 * l2 * l2;\\n    if (abs(delta) < epsilon2) break;\\n  }\\n  return [\\n    M * x * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2)) / cos(l),\\n    asin(sin(l) / M)\\n  ];\\n};\\n\\nexport default function() {\\n  return projection(equalEarthRaw)\\n      .scale(177.158);\\n}\\n\",\"import {atan, cos, sin} from \\\"../math\\\";\\nimport {azimuthalInvert} from \\\"./azimuthal\\\";\\nimport projection from \\\"./index\\\";\\n\\nexport function gnomonicRaw(x, y) {\\n  var cy = cos(y), k = cos(x) * cy;\\n  return [cy * sin(x) / k, sin(y) / k];\\n}\\n\\ngnomonicRaw.invert = azimuthalInvert(atan);\\n\\nexport default function() {\\n  return projection(gnomonicRaw)\\n      .scale(144.049)\\n      .clipAngle(60);\\n}\\n\",\"import clipRectangle from \\\"../clip/rectangle\\\";\\nimport identity from \\\"../identity\\\";\\nimport {transformer} from \\\"../transform\\\";\\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \\\"./fit\\\";\\n\\nfunction scaleTranslate(kx, ky, tx, ty) {\\n  return kx === 1 && ky === 1 && tx === 0 && ty === 0 ? identity : transformer({\\n    point: function(x, y) {\\n      this.stream.point(x * kx + tx, y * ky + ty);\\n    }\\n  });\\n}\\n\\nexport default function() {\\n  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, transform = identity, // scale, translate and reflect\\n      x0 = null, y0, x1, y1, // clip extent\\n      postclip = identity,\\n      cache,\\n      cacheStream,\\n      projection;\\n\\n  function reset() {\\n    cache = cacheStream = null;\\n    return projection;\\n  }\\n\\n  return projection = {\\n    stream: function(stream) {\\n      return cache && cacheStream === stream ? cache : cache = transform(postclip(cacheStream = stream));\\n    },\\n    postclip: function(_) {\\n      return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\\n    },\\n    clipExtent: function(_) {\\n      return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\\n    },\\n    scale: function(_) {\\n      return arguments.length ? (transform = scaleTranslate((k = +_) * sx, k * sy, tx, ty), reset()) : k;\\n    },\\n    translate: function(_) {\\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * sy, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];\\n    },\\n    reflectX: function(_) {\\n      return arguments.length ? (transform = scaleTranslate(k * (sx = _ ? -1 : 1), k * sy, tx, ty), reset()) : sx < 0;\\n    },\\n    reflectY: function(_) {\\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * (sy = _ ? -1 : 1), tx, ty), reset()) : sy < 0;\\n    },\\n    fitExtent: function(extent, object) {\\n      return fitExtent(projection, extent, object);\\n    },\\n    fitSize: function(size, object) {\\n      return fitSize(projection, size, object);\\n    },\\n    fitWidth: function(width, object) {\\n      return fitWidth(projection, width, object);\\n    },\\n    fitHeight: function(height, object) {\\n      return fitHeight(projection, height, object);\\n    }\\n  };\\n}\\n\",\"import projection from \\\"./index\\\";\\nimport {abs, epsilon} from \\\"../math\\\";\\n\\nexport function naturalEarth1Raw(lambda, phi) {\\n  var phi2 = phi * phi, phi4 = phi2 * phi2;\\n  return [\\n    lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))),\\n    phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))\\n  ];\\n}\\n\\nnaturalEarth1Raw.invert = function(x, y) {\\n  var phi = y, i = 25, delta;\\n  do {\\n    var phi2 = phi * phi, phi4 = phi2 * phi2;\\n    phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) /\\n        (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));\\n  } while (abs(delta) > epsilon && --i > 0);\\n  return [\\n    x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))),\\n    phi\\n  ];\\n};\\n\\nexport default function() {\\n  return projection(naturalEarth1Raw)\\n      .scale(175.295);\\n}\\n\",\"import {asin, cos, epsilon, sin} from \\\"../math\\\";\\nimport {azimuthalInvert} from \\\"./azimuthal\\\";\\nimport projection from \\\"./index\\\";\\n\\nexport function orthographicRaw(x, y) {\\n  return [cos(y) * sin(x), sin(y)];\\n}\\n\\northographicRaw.invert = azimuthalInvert(asin);\\n\\nexport default function() {\\n  return projection(orthographicRaw)\\n      .scale(249.5)\\n      .clipAngle(90 + epsilon);\\n}\\n\",\"import {atan, cos, sin} from \\\"../math\\\";\\nimport {azimuthalInvert} from \\\"./azimuthal\\\";\\nimport projection from \\\"./index\\\";\\n\\nexport function stereographicRaw(x, y) {\\n  var cy = cos(y), k = 1 + cos(x) * cy;\\n  return [cy * sin(x) / k, sin(y) / k];\\n}\\n\\nstereographicRaw.invert = azimuthalInvert(function(z) {\\n  return 2 * atan(z);\\n});\\n\\nexport default function() {\\n  return projection(stereographicRaw)\\n      .scale(250)\\n      .clipAngle(142);\\n}\\n\",\"import {atan, exp, halfPi, log, tan} from \\\"../math\\\";\\nimport {mercatorProjection} from \\\"./mercator\\\";\\n\\nexport function transverseMercatorRaw(lambda, phi) {\\n  return [log(tan((halfPi + phi) / 2)), -lambda];\\n}\\n\\ntransverseMercatorRaw.invert = function(x, y) {\\n  return [-y, 2 * atan(exp(x)) - halfPi];\\n};\\n\\nexport default function() {\\n  var m = mercatorProjection(transverseMercatorRaw),\\n      center = m.center,\\n      rotate = m.rotate;\\n\\n  m.center = function(_) {\\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\\n  };\\n\\n  m.rotate = function(_) {\\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\\n  };\\n\\n  return rotate([0, 0, 90])\\n      .scale(159.155);\\n}\\n\",\"function defaultSeparation(a, b) {\\n  return a.parent === b.parent ? 1 : 2;\\n}\\n\\nfunction meanX(children) {\\n  return children.reduce(meanXReduce, 0) / children.length;\\n}\\n\\nfunction meanXReduce(x, c) {\\n  return x + c.x;\\n}\\n\\nfunction maxY(children) {\\n  return 1 + children.reduce(maxYReduce, 0);\\n}\\n\\nfunction maxYReduce(y, c) {\\n  return Math.max(y, c.y);\\n}\\n\\nfunction leafLeft(node) {\\n  var children;\\n  while (children = node.children) node = children[0];\\n  return node;\\n}\\n\\nfunction leafRight(node) {\\n  var children;\\n  while (children = node.children) node = children[children.length - 1];\\n  return node;\\n}\\n\\nexport default function() {\\n  var separation = defaultSeparation,\\n      dx = 1,\\n      dy = 1,\\n      nodeSize = false;\\n\\n  function cluster(root) {\\n    var previousNode,\\n        x = 0;\\n\\n    // First walk, computing the initial x & y values.\\n    root.eachAfter(function(node) {\\n      var children = node.children;\\n      if (children) {\\n        node.x = meanX(children);\\n        node.y = maxY(children);\\n      } else {\\n        node.x = previousNode ? x += separation(node, previousNode) : 0;\\n        node.y = 0;\\n        previousNode = node;\\n      }\\n    });\\n\\n    var left = leafLeft(root),\\n        right = leafRight(root),\\n        x0 = left.x - separation(left, right) / 2,\\n        x1 = right.x + separation(right, left) / 2;\\n\\n    // Second walk, normalizing x & y to the desired size.\\n    return root.eachAfter(nodeSize ? function(node) {\\n      node.x = (node.x - root.x) * dx;\\n      node.y = (root.y - node.y) * dy;\\n    } : function(node) {\\n      node.x = (node.x - x0) / (x1 - x0) * dx;\\n      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\\n    });\\n  }\\n\\n  cluster.separation = function(x) {\\n    return arguments.length ? (separation = x, cluster) : separation;\\n  };\\n\\n  cluster.size = function(x) {\\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\\n  };\\n\\n  cluster.nodeSize = function(x) {\\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\\n  };\\n\\n  return cluster;\\n}\\n\",\"function count(node) {\\n  var sum = 0,\\n      children = node.children,\\n      i = children && children.length;\\n  if (!i) sum = 1;\\n  else while (--i >= 0) sum += children[i].value;\\n  node.value = sum;\\n}\\n\\nexport default function() {\\n  return this.eachAfter(count);\\n}\\n\",\"import node_count from \\\"./count\\\";\\nimport node_each from \\\"./each\\\";\\nimport node_eachBefore from \\\"./eachBefore\\\";\\nimport node_eachAfter from \\\"./eachAfter\\\";\\nimport node_sum from \\\"./sum\\\";\\nimport node_sort from \\\"./sort\\\";\\nimport node_path from \\\"./path\\\";\\nimport node_ancestors from \\\"./ancestors\\\";\\nimport node_descendants from \\\"./descendants\\\";\\nimport node_leaves from \\\"./leaves\\\";\\nimport node_links from \\\"./links\\\";\\n\\nexport default function hierarchy(data, children) {\\n  var root = new Node(data),\\n      valued = +data.value && (root.value = data.value),\\n      node,\\n      nodes = [root],\\n      child,\\n      childs,\\n      i,\\n      n;\\n\\n  if (children == null) children = defaultChildren;\\n\\n  while (node = nodes.pop()) {\\n    if (valued) node.value = +node.data.value;\\n    if ((childs = children(node.data)) && (n = childs.length)) {\\n      node.children = new Array(n);\\n      for (i = n - 1; i >= 0; --i) {\\n        nodes.push(child = node.children[i] = new Node(childs[i]));\\n        child.parent = node;\\n        child.depth = node.depth + 1;\\n      }\\n    }\\n  }\\n\\n  return root.eachBefore(computeHeight);\\n}\\n\\nfunction node_copy() {\\n  return hierarchy(this).eachBefore(copyData);\\n}\\n\\nfunction defaultChildren(d) {\\n  return d.children;\\n}\\n\\nfunction copyData(node) {\\n  node.data = node.data.data;\\n}\\n\\nexport function computeHeight(node) {\\n  var height = 0;\\n  do node.height = height;\\n  while ((node = node.parent) && (node.height < ++height));\\n}\\n\\nexport function Node(data) {\\n  this.data = data;\\n  this.depth =\\n  this.height = 0;\\n  this.parent = null;\\n}\\n\\nNode.prototype = hierarchy.prototype = {\\n  constructor: Node,\\n  count: node_count,\\n  each: node_each,\\n  eachAfter: node_eachAfter,\\n  eachBefore: node_eachBefore,\\n  sum: node_sum,\\n  sort: node_sort,\\n  path: node_path,\\n  ancestors: node_ancestors,\\n  descendants: node_descendants,\\n  leaves: node_leaves,\\n  links: node_links,\\n  copy: node_copy\\n};\\n\",\"export default function(callback) {\\n  var node = this, current, next = [node], children, i, n;\\n  do {\\n    current = next.reverse(), next = [];\\n    while (node = current.pop()) {\\n      callback(node), children = node.children;\\n      if (children) for (i = 0, n = children.length; i < n; ++i) {\\n        next.push(children[i]);\\n      }\\n    }\\n  } while (next.length);\\n  return this;\\n}\\n\",\"export default function(callback) {\\n  var node = this, nodes = [node], next = [], children, i, n;\\n  while (node = nodes.pop()) {\\n    next.push(node), children = node.children;\\n    if (children) for (i = 0, n = children.length; i < n; ++i) {\\n      nodes.push(children[i]);\\n    }\\n  }\\n  while (node = next.pop()) {\\n    callback(node);\\n  }\\n  return this;\\n}\\n\",\"export default function(callback) {\\n  var node = this, nodes = [node], children, i;\\n  while (node = nodes.pop()) {\\n    callback(node), children = node.children;\\n    if (children) for (i = children.length - 1; i >= 0; --i) {\\n      nodes.push(children[i]);\\n    }\\n  }\\n  return this;\\n}\\n\",\"export default function(value) {\\n  return this.eachAfter(function(node) {\\n    var sum = +value(node.data) || 0,\\n        children = node.children,\\n        i = children && children.length;\\n    while (--i >= 0) sum += children[i].value;\\n    node.value = sum;\\n  });\\n}\\n\",\"export default function(compare) {\\n  return this.eachBefore(function(node) {\\n    if (node.children) {\\n      node.children.sort(compare);\\n    }\\n  });\\n}\\n\",\"export default function(end) {\\n  var start = this,\\n      ancestor = leastCommonAncestor(start, end),\\n      nodes = [start];\\n  while (start !== ancestor) {\\n    start = start.parent;\\n    nodes.push(start);\\n  }\\n  var k = nodes.length;\\n  while (end !== ancestor) {\\n    nodes.splice(k, 0, end);\\n    end = end.parent;\\n  }\\n  return nodes;\\n}\\n\\nfunction leastCommonAncestor(a, b) {\\n  if (a === b) return a;\\n  var aNodes = a.ancestors(),\\n      bNodes = b.ancestors(),\\n      c = null;\\n  a = aNodes.pop();\\n  b = bNodes.pop();\\n  while (a === b) {\\n    c = a;\\n    a = aNodes.pop();\\n    b = bNodes.pop();\\n  }\\n  return c;\\n}\\n\",\"export default function() {\\n  var node = this, nodes = [node];\\n  while (node = node.parent) {\\n    nodes.push(node);\\n  }\\n  return nodes;\\n}\\n\",\"export default function() {\\n  var nodes = [];\\n  this.each(function(node) {\\n    nodes.push(node);\\n  });\\n  return nodes;\\n}\\n\",\"export default function() {\\n  var leaves = [];\\n  this.eachBefore(function(node) {\\n    if (!node.children) {\\n      leaves.push(node);\\n    }\\n  });\\n  return leaves;\\n}\\n\",\"export default function() {\\n  var root = this, links = [];\\n  root.each(function(node) {\\n    if (node !== root) { // Don’t include the root’s parent, if any.\\n      links.push({source: node.parent, target: node});\\n    }\\n  });\\n  return links;\\n}\\n\",\"export var slice = Array.prototype.slice;\\n\\nexport function shuffle(array) {\\n  var m = array.length,\\n      t,\\n      i;\\n\\n  while (m) {\\n    i = Math.random() * m-- | 0;\\n    t = array[m];\\n    array[m] = array[i];\\n    array[i] = t;\\n  }\\n\\n  return array;\\n}\\n\",\"import {shuffle, slice} from \\\"../array\\\";\\n\\nexport default function(circles) {\\n  var i = 0, n = (circles = shuffle(slice.call(circles))).length, B = [], p, e;\\n\\n  while (i < n) {\\n    p = circles[i];\\n    if (e && enclosesWeak(e, p)) ++i;\\n    else e = encloseBasis(B = extendBasis(B, p)), i = 0;\\n  }\\n\\n  return e;\\n}\\n\\nfunction extendBasis(B, p) {\\n  var i, j;\\n\\n  if (enclosesWeakAll(p, B)) return [p];\\n\\n  // If we get here then B must have at least one element.\\n  for (i = 0; i < B.length; ++i) {\\n    if (enclosesNot(p, B[i])\\n        && enclosesWeakAll(encloseBasis2(B[i], p), B)) {\\n      return [B[i], p];\\n    }\\n  }\\n\\n  // If we get here then B must have at least two elements.\\n  for (i = 0; i < B.length - 1; ++i) {\\n    for (j = i + 1; j < B.length; ++j) {\\n      if (enclosesNot(encloseBasis2(B[i], B[j]), p)\\n          && enclosesNot(encloseBasis2(B[i], p), B[j])\\n          && enclosesNot(encloseBasis2(B[j], p), B[i])\\n          && enclosesWeakAll(encloseBasis3(B[i], B[j], p), B)) {\\n        return [B[i], B[j], p];\\n      }\\n    }\\n  }\\n\\n  // If we get here then something is very wrong.\\n  throw new Error;\\n}\\n\\nfunction enclosesNot(a, b) {\\n  var dr = a.r - b.r, dx = b.x - a.x, dy = b.y - a.y;\\n  return dr < 0 || dr * dr < dx * dx + dy * dy;\\n}\\n\\nfunction enclosesWeak(a, b) {\\n  var dr = a.r - b.r + 1e-6, dx = b.x - a.x, dy = b.y - a.y;\\n  return dr > 0 && dr * dr > dx * dx + dy * dy;\\n}\\n\\nfunction enclosesWeakAll(a, B) {\\n  for (var i = 0; i < B.length; ++i) {\\n    if (!enclosesWeak(a, B[i])) {\\n      return false;\\n    }\\n  }\\n  return true;\\n}\\n\\nfunction encloseBasis(B) {\\n  switch (B.length) {\\n    case 1: return encloseBasis1(B[0]);\\n    case 2: return encloseBasis2(B[0], B[1]);\\n    case 3: return encloseBasis3(B[0], B[1], B[2]);\\n  }\\n}\\n\\nfunction encloseBasis1(a) {\\n  return {\\n    x: a.x,\\n    y: a.y,\\n    r: a.r\\n  };\\n}\\n\\nfunction encloseBasis2(a, b) {\\n  var x1 = a.x, y1 = a.y, r1 = a.r,\\n      x2 = b.x, y2 = b.y, r2 = b.r,\\n      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\\n      l = Math.sqrt(x21 * x21 + y21 * y21);\\n  return {\\n    x: (x1 + x2 + x21 / l * r21) / 2,\\n    y: (y1 + y2 + y21 / l * r21) / 2,\\n    r: (l + r1 + r2) / 2\\n  };\\n}\\n\\nfunction encloseBasis3(a, b, c) {\\n  var x1 = a.x, y1 = a.y, r1 = a.r,\\n      x2 = b.x, y2 = b.y, r2 = b.r,\\n      x3 = c.x, y3 = c.y, r3 = c.r,\\n      a2 = x1 - x2,\\n      a3 = x1 - x3,\\n      b2 = y1 - y2,\\n      b3 = y1 - y3,\\n      c2 = r2 - r1,\\n      c3 = r3 - r1,\\n      d1 = x1 * x1 + y1 * y1 - r1 * r1,\\n      d2 = d1 - x2 * x2 - y2 * y2 + r2 * r2,\\n      d3 = d1 - x3 * x3 - y3 * y3 + r3 * r3,\\n      ab = a3 * b2 - a2 * b3,\\n      xa = (b2 * d3 - b3 * d2) / (ab * 2) - x1,\\n      xb = (b3 * c2 - b2 * c3) / ab,\\n      ya = (a3 * d2 - a2 * d3) / (ab * 2) - y1,\\n      yb = (a2 * c3 - a3 * c2) / ab,\\n      A = xb * xb + yb * yb - 1,\\n      B = 2 * (r1 + xa * xb + ya * yb),\\n      C = xa * xa + ya * ya - r1 * r1,\\n      r = -(A ? (B + Math.sqrt(B * B - 4 * A * C)) / (2 * A) : C / B);\\n  return {\\n    x: x1 + xa + xb * r,\\n    y: y1 + ya + yb * r,\\n    r: r\\n  };\\n}\\n\",\"import enclose from \\\"./enclose\\\";\\n\\nfunction place(b, a, c) {\\n  var dx = b.x - a.x, x, a2,\\n      dy = b.y - a.y, y, b2,\\n      d2 = dx * dx + dy * dy;\\n  if (d2) {\\n    a2 = a.r + c.r, a2 *= a2;\\n    b2 = b.r + c.r, b2 *= b2;\\n    if (a2 > b2) {\\n      x = (d2 + b2 - a2) / (2 * d2);\\n      y = Math.sqrt(Math.max(0, b2 / d2 - x * x));\\n      c.x = b.x - x * dx - y * dy;\\n      c.y = b.y - x * dy + y * dx;\\n    } else {\\n      x = (d2 + a2 - b2) / (2 * d2);\\n      y = Math.sqrt(Math.max(0, a2 / d2 - x * x));\\n      c.x = a.x + x * dx - y * dy;\\n      c.y = a.y + x * dy + y * dx;\\n    }\\n  } else {\\n    c.x = a.x + c.r;\\n    c.y = a.y;\\n  }\\n}\\n\\nfunction intersects(a, b) {\\n  var dr = a.r + b.r - 1e-6, dx = b.x - a.x, dy = b.y - a.y;\\n  return dr > 0 && dr * dr > dx * dx + dy * dy;\\n}\\n\\nfunction score(node) {\\n  var a = node._,\\n      b = node.next._,\\n      ab = a.r + b.r,\\n      dx = (a.x * b.r + b.x * a.r) / ab,\\n      dy = (a.y * b.r + b.y * a.r) / ab;\\n  return dx * dx + dy * dy;\\n}\\n\\nfunction Node(circle) {\\n  this._ = circle;\\n  this.next = null;\\n  this.previous = null;\\n}\\n\\nexport function packEnclose(circles) {\\n  if (!(n = circles.length)) return 0;\\n\\n  var a, b, c, n, aa, ca, i, j, k, sj, sk;\\n\\n  // Place the first circle.\\n  a = circles[0], a.x = 0, a.y = 0;\\n  if (!(n > 1)) return a.r;\\n\\n  // Place the second circle.\\n  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\\n  if (!(n > 2)) return a.r + b.r;\\n\\n  // Place the third circle.\\n  place(b, a, c = circles[2]);\\n\\n  // Initialize the front-chain using the first three circles a, b and c.\\n  a = new Node(a), b = new Node(b), c = new Node(c);\\n  a.next = c.previous = b;\\n  b.next = a.previous = c;\\n  c.next = b.previous = a;\\n\\n  // Attempt to place each remaining circle…\\n  pack: for (i = 3; i < n; ++i) {\\n    place(a._, b._, c = circles[i]), c = new Node(c);\\n\\n    // Find the closest intersecting circle on the front-chain, if any.\\n    // “Closeness” is determined by linear distance along the front-chain.\\n    // “Ahead” or “behind” is likewise determined by linear distance.\\n    j = b.next, k = a.previous, sj = b._.r, sk = a._.r;\\n    do {\\n      if (sj <= sk) {\\n        if (intersects(j._, c._)) {\\n          b = j, a.next = b, b.previous = a, --i;\\n          continue pack;\\n        }\\n        sj += j._.r, j = j.next;\\n      } else {\\n        if (intersects(k._, c._)) {\\n          a = k, a.next = b, b.previous = a, --i;\\n          continue pack;\\n        }\\n        sk += k._.r, k = k.previous;\\n      }\\n    } while (j !== k.next);\\n\\n    // Success! Insert the new circle c between a and b.\\n    c.previous = a, c.next = b, a.next = b.previous = b = c;\\n\\n    // Compute the new closest circle pair to the centroid.\\n    aa = score(a);\\n    while ((c = c.next) !== b) {\\n      if ((ca = score(c)) < aa) {\\n        a = c, aa = ca;\\n      }\\n    }\\n    b = a.next;\\n  }\\n\\n  // Compute the enclosing circle of the front chain.\\n  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\\n\\n  // Translate the circles to put the enclosing circle around the origin.\\n  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\\n\\n  return c.r;\\n}\\n\\nexport default function(circles) {\\n  packEnclose(circles);\\n  return circles;\\n}\\n\",\"export function optional(f) {\\n  return f == null ? null : required(f);\\n}\\n\\nexport function required(f) {\\n  if (typeof f !== \\\"function\\\") throw new Error;\\n  return f;\\n}\\n\",\"export function constantZero() {\\n  return 0;\\n}\\n\\nexport default function(x) {\\n  return function() {\\n    return x;\\n  };\\n}\\n\",\"import {packEnclose} from \\\"./siblings\\\";\\nimport {optional} from \\\"../accessors\\\";\\nimport constant, {constantZero} from \\\"../constant\\\";\\n\\nfunction defaultRadius(d) {\\n  return Math.sqrt(d.value);\\n}\\n\\nexport default function() {\\n  var radius = null,\\n      dx = 1,\\n      dy = 1,\\n      padding = constantZero;\\n\\n  function pack(root) {\\n    root.x = dx / 2, root.y = dy / 2;\\n    if (radius) {\\n      root.eachBefore(radiusLeaf(radius))\\n          .eachAfter(packChildren(padding, 0.5))\\n          .eachBefore(translateChild(1));\\n    } else {\\n      root.eachBefore(radiusLeaf(defaultRadius))\\n          .eachAfter(packChildren(constantZero, 1))\\n          .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\\n          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\\n    }\\n    return root;\\n  }\\n\\n  pack.radius = function(x) {\\n    return arguments.length ? (radius = optional(x), pack) : radius;\\n  };\\n\\n  pack.size = function(x) {\\n    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\\n  };\\n\\n  pack.padding = function(x) {\\n    return arguments.length ? (padding = typeof x === \\\"function\\\" ? x : constant(+x), pack) : padding;\\n  };\\n\\n  return pack;\\n}\\n\\nfunction radiusLeaf(radius) {\\n  return function(node) {\\n    if (!node.children) {\\n      node.r = Math.max(0, +radius(node) || 0);\\n    }\\n  };\\n}\\n\\nfunction packChildren(padding, k) {\\n  return function(node) {\\n    if (children = node.children) {\\n      var children,\\n          i,\\n          n = children.length,\\n          r = padding(node) * k || 0,\\n          e;\\n\\n      if (r) for (i = 0; i < n; ++i) children[i].r += r;\\n      e = packEnclose(children);\\n      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\\n      node.r = e + r;\\n    }\\n  };\\n}\\n\\nfunction translateChild(k) {\\n  return function(node) {\\n    var parent = node.parent;\\n    node.r *= k;\\n    if (parent) {\\n      node.x = parent.x + k * node.x;\\n      node.y = parent.y + k * node.y;\\n    }\\n  };\\n}\\n\",\"export default function(node) {\\n  node.x0 = Math.round(node.x0);\\n  node.y0 = Math.round(node.y0);\\n  node.x1 = Math.round(node.x1);\\n  node.y1 = Math.round(node.y1);\\n}\\n\",\"export default function(parent, x0, y0, x1, y1) {\\n  var nodes = parent.children,\\n      node,\\n      i = -1,\\n      n = nodes.length,\\n      k = parent.value && (x1 - x0) / parent.value;\\n\\n  while (++i < n) {\\n    node = nodes[i], node.y0 = y0, node.y1 = y1;\\n    node.x0 = x0, node.x1 = x0 += node.value * k;\\n  }\\n}\\n\",\"import roundNode from \\\"./treemap/round\\\";\\nimport treemapDice from \\\"./treemap/dice\\\";\\n\\nexport default function() {\\n  var dx = 1,\\n      dy = 1,\\n      padding = 0,\\n      round = false;\\n\\n  function partition(root) {\\n    var n = root.height + 1;\\n    root.x0 =\\n    root.y0 = padding;\\n    root.x1 = dx;\\n    root.y1 = dy / n;\\n    root.eachBefore(positionNode(dy, n));\\n    if (round) root.eachBefore(roundNode);\\n    return root;\\n  }\\n\\n  function positionNode(dy, n) {\\n    return function(node) {\\n      if (node.children) {\\n        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\\n      }\\n      var x0 = node.x0,\\n          y0 = node.y0,\\n          x1 = node.x1 - padding,\\n          y1 = node.y1 - padding;\\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\\n      node.x0 = x0;\\n      node.y0 = y0;\\n      node.x1 = x1;\\n      node.y1 = y1;\\n    };\\n  }\\n\\n  partition.round = function(x) {\\n    return arguments.length ? (round = !!x, partition) : round;\\n  };\\n\\n  partition.size = function(x) {\\n    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\\n  };\\n\\n  partition.padding = function(x) {\\n    return arguments.length ? (padding = +x, partition) : padding;\\n  };\\n\\n  return partition;\\n}\\n\",\"import {required} from \\\"./accessors\\\";\\nimport {Node, computeHeight} from \\\"./hierarchy/index\\\";\\n\\nvar keyPrefix = \\\"$\\\", // Protect against keys like “__proto__”.\\n    preroot = {depth: -1},\\n    ambiguous = {};\\n\\nfunction defaultId(d) {\\n  return d.id;\\n}\\n\\nfunction defaultParentId(d) {\\n  return d.parentId;\\n}\\n\\nexport default function() {\\n  var id = defaultId,\\n      parentId = defaultParentId;\\n\\n  function stratify(data) {\\n    var d,\\n        i,\\n        n = data.length,\\n        root,\\n        parent,\\n        node,\\n        nodes = new Array(n),\\n        nodeId,\\n        nodeKey,\\n        nodeByKey = {};\\n\\n    for (i = 0; i < n; ++i) {\\n      d = data[i], node = nodes[i] = new Node(d);\\n      if ((nodeId = id(d, i, data)) != null && (nodeId += \\\"\\\")) {\\n        nodeKey = keyPrefix + (node.id = nodeId);\\n        nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;\\n      }\\n    }\\n\\n    for (i = 0; i < n; ++i) {\\n      node = nodes[i], nodeId = parentId(data[i], i, data);\\n      if (nodeId == null || !(nodeId += \\\"\\\")) {\\n        if (root) throw new Error(\\\"multiple roots\\\");\\n        root = node;\\n      } else {\\n        parent = nodeByKey[keyPrefix + nodeId];\\n        if (!parent) throw new Error(\\\"missing: \\\" + nodeId);\\n        if (parent === ambiguous) throw new Error(\\\"ambiguous: \\\" + nodeId);\\n        if (parent.children) parent.children.push(node);\\n        else parent.children = [node];\\n        node.parent = parent;\\n      }\\n    }\\n\\n    if (!root) throw new Error(\\\"no root\\\");\\n    root.parent = preroot;\\n    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\\n    root.parent = null;\\n    if (n > 0) throw new Error(\\\"cycle\\\");\\n\\n    return root;\\n  }\\n\\n  stratify.id = function(x) {\\n    return arguments.length ? (id = required(x), stratify) : id;\\n  };\\n\\n  stratify.parentId = function(x) {\\n    return arguments.length ? (parentId = required(x), stratify) : parentId;\\n  };\\n\\n  return stratify;\\n}\\n\",\"import {Node} from \\\"./hierarchy/index\\\";\\n\\nfunction defaultSeparation(a, b) {\\n  return a.parent === b.parent ? 1 : 2;\\n}\\n\\n// function radialSeparation(a, b) {\\n//   return (a.parent === b.parent ? 1 : 2) / a.depth;\\n// }\\n\\n// This function is used to traverse the left contour of a subtree (or\\n// subforest). It returns the successor of v on this contour. This successor is\\n// either given by the leftmost child of v or by the thread of v. The function\\n// returns null if and only if v is on the highest level of its subtree.\\nfunction nextLeft(v) {\\n  var children = v.children;\\n  return children ? children[0] : v.t;\\n}\\n\\n// This function works analogously to nextLeft.\\nfunction nextRight(v) {\\n  var children = v.children;\\n  return children ? children[children.length - 1] : v.t;\\n}\\n\\n// Shifts the current subtree rooted at w+. This is done by increasing\\n// prelim(w+) and mod(w+) by shift.\\nfunction moveSubtree(wm, wp, shift) {\\n  var change = shift / (wp.i - wm.i);\\n  wp.c -= change;\\n  wp.s += shift;\\n  wm.c += change;\\n  wp.z += shift;\\n  wp.m += shift;\\n}\\n\\n// All other shifts, applied to the smaller subtrees between w- and w+, are\\n// performed by this function. To prepare the shifts, we have to adjust\\n// change(w+), shift(w+), and change(w-).\\nfunction executeShifts(v) {\\n  var shift = 0,\\n      change = 0,\\n      children = v.children,\\n      i = children.length,\\n      w;\\n  while (--i >= 0) {\\n    w = children[i];\\n    w.z += shift;\\n    w.m += shift;\\n    shift += w.s + (change += w.c);\\n  }\\n}\\n\\n// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\\n// returns the specified (default) ancestor.\\nfunction nextAncestor(vim, v, ancestor) {\\n  return vim.a.parent === v.parent ? vim.a : ancestor;\\n}\\n\\nfunction TreeNode(node, i) {\\n  this._ = node;\\n  this.parent = null;\\n  this.children = null;\\n  this.A = null; // default ancestor\\n  this.a = this; // ancestor\\n  this.z = 0; // prelim\\n  this.m = 0; // mod\\n  this.c = 0; // change\\n  this.s = 0; // shift\\n  this.t = null; // thread\\n  this.i = i; // number\\n}\\n\\nTreeNode.prototype = Object.create(Node.prototype);\\n\\nfunction treeRoot(root) {\\n  var tree = new TreeNode(root, 0),\\n      node,\\n      nodes = [tree],\\n      child,\\n      children,\\n      i,\\n      n;\\n\\n  while (node = nodes.pop()) {\\n    if (children = node._.children) {\\n      node.children = new Array(n = children.length);\\n      for (i = n - 1; i >= 0; --i) {\\n        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\\n        child.parent = node;\\n      }\\n    }\\n  }\\n\\n  (tree.parent = new TreeNode(null, 0)).children = [tree];\\n  return tree;\\n}\\n\\n// Node-link tree diagram using the Reingold-Tilford \\\"tidy\\\" algorithm\\nexport default function() {\\n  var separation = defaultSeparation,\\n      dx = 1,\\n      dy = 1,\\n      nodeSize = null;\\n\\n  function tree(root) {\\n    var t = treeRoot(root);\\n\\n    // Compute the layout using Buchheim et al.’s algorithm.\\n    t.eachAfter(firstWalk), t.parent.m = -t.z;\\n    t.eachBefore(secondWalk);\\n\\n    // If a fixed node size is specified, scale x and y.\\n    if (nodeSize) root.eachBefore(sizeNode);\\n\\n    // If a fixed tree size is specified, scale x and y based on the extent.\\n    // Compute the left-most, right-most, and depth-most nodes for extents.\\n    else {\\n      var left = root,\\n          right = root,\\n          bottom = root;\\n      root.eachBefore(function(node) {\\n        if (node.x < left.x) left = node;\\n        if (node.x > right.x) right = node;\\n        if (node.depth > bottom.depth) bottom = node;\\n      });\\n      var s = left === right ? 1 : separation(left, right) / 2,\\n          tx = s - left.x,\\n          kx = dx / (right.x + s + tx),\\n          ky = dy / (bottom.depth || 1);\\n      root.eachBefore(function(node) {\\n        node.x = (node.x + tx) * kx;\\n        node.y = node.depth * ky;\\n      });\\n    }\\n\\n    return root;\\n  }\\n\\n  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\\n  // applied recursively to the children of v, as well as the function\\n  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\\n  // node v is placed to the midpoint of its outermost children.\\n  function firstWalk(v) {\\n    var children = v.children,\\n        siblings = v.parent.children,\\n        w = v.i ? siblings[v.i - 1] : null;\\n    if (children) {\\n      executeShifts(v);\\n      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\\n      if (w) {\\n        v.z = w.z + separation(v._, w._);\\n        v.m = v.z - midpoint;\\n      } else {\\n        v.z = midpoint;\\n      }\\n    } else if (w) {\\n      v.z = w.z + separation(v._, w._);\\n    }\\n    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\\n  }\\n\\n  // Computes all real x-coordinates by summing up the modifiers recursively.\\n  function secondWalk(v) {\\n    v._.x = v.z + v.parent.m;\\n    v.m += v.parent.m;\\n  }\\n\\n  // The core of the algorithm. Here, a new subtree is combined with the\\n  // previous subtrees. Threads are used to traverse the inside and outside\\n  // contours of the left and right subtree up to the highest common level. The\\n  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\\n  // superscript o means outside and i means inside, the subscript - means left\\n  // subtree and + means right subtree. For summing up the modifiers along the\\n  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\\n  // nodes of the inside contours conflict, we compute the left one of the\\n  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\\n  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\\n  // Finally, we add a new thread (if necessary).\\n  function apportion(v, w, ancestor) {\\n    if (w) {\\n      var vip = v,\\n          vop = v,\\n          vim = w,\\n          vom = vip.parent.children[0],\\n          sip = vip.m,\\n          sop = vop.m,\\n          sim = vim.m,\\n          som = vom.m,\\n          shift;\\n      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\\n        vom = nextLeft(vom);\\n        vop = nextRight(vop);\\n        vop.a = v;\\n        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\\n        if (shift > 0) {\\n          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\\n          sip += shift;\\n          sop += shift;\\n        }\\n        sim += vim.m;\\n        sip += vip.m;\\n        som += vom.m;\\n        sop += vop.m;\\n      }\\n      if (vim && !nextRight(vop)) {\\n        vop.t = vim;\\n        vop.m += sim - sop;\\n      }\\n      if (vip && !nextLeft(vom)) {\\n        vom.t = vip;\\n        vom.m += sip - som;\\n        ancestor = v;\\n      }\\n    }\\n    return ancestor;\\n  }\\n\\n  function sizeNode(node) {\\n    node.x *= dx;\\n    node.y = node.depth * dy;\\n  }\\n\\n  tree.separation = function(x) {\\n    return arguments.length ? (separation = x, tree) : separation;\\n  };\\n\\n  tree.size = function(x) {\\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\\n  };\\n\\n  tree.nodeSize = function(x) {\\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\\n  };\\n\\n  return tree;\\n}\\n\",\"export default function(parent, x0, y0, x1, y1) {\\n  var nodes = parent.children,\\n      node,\\n      i = -1,\\n      n = nodes.length,\\n      k = parent.value && (y1 - y0) / parent.value;\\n\\n  while (++i < n) {\\n    node = nodes[i], node.x0 = x0, node.x1 = x1;\\n    node.y0 = y0, node.y1 = y0 += node.value * k;\\n  }\\n}\\n\",\"import treemapDice from \\\"./dice\\\";\\nimport treemapSlice from \\\"./slice\\\";\\n\\nexport var phi = (1 + Math.sqrt(5)) / 2;\\n\\nexport function squarifyRatio(ratio, parent, x0, y0, x1, y1) {\\n  var rows = [],\\n      nodes = parent.children,\\n      row,\\n      nodeValue,\\n      i0 = 0,\\n      i1 = 0,\\n      n = nodes.length,\\n      dx, dy,\\n      value = parent.value,\\n      sumValue,\\n      minValue,\\n      maxValue,\\n      newRatio,\\n      minRatio,\\n      alpha,\\n      beta;\\n\\n  while (i0 < n) {\\n    dx = x1 - x0, dy = y1 - y0;\\n\\n    // Find the next non-empty node.\\n    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\\n    minValue = maxValue = sumValue;\\n    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\\n    beta = sumValue * sumValue * alpha;\\n    minRatio = Math.max(maxValue / beta, beta / minValue);\\n\\n    // Keep adding nodes while the aspect ratio maintains or improves.\\n    for (; i1 < n; ++i1) {\\n      sumValue += nodeValue = nodes[i1].value;\\n      if (nodeValue < minValue) minValue = nodeValue;\\n      if (nodeValue > maxValue) maxValue = nodeValue;\\n      beta = sumValue * sumValue * alpha;\\n      newRatio = Math.max(maxValue / beta, beta / minValue);\\n      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\\n      minRatio = newRatio;\\n    }\\n\\n    // Position and record the row orientation.\\n    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\\n    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\\n    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\\n    value -= sumValue, i0 = i1;\\n  }\\n\\n  return rows;\\n}\\n\\nexport default (function custom(ratio) {\\n\\n  function squarify(parent, x0, y0, x1, y1) {\\n    squarifyRatio(ratio, parent, x0, y0, x1, y1);\\n  }\\n\\n  squarify.ratio = function(x) {\\n    return custom((x = +x) > 1 ? x : 1);\\n  };\\n\\n  return squarify;\\n})(phi);\\n\",\"import roundNode from \\\"./round\\\";\\nimport squarify from \\\"./squarify\\\";\\nimport {required} from \\\"../accessors\\\";\\nimport constant, {constantZero} from \\\"../constant\\\";\\n\\nexport default function() {\\n  var tile = squarify,\\n      round = false,\\n      dx = 1,\\n      dy = 1,\\n      paddingStack = [0],\\n      paddingInner = constantZero,\\n      paddingTop = constantZero,\\n      paddingRight = constantZero,\\n      paddingBottom = constantZero,\\n      paddingLeft = constantZero;\\n\\n  function treemap(root) {\\n    root.x0 =\\n    root.y0 = 0;\\n    root.x1 = dx;\\n    root.y1 = dy;\\n    root.eachBefore(positionNode);\\n    paddingStack = [0];\\n    if (round) root.eachBefore(roundNode);\\n    return root;\\n  }\\n\\n  function positionNode(node) {\\n    var p = paddingStack[node.depth],\\n        x0 = node.x0 + p,\\n        y0 = node.y0 + p,\\n        x1 = node.x1 - p,\\n        y1 = node.y1 - p;\\n    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\\n    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\\n    node.x0 = x0;\\n    node.y0 = y0;\\n    node.x1 = x1;\\n    node.y1 = y1;\\n    if (node.children) {\\n      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\\n      x0 += paddingLeft(node) - p;\\n      y0 += paddingTop(node) - p;\\n      x1 -= paddingRight(node) - p;\\n      y1 -= paddingBottom(node) - p;\\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\\n      tile(node, x0, y0, x1, y1);\\n    }\\n  }\\n\\n  treemap.round = function(x) {\\n    return arguments.length ? (round = !!x, treemap) : round;\\n  };\\n\\n  treemap.size = function(x) {\\n    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\\n  };\\n\\n  treemap.tile = function(x) {\\n    return arguments.length ? (tile = required(x), treemap) : tile;\\n  };\\n\\n  treemap.padding = function(x) {\\n    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\\n  };\\n\\n  treemap.paddingInner = function(x) {\\n    return arguments.length ? (paddingInner = typeof x === \\\"function\\\" ? x : constant(+x), treemap) : paddingInner;\\n  };\\n\\n  treemap.paddingOuter = function(x) {\\n    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\\n  };\\n\\n  treemap.paddingTop = function(x) {\\n    return arguments.length ? (paddingTop = typeof x === \\\"function\\\" ? x : constant(+x), treemap) : paddingTop;\\n  };\\n\\n  treemap.paddingRight = function(x) {\\n    return arguments.length ? (paddingRight = typeof x === \\\"function\\\" ? x : constant(+x), treemap) : paddingRight;\\n  };\\n\\n  treemap.paddingBottom = function(x) {\\n    return arguments.length ? (paddingBottom = typeof x === \\\"function\\\" ? x : constant(+x), treemap) : paddingBottom;\\n  };\\n\\n  treemap.paddingLeft = function(x) {\\n    return arguments.length ? (paddingLeft = typeof x === \\\"function\\\" ? x : constant(+x), treemap) : paddingLeft;\\n  };\\n\\n  return treemap;\\n}\\n\",\"export default function(parent, x0, y0, x1, y1) {\\n  var nodes = parent.children,\\n      i, n = nodes.length,\\n      sum, sums = new Array(n + 1);\\n\\n  for (sums[0] = sum = i = 0; i < n; ++i) {\\n    sums[i + 1] = sum += nodes[i].value;\\n  }\\n\\n  partition(0, n, parent.value, x0, y0, x1, y1);\\n\\n  function partition(i, j, value, x0, y0, x1, y1) {\\n    if (i >= j - 1) {\\n      var node = nodes[i];\\n      node.x0 = x0, node.y0 = y0;\\n      node.x1 = x1, node.y1 = y1;\\n      return;\\n    }\\n\\n    var valueOffset = sums[i],\\n        valueTarget = (value / 2) + valueOffset,\\n        k = i + 1,\\n        hi = j - 1;\\n\\n    while (k < hi) {\\n      var mid = k + hi >>> 1;\\n      if (sums[mid] < valueTarget) k = mid + 1;\\n      else hi = mid;\\n    }\\n\\n    if ((valueTarget - sums[k - 1]) < (sums[k] - valueTarget) && i + 1 < k) --k;\\n\\n    var valueLeft = sums[k] - valueOffset,\\n        valueRight = value - valueLeft;\\n\\n    if ((x1 - x0) > (y1 - y0)) {\\n      var xk = (x0 * valueRight + x1 * valueLeft) / value;\\n      partition(i, k, valueLeft, x0, y0, xk, y1);\\n      partition(k, j, valueRight, xk, y0, x1, y1);\\n    } else {\\n      var yk = (y0 * valueRight + y1 * valueLeft) / value;\\n      partition(i, k, valueLeft, x0, y0, x1, yk);\\n      partition(k, j, valueRight, x0, yk, x1, y1);\\n    }\\n  }\\n}\\n\",\"import dice from \\\"./dice\\\";\\nimport slice from \\\"./slice\\\";\\n\\nexport default function(parent, x0, y0, x1, y1) {\\n  (parent.depth & 1 ? slice : dice)(parent, x0, y0, x1, y1);\\n}\\n\",\"import treemapDice from \\\"./dice\\\";\\nimport treemapSlice from \\\"./slice\\\";\\nimport {phi, squarifyRatio} from \\\"./squarify\\\";\\n\\nexport default (function custom(ratio) {\\n\\n  function resquarify(parent, x0, y0, x1, y1) {\\n    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\\n      var rows,\\n          row,\\n          nodes,\\n          i,\\n          j = -1,\\n          n,\\n          m = rows.length,\\n          value = parent.value;\\n\\n      while (++j < m) {\\n        row = rows[j], nodes = row.children;\\n        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\\n        if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);\\n        else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\\n        value -= row.value;\\n      }\\n    } else {\\n      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\\n      rows.ratio = ratio;\\n    }\\n  }\\n\\n  resquarify.ratio = function(x) {\\n    return custom((x = +x) > 1 ? x : 1);\\n  };\\n\\n  return resquarify;\\n})(phi);\\n\",\"export default function(polygon) {\\n  var i = -1,\\n      n = polygon.length,\\n      a,\\n      b = polygon[n - 1],\\n      area = 0;\\n\\n  while (++i < n) {\\n    a = b;\\n    b = polygon[i];\\n    area += a[1] * b[0] - a[0] * b[1];\\n  }\\n\\n  return area / 2;\\n}\\n\",\"export default function(polygon) {\\n  var i = -1,\\n      n = polygon.length,\\n      x = 0,\\n      y = 0,\\n      a,\\n      b = polygon[n - 1],\\n      c,\\n      k = 0;\\n\\n  while (++i < n) {\\n    a = b;\\n    b = polygon[i];\\n    k += c = a[0] * b[1] - b[0] * a[1];\\n    x += (a[0] + b[0]) * c;\\n    y += (a[1] + b[1]) * c;\\n  }\\n\\n  return k *= 3, [x / k, y / k];\\n}\\n\",\"// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\\n// the 3D cross product in a quadrant I Cartesian coordinate system (+x is\\n// right, +y is up). Returns a positive value if ABC is counter-clockwise,\\n// negative if clockwise, and zero if the points are collinear.\\nexport default function(a, b, c) {\\n  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\\n}\\n\",\"import cross from \\\"./cross\\\";\\n\\nfunction lexicographicOrder(a, b) {\\n  return a[0] - b[0] || a[1] - b[1];\\n}\\n\\n// Computes the upper convex hull per the monotone chain algorithm.\\n// Assumes points.length >= 3, is sorted by x, unique in y.\\n// Returns an array of indices into points in left-to-right order.\\nfunction computeUpperHullIndexes(points) {\\n  var n = points.length,\\n      indexes = [0, 1],\\n      size = 2;\\n\\n  for (var i = 2; i < n; ++i) {\\n    while (size > 1 && cross(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\\n    indexes[size++] = i;\\n  }\\n\\n  return indexes.slice(0, size); // remove popped points\\n}\\n\\nexport default function(points) {\\n  if ((n = points.length) < 3) return null;\\n\\n  var i,\\n      n,\\n      sortedPoints = new Array(n),\\n      flippedPoints = new Array(n);\\n\\n  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\\n  sortedPoints.sort(lexicographicOrder);\\n  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\\n\\n  var upperIndexes = computeUpperHullIndexes(sortedPoints),\\n      lowerIndexes = computeUpperHullIndexes(flippedPoints);\\n\\n  // Construct the hull polygon, removing possible duplicate endpoints.\\n  var skipLeft = lowerIndexes[0] === upperIndexes[0],\\n      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\\n      hull = [];\\n\\n  // Add upper hull in right-to-l order.\\n  // Then add lower hull in left-to-right order.\\n  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\\n  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\\n\\n  return hull;\\n}\\n\",\"export default function(polygon, point) {\\n  var n = polygon.length,\\n      p = polygon[n - 1],\\n      x = point[0], y = point[1],\\n      x0 = p[0], y0 = p[1],\\n      x1, y1,\\n      inside = false;\\n\\n  for (var i = 0; i < n; ++i) {\\n    p = polygon[i], x1 = p[0], y1 = p[1];\\n    if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;\\n    x0 = x1, y0 = y1;\\n  }\\n\\n  return inside;\\n}\\n\",\"export default function(polygon) {\\n  var i = -1,\\n      n = polygon.length,\\n      b = polygon[n - 1],\\n      xa,\\n      ya,\\n      xb = b[0],\\n      yb = b[1],\\n      perimeter = 0;\\n\\n  while (++i < n) {\\n    xa = xb;\\n    ya = yb;\\n    b = polygon[i];\\n    xb = b[0];\\n    yb = b[1];\\n    xa -= xb;\\n    ya -= yb;\\n    perimeter += Math.sqrt(xa * xa + ya * ya);\\n  }\\n\\n  return perimeter;\\n}\\n\",\"export default function() {\\n  return Math.random();\\n}\\n\",\"import defaultSource from \\\"./defaultSource\\\";\\n\\nexport default (function sourceRandomUniform(source) {\\n  function randomUniform(min, max) {\\n    min = min == null ? 0 : +min;\\n    max = max == null ? 1 : +max;\\n    if (arguments.length === 1) max = min, min = 0;\\n    else max -= min;\\n    return function() {\\n      return source() * max + min;\\n    };\\n  }\\n\\n  randomUniform.source = sourceRandomUniform;\\n\\n  return randomUniform;\\n})(defaultSource);\\n\",\"import defaultSource from \\\"./defaultSource\\\";\\n\\nexport default (function sourceRandomNormal(source) {\\n  function randomNormal(mu, sigma) {\\n    var x, r;\\n    mu = mu == null ? 0 : +mu;\\n    sigma = sigma == null ? 1 : +sigma;\\n    return function() {\\n      var y;\\n\\n      // If available, use the second previously-generated uniform random.\\n      if (x != null) y = x, x = null;\\n\\n      // Otherwise, generate a new x and y.\\n      else do {\\n        x = source() * 2 - 1;\\n        y = source() * 2 - 1;\\n        r = x * x + y * y;\\n      } while (!r || r > 1);\\n\\n      return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\\n    };\\n  }\\n\\n  randomNormal.source = sourceRandomNormal;\\n\\n  return randomNormal;\\n})(defaultSource);\\n\",\"import defaultSource from \\\"./defaultSource\\\";\\nimport normal from \\\"./normal\\\";\\n\\nexport default (function sourceRandomLogNormal(source) {\\n  function randomLogNormal() {\\n    var randomNormal = normal.source(source).apply(this, arguments);\\n    return function() {\\n      return Math.exp(randomNormal());\\n    };\\n  }\\n\\n  randomLogNormal.source = sourceRandomLogNormal;\\n\\n  return randomLogNormal;\\n})(defaultSource);\\n\",\"import defaultSource from \\\"./defaultSource\\\";\\n\\nexport default (function sourceRandomIrwinHall(source) {\\n  function randomIrwinHall(n) {\\n    return function() {\\n      for (var sum = 0, i = 0; i < n; ++i) sum += source();\\n      return sum;\\n    };\\n  }\\n\\n  randomIrwinHall.source = sourceRandomIrwinHall;\\n\\n  return randomIrwinHall;\\n})(defaultSource);\\n\",\"import defaultSource from \\\"./defaultSource\\\";\\nimport irwinHall from \\\"./irwinHall\\\";\\n\\nexport default (function sourceRandomBates(source) {\\n  function randomBates(n) {\\n    var randomIrwinHall = irwinHall.source(source)(n);\\n    return function() {\\n      return randomIrwinHall() / n;\\n    };\\n  }\\n\\n  randomBates.source = sourceRandomBates;\\n\\n  return randomBates;\\n})(defaultSource);\\n\",\"import defaultSource from \\\"./defaultSource\\\";\\n\\nexport default (function sourceRandomExponential(source) {\\n  function randomExponential(lambda) {\\n    return function() {\\n      return -Math.log(1 - source()) / lambda;\\n    };\\n  }\\n\\n  randomExponential.source = sourceRandomExponential;\\n\\n  return randomExponential;\\n})(defaultSource);\\n\",\"export function initRange(domain, range) {\\n  switch (arguments.length) {\\n    case 0: break;\\n    case 1: this.range(domain); break;\\n    default: this.range(range).domain(domain); break;\\n  }\\n  return this;\\n}\\n\\nexport function initInterpolator(domain, interpolator) {\\n  switch (arguments.length) {\\n    case 0: break;\\n    case 1: this.interpolator(domain); break;\\n    default: this.interpolator(interpolator).domain(domain); break;\\n  }\\n  return this;\\n}\\n\",\"var array = Array.prototype;\\n\\nexport var map = array.map;\\nexport var slice = array.slice;\\n\",\"import {map} from \\\"d3-collection\\\";\\nimport {slice} from \\\"./array\\\";\\nimport {initRange} from \\\"./init\\\";\\n\\nexport var implicit = {name: \\\"implicit\\\"};\\n\\nexport default function ordinal() {\\n  var index = map(),\\n      domain = [],\\n      range = [],\\n      unknown = implicit;\\n\\n  function scale(d) {\\n    var key = d + \\\"\\\", i = index.get(key);\\n    if (!i) {\\n      if (unknown !== implicit) return unknown;\\n      index.set(key, i = domain.push(d));\\n    }\\n    return range[(i - 1) % range.length];\\n  }\\n\\n  scale.domain = function(_) {\\n    if (!arguments.length) return domain.slice();\\n    domain = [], index = map();\\n    var i = -1, n = _.length, d, key;\\n    while (++i < n) if (!index.has(key = (d = _[i]) + \\\"\\\")) index.set(key, domain.push(d));\\n    return scale;\\n  };\\n\\n  scale.range = function(_) {\\n    return arguments.length ? (range = slice.call(_), scale) : range.slice();\\n  };\\n\\n  scale.unknown = function(_) {\\n    return arguments.length ? (unknown = _, scale) : unknown;\\n  };\\n\\n  scale.copy = function() {\\n    return ordinal(domain, range).unknown(unknown);\\n  };\\n\\n  initRange.apply(scale, arguments);\\n\\n  return scale;\\n}\\n\",\"import {range as sequence} from \\\"d3-array\\\";\\nimport {initRange} from \\\"./init\\\";\\nimport ordinal from \\\"./ordinal\\\";\\n\\nexport default function band() {\\n  var scale = ordinal().unknown(undefined),\\n      domain = scale.domain,\\n      ordinalRange = scale.range,\\n      range = [0, 1],\\n      step,\\n      bandwidth,\\n      round = false,\\n      paddingInner = 0,\\n      paddingOuter = 0,\\n      align = 0.5;\\n\\n  delete scale.unknown;\\n\\n  function rescale() {\\n    var n = domain().length,\\n        reverse = range[1] < range[0],\\n        start = range[reverse - 0],\\n        stop = range[1 - reverse];\\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\\n    if (round) step = Math.floor(step);\\n    start += (stop - start - step * (n - paddingInner)) * align;\\n    bandwidth = step * (1 - paddingInner);\\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\\n    var values = sequence(n).map(function(i) { return start + step * i; });\\n    return ordinalRange(reverse ? values.reverse() : values);\\n  }\\n\\n  scale.domain = function(_) {\\n    return arguments.length ? (domain(_), rescale()) : domain();\\n  };\\n\\n  scale.range = function(_) {\\n    return arguments.length ? (range = [+_[0], +_[1]], rescale()) : range.slice();\\n  };\\n\\n  scale.rangeRound = function(_) {\\n    return range = [+_[0], +_[1]], round = true, rescale();\\n  };\\n\\n  scale.bandwidth = function() {\\n    return bandwidth;\\n  };\\n\\n  scale.step = function() {\\n    return step;\\n  };\\n\\n  scale.round = function(_) {\\n    return arguments.length ? (round = !!_, rescale()) : round;\\n  };\\n\\n  scale.padding = function(_) {\\n    return arguments.length ? (paddingInner = Math.min(1, paddingOuter = +_), rescale()) : paddingInner;\\n  };\\n\\n  scale.paddingInner = function(_) {\\n    return arguments.length ? (paddingInner = Math.min(1, _), rescale()) : paddingInner;\\n  };\\n\\n  scale.paddingOuter = function(_) {\\n    return arguments.length ? (paddingOuter = +_, rescale()) : paddingOuter;\\n  };\\n\\n  scale.align = function(_) {\\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\\n  };\\n\\n  scale.copy = function() {\\n    return band(domain(), range)\\n        .round(round)\\n        .paddingInner(paddingInner)\\n        .paddingOuter(paddingOuter)\\n        .align(align);\\n  };\\n\\n  return initRange.apply(rescale(), arguments);\\n}\\n\\nfunction pointish(scale) {\\n  var copy = scale.copy;\\n\\n  scale.padding = scale.paddingOuter;\\n  delete scale.paddingInner;\\n  delete scale.paddingOuter;\\n\\n  scale.copy = function() {\\n    return pointish(copy());\\n  };\\n\\n  return scale;\\n}\\n\\nexport function point() {\\n  return pointish(band.apply(null, arguments).paddingInner(1));\\n}\\n\",\"export default function(x) {\\n  return function() {\\n    return x;\\n  };\\n}\\n\",\"export default function(x) {\\n  return +x;\\n}\\n\",\"import {bisect} from \\\"d3-array\\\";\\nimport {interpolate as interpolateValue, interpolateNumber, interpolateRound} from \\\"d3-interpolate\\\";\\nimport {map, slice} from \\\"./array\\\";\\nimport constant from \\\"./constant\\\";\\nimport number from \\\"./number\\\";\\n\\nvar unit = [0, 1];\\n\\nexport function identity(x) {\\n  return x;\\n}\\n\\nfunction normalize(a, b) {\\n  return (b -= (a = +a))\\n      ? function(x) { return (x - a) / b; }\\n      : constant(isNaN(b) ? NaN : 0.5);\\n}\\n\\nfunction clamper(domain) {\\n  var a = domain[0], b = domain[domain.length - 1], t;\\n  if (a > b) t = a, a = b, b = t;\\n  return function(x) { return Math.max(a, Math.min(b, x)); };\\n}\\n\\n// normalize(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\\n// interpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding range value x in [a,b].\\nfunction bimap(domain, range, interpolate) {\\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\\n  if (d1 < d0) d0 = normalize(d1, d0), r0 = interpolate(r1, r0);\\n  else d0 = normalize(d0, d1), r0 = interpolate(r0, r1);\\n  return function(x) { return r0(d0(x)); };\\n}\\n\\nfunction polymap(domain, range, interpolate) {\\n  var j = Math.min(domain.length, range.length) - 1,\\n      d = new Array(j),\\n      r = new Array(j),\\n      i = -1;\\n\\n  // Reverse descending domains.\\n  if (domain[j] < domain[0]) {\\n    domain = domain.slice().reverse();\\n    range = range.slice().reverse();\\n  }\\n\\n  while (++i < j) {\\n    d[i] = normalize(domain[i], domain[i + 1]);\\n    r[i] = interpolate(range[i], range[i + 1]);\\n  }\\n\\n  return function(x) {\\n    var i = bisect(domain, x, 1, j) - 1;\\n    return r[i](d[i](x));\\n  };\\n}\\n\\nexport function copy(source, target) {\\n  return target\\n      .domain(source.domain())\\n      .range(source.range())\\n      .interpolate(source.interpolate())\\n      .clamp(source.clamp())\\n      .unknown(source.unknown());\\n}\\n\\nexport function transformer() {\\n  var domain = unit,\\n      range = unit,\\n      interpolate = interpolateValue,\\n      transform,\\n      untransform,\\n      unknown,\\n      clamp = identity,\\n      piecewise,\\n      output,\\n      input;\\n\\n  function rescale() {\\n    piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;\\n    output = input = null;\\n    return scale;\\n  }\\n\\n  function scale(x) {\\n    return isNaN(x = +x) ? unknown : (output || (output = piecewise(domain.map(transform), range, interpolate)))(transform(clamp(x)));\\n  }\\n\\n  scale.invert = function(y) {\\n    return clamp(untransform((input || (input = piecewise(range, domain.map(transform), interpolateNumber)))(y)));\\n  };\\n\\n  scale.domain = function(_) {\\n    return arguments.length ? (domain = map.call(_, number), clamp === identity || (clamp = clamper(domain)), rescale()) : domain.slice();\\n  };\\n\\n  scale.range = function(_) {\\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\\n  };\\n\\n  scale.rangeRound = function(_) {\\n    return range = slice.call(_), interpolate = interpolateRound, rescale();\\n  };\\n\\n  scale.clamp = function(_) {\\n    return arguments.length ? (clamp = _ ? clamper(domain) : identity, scale) : clamp !== identity;\\n  };\\n\\n  scale.interpolate = function(_) {\\n    return arguments.length ? (interpolate = _, rescale()) : interpolate;\\n  };\\n\\n  scale.unknown = function(_) {\\n    return arguments.length ? (unknown = _, scale) : unknown;\\n  };\\n\\n  return function(t, u) {\\n    transform = t, untransform = u;\\n    return rescale();\\n  };\\n}\\n\\nexport default function continuous(transform, untransform) {\\n  return transformer()(transform, untransform);\\n}\\n\",\"import {tickStep} from \\\"d3-array\\\";\\nimport {format, formatPrefix, formatSpecifier, precisionFixed, precisionPrefix, precisionRound} from \\\"d3-format\\\";\\n\\nexport default function(start, stop, count, specifier) {\\n  var step = tickStep(start, stop, count),\\n      precision;\\n  specifier = formatSpecifier(specifier == null ? \\\",f\\\" : specifier);\\n  switch (specifier.type) {\\n    case \\\"s\\\": {\\n      var value = Math.max(Math.abs(start), Math.abs(stop));\\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\\n      return formatPrefix(specifier, value);\\n    }\\n    case \\\"\\\":\\n    case \\\"e\\\":\\n    case \\\"g\\\":\\n    case \\\"p\\\":\\n    case \\\"r\\\": {\\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \\\"e\\\");\\n      break;\\n    }\\n    case \\\"f\\\":\\n    case \\\"%\\\": {\\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \\\"%\\\") * 2;\\n      break;\\n    }\\n  }\\n  return format(specifier);\\n}\\n\",\"import {ticks, tickIncrement} from \\\"d3-array\\\";\\nimport continuous, {copy, identity} from \\\"./continuous\\\";\\nimport {initRange} from \\\"./init\\\";\\nimport tickFormat from \\\"./tickFormat\\\";\\n\\nexport function linearish(scale) {\\n  var domain = scale.domain;\\n\\n  scale.ticks = function(count) {\\n    var d = domain();\\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\\n  };\\n\\n  scale.tickFormat = function(count, specifier) {\\n    var d = domain();\\n    return tickFormat(d[0], d[d.length - 1], count == null ? 10 : count, specifier);\\n  };\\n\\n  scale.nice = function(count) {\\n    if (count == null) count = 10;\\n\\n    var d = domain(),\\n        i0 = 0,\\n        i1 = d.length - 1,\\n        start = d[i0],\\n        stop = d[i1],\\n        step;\\n\\n    if (stop < start) {\\n      step = start, start = stop, stop = step;\\n      step = i0, i0 = i1, i1 = step;\\n    }\\n\\n    step = tickIncrement(start, stop, count);\\n\\n    if (step > 0) {\\n      start = Math.floor(start / step) * step;\\n      stop = Math.ceil(stop / step) * step;\\n      step = tickIncrement(start, stop, count);\\n    } else if (step < 0) {\\n      start = Math.ceil(start * step) / step;\\n      stop = Math.floor(stop * step) / step;\\n      step = tickIncrement(start, stop, count);\\n    }\\n\\n    if (step > 0) {\\n      d[i0] = Math.floor(start / step) * step;\\n      d[i1] = Math.ceil(stop / step) * step;\\n      domain(d);\\n    } else if (step < 0) {\\n      d[i0] = Math.ceil(start * step) / step;\\n      d[i1] = Math.floor(stop * step) / step;\\n      domain(d);\\n    }\\n\\n    return scale;\\n  };\\n\\n  return scale;\\n}\\n\\nexport default function linear() {\\n  var scale = continuous(identity, identity);\\n\\n  scale.copy = function() {\\n    return copy(scale, linear());\\n  };\\n\\n  initRange.apply(scale, arguments);\\n\\n  return linearish(scale);\\n}\\n\",\"import {map} from \\\"./array\\\";\\nimport {linearish} from \\\"./linear\\\";\\nimport number from \\\"./number\\\";\\n\\nexport default function identity(domain) {\\n  var unknown;\\n\\n  function scale(x) {\\n    return isNaN(x = +x) ? unknown : x;\\n  }\\n\\n  scale.invert = scale;\\n\\n  scale.domain = scale.range = function(_) {\\n    return arguments.length ? (domain = map.call(_, number), scale) : domain.slice();\\n  };\\n\\n  scale.unknown = function(_) {\\n    return arguments.length ? (unknown = _, scale) : unknown;\\n  };\\n\\n  scale.copy = function() {\\n    return identity(domain).unknown(unknown);\\n  };\\n\\n  domain = arguments.length ? map.call(domain, number) : [0, 1];\\n\\n  return linearish(scale);\\n}\\n\",\"export default function(domain, interval) {\\n  domain = domain.slice();\\n\\n  var i0 = 0,\\n      i1 = domain.length - 1,\\n      x0 = domain[i0],\\n      x1 = domain[i1],\\n      t;\\n\\n  if (x1 < x0) {\\n    t = i0, i0 = i1, i1 = t;\\n    t = x0, x0 = x1, x1 = t;\\n  }\\n\\n  domain[i0] = interval.floor(x0);\\n  domain[i1] = interval.ceil(x1);\\n  return domain;\\n}\\n\",\"import {ticks} from \\\"d3-array\\\";\\nimport {format} from \\\"d3-format\\\";\\nimport nice from \\\"./nice\\\";\\nimport {copy, transformer} from \\\"./continuous\\\";\\nimport {initRange} from \\\"./init\\\";\\n\\nfunction transformLog(x) {\\n  return Math.log(x);\\n}\\n\\nfunction transformExp(x) {\\n  return Math.exp(x);\\n}\\n\\nfunction transformLogn(x) {\\n  return -Math.log(-x);\\n}\\n\\nfunction transformExpn(x) {\\n  return -Math.exp(-x);\\n}\\n\\nfunction pow10(x) {\\n  return isFinite(x) ? +(\\\"1e\\\" + x) : x < 0 ? 0 : x;\\n}\\n\\nfunction powp(base) {\\n  return base === 10 ? pow10\\n      : base === Math.E ? Math.exp\\n      : function(x) { return Math.pow(base, x); };\\n}\\n\\nfunction logp(base) {\\n  return base === Math.E ? Math.log\\n      : base === 10 && Math.log10\\n      || base === 2 && Math.log2\\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\\n}\\n\\nfunction reflect(f) {\\n  return function(x) {\\n    return -f(-x);\\n  };\\n}\\n\\nexport function loggish(transform) {\\n  var scale = transform(transformLog, transformExp),\\n      domain = scale.domain,\\n      base = 10,\\n      logs,\\n      pows;\\n\\n  function rescale() {\\n    logs = logp(base), pows = powp(base);\\n    if (domain()[0] < 0) {\\n      logs = reflect(logs), pows = reflect(pows);\\n      transform(transformLogn, transformExpn);\\n    } else {\\n      transform(transformLog, transformExp);\\n    }\\n    return scale;\\n  }\\n\\n  scale.base = function(_) {\\n    return arguments.length ? (base = +_, rescale()) : base;\\n  };\\n\\n  scale.domain = function(_) {\\n    return arguments.length ? (domain(_), rescale()) : domain();\\n  };\\n\\n  scale.ticks = function(count) {\\n    var d = domain(),\\n        u = d[0],\\n        v = d[d.length - 1],\\n        r;\\n\\n    if (r = v < u) i = u, u = v, v = i;\\n\\n    var i = logs(u),\\n        j = logs(v),\\n        p,\\n        k,\\n        t,\\n        n = count == null ? 10 : +count,\\n        z = [];\\n\\n    if (!(base % 1) && j - i < n) {\\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\\n      if (u > 0) for (; i < j; ++i) {\\n        for (k = 1, p = pows(i); k < base; ++k) {\\n          t = p * k;\\n          if (t < u) continue;\\n          if (t > v) break;\\n          z.push(t);\\n        }\\n      } else for (; i < j; ++i) {\\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\\n          t = p * k;\\n          if (t < u) continue;\\n          if (t > v) break;\\n          z.push(t);\\n        }\\n      }\\n    } else {\\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\\n    }\\n\\n    return r ? z.reverse() : z;\\n  };\\n\\n  scale.tickFormat = function(count, specifier) {\\n    if (specifier == null) specifier = base === 10 ? \\\".0e\\\" : \\\",\\\";\\n    if (typeof specifier !== \\\"function\\\") specifier = format(specifier);\\n    if (count === Infinity) return specifier;\\n    if (count == null) count = 10;\\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\\n    return function(d) {\\n      var i = d / pows(Math.round(logs(d)));\\n      if (i * base < base - 0.5) i *= base;\\n      return i <= k ? specifier(d) : \\\"\\\";\\n    };\\n  };\\n\\n  scale.nice = function() {\\n    return domain(nice(domain(), {\\n      floor: function(x) { return pows(Math.floor(logs(x))); },\\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\\n    }));\\n  };\\n\\n  return scale;\\n}\\n\\nexport default function log() {\\n  var scale = loggish(transformer()).domain([1, 10]);\\n\\n  scale.copy = function() {\\n    return copy(scale, log()).base(scale.base());\\n  };\\n\\n  initRange.apply(scale, arguments);\\n\\n  return scale;\\n}\\n\",\"import {linearish} from \\\"./linear\\\";\\nimport {copy, transformer} from \\\"./continuous\\\";\\nimport {initRange} from \\\"./init\\\";\\n\\nfunction transformSymlog(c) {\\n  return function(x) {\\n    return Math.sign(x) * Math.log1p(Math.abs(x / c));\\n  };\\n}\\n\\nfunction transformSymexp(c) {\\n  return function(x) {\\n    return Math.sign(x) * Math.expm1(Math.abs(x)) * c;\\n  };\\n}\\n\\nexport function symlogish(transform) {\\n  var c = 1, scale = transform(transformSymlog(c), transformSymexp(c));\\n\\n  scale.constant = function(_) {\\n    return arguments.length ? transform(transformSymlog(c = +_), transformSymexp(c)) : c;\\n  };\\n\\n  return linearish(scale);\\n}\\n\\nexport default function symlog() {\\n  var scale = symlogish(transformer());\\n\\n  scale.copy = function() {\\n    return copy(scale, symlog()).constant(scale.constant());\\n  };\\n\\n  return initRange.apply(scale, arguments);\\n}\\n\",\"import {linearish} from \\\"./linear\\\";\\nimport {copy, identity, transformer} from \\\"./continuous\\\";\\nimport {initRange} from \\\"./init\\\";\\n\\nfunction transformPow(exponent) {\\n  return function(x) {\\n    return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\\n  };\\n}\\n\\nfunction transformSqrt(x) {\\n  return x < 0 ? -Math.sqrt(-x) : Math.sqrt(x);\\n}\\n\\nfunction transformSquare(x) {\\n  return x < 0 ? -x * x : x * x;\\n}\\n\\nexport function powish(transform) {\\n  var scale = transform(identity, identity),\\n      exponent = 1;\\n\\n  function rescale() {\\n    return exponent === 1 ? transform(identity, identity)\\n        : exponent === 0.5 ? transform(transformSqrt, transformSquare)\\n        : transform(transformPow(exponent), transformPow(1 / exponent));\\n  }\\n\\n  scale.exponent = function(_) {\\n    return arguments.length ? (exponent = +_, rescale()) : exponent;\\n  };\\n\\n  return linearish(scale);\\n}\\n\\nexport default function pow() {\\n  var scale = powish(transformer());\\n\\n  scale.copy = function() {\\n    return copy(scale, pow()).exponent(scale.exponent());\\n  };\\n\\n  initRange.apply(scale, arguments);\\n\\n  return scale;\\n}\\n\\nexport function sqrt() {\\n  return pow.apply(null, arguments).exponent(0.5);\\n}\\n\",\"import {ascending, bisect, quantile as threshold} from \\\"d3-array\\\";\\nimport {slice} from \\\"./array\\\";\\nimport {initRange} from \\\"./init\\\";\\n\\nexport default function quantile() {\\n  var domain = [],\\n      range = [],\\n      thresholds = [],\\n      unknown;\\n\\n  function rescale() {\\n    var i = 0, n = Math.max(1, range.length);\\n    thresholds = new Array(n - 1);\\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\\n    return scale;\\n  }\\n\\n  function scale(x) {\\n    return isNaN(x = +x) ? unknown : range[bisect(thresholds, x)];\\n  }\\n\\n  scale.invertExtent = function(y) {\\n    var i = range.indexOf(y);\\n    return i < 0 ? [NaN, NaN] : [\\n      i > 0 ? thresholds[i - 1] : domain[0],\\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\\n    ];\\n  };\\n\\n  scale.domain = function(_) {\\n    if (!arguments.length) return domain.slice();\\n    domain = [];\\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\\n    domain.sort(ascending);\\n    return rescale();\\n  };\\n\\n  scale.range = function(_) {\\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\\n  };\\n\\n  scale.unknown = function(_) {\\n    return arguments.length ? (unknown = _, scale) : unknown;\\n  };\\n\\n  scale.quantiles = function() {\\n    return thresholds.slice();\\n  };\\n\\n  scale.copy = function() {\\n    return quantile()\\n        .domain(domain)\\n        .range(range)\\n        .unknown(unknown);\\n  };\\n\\n  return initRange.apply(scale, arguments);\\n}\\n\",\"import {bisect} from \\\"d3-array\\\";\\nimport {slice} from \\\"./array\\\";\\nimport {linearish} from \\\"./linear\\\";\\nimport {initRange} from \\\"./init\\\";\\n\\nexport default function quantize() {\\n  var x0 = 0,\\n      x1 = 1,\\n      n = 1,\\n      domain = [0.5],\\n      range = [0, 1],\\n      unknown;\\n\\n  function scale(x) {\\n    return x <= x ? range[bisect(domain, x, 0, n)] : unknown;\\n  }\\n\\n  function rescale() {\\n    var i = -1;\\n    domain = new Array(n);\\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\\n    return scale;\\n  }\\n\\n  scale.domain = function(_) {\\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\\n  };\\n\\n  scale.range = function(_) {\\n    return arguments.length ? (n = (range = slice.call(_)).length - 1, rescale()) : range.slice();\\n  };\\n\\n  scale.invertExtent = function(y) {\\n    var i = range.indexOf(y);\\n    return i < 0 ? [NaN, NaN]\\n        : i < 1 ? [x0, domain[0]]\\n        : i >= n ? [domain[n - 1], x1]\\n        : [domain[i - 1], domain[i]];\\n  };\\n\\n  scale.unknown = function(_) {\\n    return arguments.length ? (unknown = _, scale) : scale;\\n  };\\n\\n  scale.thresholds = function() {\\n    return domain.slice();\\n  };\\n\\n  scale.copy = function() {\\n    return quantize()\\n        .domain([x0, x1])\\n        .range(range)\\n        .unknown(unknown);\\n  };\\n\\n  return initRange.apply(linearish(scale), arguments);\\n}\\n\",\"import {bisect} from \\\"d3-array\\\";\\nimport {slice} from \\\"./array\\\";\\nimport {initRange} from \\\"./init\\\";\\n\\nexport default function threshold() {\\n  var domain = [0.5],\\n      range = [0, 1],\\n      unknown,\\n      n = 1;\\n\\n  function scale(x) {\\n    return x <= x ? range[bisect(domain, x, 0, n)] : unknown;\\n  }\\n\\n  scale.domain = function(_) {\\n    return arguments.length ? (domain = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\\n  };\\n\\n  scale.range = function(_) {\\n    return arguments.length ? (range = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\\n  };\\n\\n  scale.invertExtent = function(y) {\\n    var i = range.indexOf(y);\\n    return [domain[i - 1], domain[i]];\\n  };\\n\\n  scale.unknown = function(_) {\\n    return arguments.length ? (unknown = _, scale) : unknown;\\n  };\\n\\n  scale.copy = function() {\\n    return threshold()\\n        .domain(domain)\\n        .range(range)\\n        .unknown(unknown);\\n  };\\n\\n  return initRange.apply(scale, arguments);\\n}\\n\",\"var t0 = new Date,\\n    t1 = new Date;\\n\\nexport default function newInterval(floori, offseti, count, field) {\\n\\n  function interval(date) {\\n    return floori(date = new Date(+date)), date;\\n  }\\n\\n  interval.floor = interval;\\n\\n  interval.ceil = function(date) {\\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\\n  };\\n\\n  interval.round = function(date) {\\n    var d0 = interval(date),\\n        d1 = interval.ceil(date);\\n    return date - d0 < d1 - date ? d0 : d1;\\n  };\\n\\n  interval.offset = function(date, step) {\\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\\n  };\\n\\n  interval.range = function(start, stop, step) {\\n    var range = [], previous;\\n    start = interval.ceil(start);\\n    step = step == null ? 1 : Math.floor(step);\\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\\n    do range.push(previous = new Date(+start)), offseti(start, step), floori(start);\\n    while (previous < start && start < stop);\\n    return range;\\n  };\\n\\n  interval.filter = function(test) {\\n    return newInterval(function(date) {\\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\\n    }, function(date, step) {\\n      if (date >= date) {\\n        if (step < 0) while (++step <= 0) {\\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\\n        } else while (--step >= 0) {\\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\\n        }\\n      }\\n    });\\n  };\\n\\n  if (count) {\\n    interval.count = function(start, end) {\\n      t0.setTime(+start), t1.setTime(+end);\\n      floori(t0), floori(t1);\\n      return Math.floor(count(t0, t1));\\n    };\\n\\n    interval.every = function(step) {\\n      step = Math.floor(step);\\n      return !isFinite(step) || !(step > 0) ? null\\n          : !(step > 1) ? interval\\n          : interval.filter(field\\n              ? function(d) { return field(d) % step === 0; }\\n              : function(d) { return interval.count(0, d) % step === 0; });\\n    };\\n  }\\n\\n  return interval;\\n}\\n\",\"import interval from \\\"./interval\\\";\\n\\nvar millisecond = interval(function() {\\n  // noop\\n}, function(date, step) {\\n  date.setTime(+date + step);\\n}, function(start, end) {\\n  return end - start;\\n});\\n\\n// An optimized implementation for this simple case.\\nmillisecond.every = function(k) {\\n  k = Math.floor(k);\\n  if (!isFinite(k) || !(k > 0)) return null;\\n  if (!(k > 1)) return millisecond;\\n  return interval(function(date) {\\n    date.setTime(Math.floor(date / k) * k);\\n  }, function(date, step) {\\n    date.setTime(+date + step * k);\\n  }, function(start, end) {\\n    return (end - start) / k;\\n  });\\n};\\n\\nexport default millisecond;\\nexport var milliseconds = millisecond.range;\\n\",\"export var durationSecond = 1e3;\\nexport var durationMinute = 6e4;\\nexport var durationHour = 36e5;\\nexport var durationDay = 864e5;\\nexport var durationWeek = 6048e5;\\n\",\"import interval from \\\"./interval\\\";\\nimport {durationSecond} from \\\"./duration\\\";\\n\\nvar second = interval(function(date) {\\n  date.setTime(date - date.getMilliseconds());\\n}, function(date, step) {\\n  date.setTime(+date + step * durationSecond);\\n}, function(start, end) {\\n  return (end - start) / durationSecond;\\n}, function(date) {\\n  return date.getUTCSeconds();\\n});\\n\\nexport default second;\\nexport var seconds = second.range;\\n\",\"import interval from \\\"./interval\\\";\\nimport {durationMinute, durationSecond} from \\\"./duration\\\";\\n\\nvar minute = interval(function(date) {\\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond);\\n}, function(date, step) {\\n  date.setTime(+date + step * durationMinute);\\n}, function(start, end) {\\n  return (end - start) / durationMinute;\\n}, function(date) {\\n  return date.getMinutes();\\n});\\n\\nexport default minute;\\nexport var minutes = minute.range;\\n\",\"import interval from \\\"./interval\\\";\\nimport {durationHour, durationMinute, durationSecond} from \\\"./duration\\\";\\n\\nvar hour = interval(function(date) {\\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond - date.getMinutes() * durationMinute);\\n}, function(date, step) {\\n  date.setTime(+date + step * durationHour);\\n}, function(start, end) {\\n  return (end - start) / durationHour;\\n}, function(date) {\\n  return date.getHours();\\n});\\n\\nexport default hour;\\nexport var hours = hour.range;\\n\",\"import interval from \\\"./interval\\\";\\nimport {durationDay, durationMinute} from \\\"./duration\\\";\\n\\nvar day = interval(function(date) {\\n  date.setHours(0, 0, 0, 0);\\n}, function(date, step) {\\n  date.setDate(date.getDate() + step);\\n}, function(start, end) {\\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\\n}, function(date) {\\n  return date.getDate() - 1;\\n});\\n\\nexport default day;\\nexport var days = day.range;\\n\",\"import interval from \\\"./interval\\\";\\nimport {durationMinute, durationWeek} from \\\"./duration\\\";\\n\\nfunction weekday(i) {\\n  return interval(function(date) {\\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\\n    date.setHours(0, 0, 0, 0);\\n  }, function(date, step) {\\n    date.setDate(date.getDate() + step * 7);\\n  }, function(start, end) {\\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\\n  });\\n}\\n\\nexport var sunday = weekday(0);\\nexport var monday = weekday(1);\\nexport var tuesday = weekday(2);\\nexport var wednesday = weekday(3);\\nexport var thursday = weekday(4);\\nexport var friday = weekday(5);\\nexport var saturday = weekday(6);\\n\\nexport var sundays = sunday.range;\\nexport var mondays = monday.range;\\nexport var tuesdays = tuesday.range;\\nexport var wednesdays = wednesday.range;\\nexport var thursdays = thursday.range;\\nexport var fridays = friday.range;\\nexport var saturdays = saturday.range;\\n\",\"import interval from \\\"./interval\\\";\\n\\nvar month = interval(function(date) {\\n  date.setDate(1);\\n  date.setHours(0, 0, 0, 0);\\n}, function(date, step) {\\n  date.setMonth(date.getMonth() + step);\\n}, function(start, end) {\\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\\n}, function(date) {\\n  return date.getMonth();\\n});\\n\\nexport default month;\\nexport var months = month.range;\\n\",\"import interval from \\\"./interval\\\";\\n\\nvar year = interval(function(date) {\\n  date.setMonth(0, 1);\\n  date.setHours(0, 0, 0, 0);\\n}, function(date, step) {\\n  date.setFullYear(date.getFullYear() + step);\\n}, function(start, end) {\\n  return end.getFullYear() - start.getFullYear();\\n}, function(date) {\\n  return date.getFullYear();\\n});\\n\\n// An optimized implementation for this simple case.\\nyear.every = function(k) {\\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\\n    date.setMonth(0, 1);\\n    date.setHours(0, 0, 0, 0);\\n  }, function(date, step) {\\n    date.setFullYear(date.getFullYear() + step * k);\\n  });\\n};\\n\\nexport default year;\\nexport var years = year.range;\\n\",\"import interval from \\\"./interval\\\";\\nimport {durationMinute} from \\\"./duration\\\";\\n\\nvar utcMinute = interval(function(date) {\\n  date.setUTCSeconds(0, 0);\\n}, function(date, step) {\\n  date.setTime(+date + step * durationMinute);\\n}, function(start, end) {\\n  return (end - start) / durationMinute;\\n}, function(date) {\\n  return date.getUTCMinutes();\\n});\\n\\nexport default utcMinute;\\nexport var utcMinutes = utcMinute.range;\\n\",\"import interval from \\\"./interval\\\";\\nimport {durationHour} from \\\"./duration\\\";\\n\\nvar utcHour = interval(function(date) {\\n  date.setUTCMinutes(0, 0, 0);\\n}, function(date, step) {\\n  date.setTime(+date + step * durationHour);\\n}, function(start, end) {\\n  return (end - start) / durationHour;\\n}, function(date) {\\n  return date.getUTCHours();\\n});\\n\\nexport default utcHour;\\nexport var utcHours = utcHour.range;\\n\",\"import interval from \\\"./interval\\\";\\nimport {durationDay} from \\\"./duration\\\";\\n\\nvar utcDay = interval(function(date) {\\n  date.setUTCHours(0, 0, 0, 0);\\n}, function(date, step) {\\n  date.setUTCDate(date.getUTCDate() + step);\\n}, function(start, end) {\\n  return (end - start) / durationDay;\\n}, function(date) {\\n  return date.getUTCDate() - 1;\\n});\\n\\nexport default utcDay;\\nexport var utcDays = utcDay.range;\\n\",\"import interval from \\\"./interval\\\";\\nimport {durationWeek} from \\\"./duration\\\";\\n\\nfunction utcWeekday(i) {\\n  return interval(function(date) {\\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\\n    date.setUTCHours(0, 0, 0, 0);\\n  }, function(date, step) {\\n    date.setUTCDate(date.getUTCDate() + step * 7);\\n  }, function(start, end) {\\n    return (end - start) / durationWeek;\\n  });\\n}\\n\\nexport var utcSunday = utcWeekday(0);\\nexport var utcMonday = utcWeekday(1);\\nexport var utcTuesday = utcWeekday(2);\\nexport var utcWednesday = utcWeekday(3);\\nexport var utcThursday = utcWeekday(4);\\nexport var utcFriday = utcWeekday(5);\\nexport var utcSaturday = utcWeekday(6);\\n\\nexport var utcSundays = utcSunday.range;\\nexport var utcMondays = utcMonday.range;\\nexport var utcTuesdays = utcTuesday.range;\\nexport var utcWednesdays = utcWednesday.range;\\nexport var utcThursdays = utcThursday.range;\\nexport var utcFridays = utcFriday.range;\\nexport var utcSaturdays = utcSaturday.range;\\n\",\"import interval from \\\"./interval\\\";\\n\\nvar utcMonth = interval(function(date) {\\n  date.setUTCDate(1);\\n  date.setUTCHours(0, 0, 0, 0);\\n}, function(date, step) {\\n  date.setUTCMonth(date.getUTCMonth() + step);\\n}, function(start, end) {\\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\\n}, function(date) {\\n  return date.getUTCMonth();\\n});\\n\\nexport default utcMonth;\\nexport var utcMonths = utcMonth.range;\\n\",\"import interval from \\\"./interval\\\";\\n\\nvar utcYear = interval(function(date) {\\n  date.setUTCMonth(0, 1);\\n  date.setUTCHours(0, 0, 0, 0);\\n}, function(date, step) {\\n  date.setUTCFullYear(date.getUTCFullYear() + step);\\n}, function(start, end) {\\n  return end.getUTCFullYear() - start.getUTCFullYear();\\n}, function(date) {\\n  return date.getUTCFullYear();\\n});\\n\\n// An optimized implementation for this simple case.\\nutcYear.every = function(k) {\\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\\n    date.setUTCMonth(0, 1);\\n    date.setUTCHours(0, 0, 0, 0);\\n  }, function(date, step) {\\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\\n  });\\n};\\n\\nexport default utcYear;\\nexport var utcYears = utcYear.range;\\n\",\"import {\\n  timeDay,\\n  timeSunday,\\n  timeMonday,\\n  timeThursday,\\n  timeYear,\\n  utcDay,\\n  utcSunday,\\n  utcMonday,\\n  utcThursday,\\n  utcYear\\n} from \\\"d3-time\\\";\\n\\nfunction localDate(d) {\\n  if (0 <= d.y && d.y < 100) {\\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\\n    date.setFullYear(d.y);\\n    return date;\\n  }\\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\\n}\\n\\nfunction utcDate(d) {\\n  if (0 <= d.y && d.y < 100) {\\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\\n    date.setUTCFullYear(d.y);\\n    return date;\\n  }\\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\\n}\\n\\nfunction newYear(y) {\\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\\n}\\n\\nexport default function formatLocale(locale) {\\n  var locale_dateTime = locale.dateTime,\\n      locale_date = locale.date,\\n      locale_time = locale.time,\\n      locale_periods = locale.periods,\\n      locale_weekdays = locale.days,\\n      locale_shortWeekdays = locale.shortDays,\\n      locale_months = locale.months,\\n      locale_shortMonths = locale.shortMonths;\\n\\n  var periodRe = formatRe(locale_periods),\\n      periodLookup = formatLookup(locale_periods),\\n      weekdayRe = formatRe(locale_weekdays),\\n      weekdayLookup = formatLookup(locale_weekdays),\\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\\n      monthRe = formatRe(locale_months),\\n      monthLookup = formatLookup(locale_months),\\n      shortMonthRe = formatRe(locale_shortMonths),\\n      shortMonthLookup = formatLookup(locale_shortMonths);\\n\\n  var formats = {\\n    \\\"a\\\": formatShortWeekday,\\n    \\\"A\\\": formatWeekday,\\n    \\\"b\\\": formatShortMonth,\\n    \\\"B\\\": formatMonth,\\n    \\\"c\\\": null,\\n    \\\"d\\\": formatDayOfMonth,\\n    \\\"e\\\": formatDayOfMonth,\\n    \\\"f\\\": formatMicroseconds,\\n    \\\"H\\\": formatHour24,\\n    \\\"I\\\": formatHour12,\\n    \\\"j\\\": formatDayOfYear,\\n    \\\"L\\\": formatMilliseconds,\\n    \\\"m\\\": formatMonthNumber,\\n    \\\"M\\\": formatMinutes,\\n    \\\"p\\\": formatPeriod,\\n    \\\"Q\\\": formatUnixTimestamp,\\n    \\\"s\\\": formatUnixTimestampSeconds,\\n    \\\"S\\\": formatSeconds,\\n    \\\"u\\\": formatWeekdayNumberMonday,\\n    \\\"U\\\": formatWeekNumberSunday,\\n    \\\"V\\\": formatWeekNumberISO,\\n    \\\"w\\\": formatWeekdayNumberSunday,\\n    \\\"W\\\": formatWeekNumberMonday,\\n    \\\"x\\\": null,\\n    \\\"X\\\": null,\\n    \\\"y\\\": formatYear,\\n    \\\"Y\\\": formatFullYear,\\n    \\\"Z\\\": formatZone,\\n    \\\"%\\\": formatLiteralPercent\\n  };\\n\\n  var utcFormats = {\\n    \\\"a\\\": formatUTCShortWeekday,\\n    \\\"A\\\": formatUTCWeekday,\\n    \\\"b\\\": formatUTCShortMonth,\\n    \\\"B\\\": formatUTCMonth,\\n    \\\"c\\\": null,\\n    \\\"d\\\": formatUTCDayOfMonth,\\n    \\\"e\\\": formatUTCDayOfMonth,\\n    \\\"f\\\": formatUTCMicroseconds,\\n    \\\"H\\\": formatUTCHour24,\\n    \\\"I\\\": formatUTCHour12,\\n    \\\"j\\\": formatUTCDayOfYear,\\n    \\\"L\\\": formatUTCMilliseconds,\\n    \\\"m\\\": formatUTCMonthNumber,\\n    \\\"M\\\": formatUTCMinutes,\\n    \\\"p\\\": formatUTCPeriod,\\n    \\\"Q\\\": formatUnixTimestamp,\\n    \\\"s\\\": formatUnixTimestampSeconds,\\n    \\\"S\\\": formatUTCSeconds,\\n    \\\"u\\\": formatUTCWeekdayNumberMonday,\\n    \\\"U\\\": formatUTCWeekNumberSunday,\\n    \\\"V\\\": formatUTCWeekNumberISO,\\n    \\\"w\\\": formatUTCWeekdayNumberSunday,\\n    \\\"W\\\": formatUTCWeekNumberMonday,\\n    \\\"x\\\": null,\\n    \\\"X\\\": null,\\n    \\\"y\\\": formatUTCYear,\\n    \\\"Y\\\": formatUTCFullYear,\\n    \\\"Z\\\": formatUTCZone,\\n    \\\"%\\\": formatLiteralPercent\\n  };\\n\\n  var parses = {\\n    \\\"a\\\": parseShortWeekday,\\n    \\\"A\\\": parseWeekday,\\n    \\\"b\\\": parseShortMonth,\\n    \\\"B\\\": parseMonth,\\n    \\\"c\\\": parseLocaleDateTime,\\n    \\\"d\\\": parseDayOfMonth,\\n    \\\"e\\\": parseDayOfMonth,\\n    \\\"f\\\": parseMicroseconds,\\n    \\\"H\\\": parseHour24,\\n    \\\"I\\\": parseHour24,\\n    \\\"j\\\": parseDayOfYear,\\n    \\\"L\\\": parseMilliseconds,\\n    \\\"m\\\": parseMonthNumber,\\n    \\\"M\\\": parseMinutes,\\n    \\\"p\\\": parsePeriod,\\n    \\\"Q\\\": parseUnixTimestamp,\\n    \\\"s\\\": parseUnixTimestampSeconds,\\n    \\\"S\\\": parseSeconds,\\n    \\\"u\\\": parseWeekdayNumberMonday,\\n    \\\"U\\\": parseWeekNumberSunday,\\n    \\\"V\\\": parseWeekNumberISO,\\n    \\\"w\\\": parseWeekdayNumberSunday,\\n    \\\"W\\\": parseWeekNumberMonday,\\n    \\\"x\\\": parseLocaleDate,\\n    \\\"X\\\": parseLocaleTime,\\n    \\\"y\\\": parseYear,\\n    \\\"Y\\\": parseFullYear,\\n    \\\"Z\\\": parseZone,\\n    \\\"%\\\": parseLiteralPercent\\n  };\\n\\n  // These recursive directive definitions must be deferred.\\n  formats.x = newFormat(locale_date, formats);\\n  formats.X = newFormat(locale_time, formats);\\n  formats.c = newFormat(locale_dateTime, formats);\\n  utcFormats.x = newFormat(locale_date, utcFormats);\\n  utcFormats.X = newFormat(locale_time, utcFormats);\\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\\n\\n  function newFormat(specifier, formats) {\\n    return function(date) {\\n      var string = [],\\n          i = -1,\\n          j = 0,\\n          n = specifier.length,\\n          c,\\n          pad,\\n          format;\\n\\n      if (!(date instanceof Date)) date = new Date(+date);\\n\\n      while (++i < n) {\\n        if (specifier.charCodeAt(i) === 37) {\\n          string.push(specifier.slice(j, i));\\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\\n          else pad = c === \\\"e\\\" ? \\\" \\\" : \\\"0\\\";\\n          if (format = formats[c]) c = format(date, pad);\\n          string.push(c);\\n          j = i + 1;\\n        }\\n      }\\n\\n      string.push(specifier.slice(j, i));\\n      return string.join(\\\"\\\");\\n    };\\n  }\\n\\n  function newParse(specifier, newDate) {\\n    return function(string) {\\n      var d = newYear(1900),\\n          i = parseSpecifier(d, specifier, string += \\\"\\\", 0),\\n          week, day;\\n      if (i != string.length) return null;\\n\\n      // If a UNIX timestamp is specified, return it.\\n      if (\\\"Q\\\" in d) return new Date(d.Q);\\n\\n      // The am-pm flag is 0 for AM, and 1 for PM.\\n      if (\\\"p\\\" in d) d.H = d.H % 12 + d.p * 12;\\n\\n      // Convert day-of-week and week-of-year to day-of-year.\\n      if (\\\"V\\\" in d) {\\n        if (d.V < 1 || d.V > 53) return null;\\n        if (!(\\\"w\\\" in d)) d.w = 1;\\n        if (\\\"Z\\\" in d) {\\n          week = utcDate(newYear(d.y)), day = week.getUTCDay();\\n          week = day > 4 || day === 0 ? utcMonday.ceil(week) : utcMonday(week);\\n          week = utcDay.offset(week, (d.V - 1) * 7);\\n          d.y = week.getUTCFullYear();\\n          d.m = week.getUTCMonth();\\n          d.d = week.getUTCDate() + (d.w + 6) % 7;\\n        } else {\\n          week = newDate(newYear(d.y)), day = week.getDay();\\n          week = day > 4 || day === 0 ? timeMonday.ceil(week) : timeMonday(week);\\n          week = timeDay.offset(week, (d.V - 1) * 7);\\n          d.y = week.getFullYear();\\n          d.m = week.getMonth();\\n          d.d = week.getDate() + (d.w + 6) % 7;\\n        }\\n      } else if (\\\"W\\\" in d || \\\"U\\\" in d) {\\n        if (!(\\\"w\\\" in d)) d.w = \\\"u\\\" in d ? d.u % 7 : \\\"W\\\" in d ? 1 : 0;\\n        day = \\\"Z\\\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\\n        d.m = 0;\\n        d.d = \\\"W\\\" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;\\n      }\\n\\n      // If a time zone is specified, all fields are interpreted as UTC and then\\n      // offset according to the specified time zone.\\n      if (\\\"Z\\\" in d) {\\n        d.H += d.Z / 100 | 0;\\n        d.M += d.Z % 100;\\n        return utcDate(d);\\n      }\\n\\n      // Otherwise, all fields are in local time.\\n      return newDate(d);\\n    };\\n  }\\n\\n  function parseSpecifier(d, specifier, string, j) {\\n    var i = 0,\\n        n = specifier.length,\\n        m = string.length,\\n        c,\\n        parse;\\n\\n    while (i < n) {\\n      if (j >= m) return -1;\\n      c = specifier.charCodeAt(i++);\\n      if (c === 37) {\\n        c = specifier.charAt(i++);\\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\\n      } else if (c != string.charCodeAt(j++)) {\\n        return -1;\\n      }\\n    }\\n\\n    return j;\\n  }\\n\\n  function parsePeriod(d, string, i) {\\n    var n = periodRe.exec(string.slice(i));\\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\\n  }\\n\\n  function parseShortWeekday(d, string, i) {\\n    var n = shortWeekdayRe.exec(string.slice(i));\\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\\n  }\\n\\n  function parseWeekday(d, string, i) {\\n    var n = weekdayRe.exec(string.slice(i));\\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\\n  }\\n\\n  function parseShortMonth(d, string, i) {\\n    var n = shortMonthRe.exec(string.slice(i));\\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\\n  }\\n\\n  function parseMonth(d, string, i) {\\n    var n = monthRe.exec(string.slice(i));\\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\\n  }\\n\\n  function parseLocaleDateTime(d, string, i) {\\n    return parseSpecifier(d, locale_dateTime, string, i);\\n  }\\n\\n  function parseLocaleDate(d, string, i) {\\n    return parseSpecifier(d, locale_date, string, i);\\n  }\\n\\n  function parseLocaleTime(d, string, i) {\\n    return parseSpecifier(d, locale_time, string, i);\\n  }\\n\\n  function formatShortWeekday(d) {\\n    return locale_shortWeekdays[d.getDay()];\\n  }\\n\\n  function formatWeekday(d) {\\n    return locale_weekdays[d.getDay()];\\n  }\\n\\n  function formatShortMonth(d) {\\n    return locale_shortMonths[d.getMonth()];\\n  }\\n\\n  function formatMonth(d) {\\n    return locale_months[d.getMonth()];\\n  }\\n\\n  function formatPeriod(d) {\\n    return locale_periods[+(d.getHours() >= 12)];\\n  }\\n\\n  function formatUTCShortWeekday(d) {\\n    return locale_shortWeekdays[d.getUTCDay()];\\n  }\\n\\n  function formatUTCWeekday(d) {\\n    return locale_weekdays[d.getUTCDay()];\\n  }\\n\\n  function formatUTCShortMonth(d) {\\n    return locale_shortMonths[d.getUTCMonth()];\\n  }\\n\\n  function formatUTCMonth(d) {\\n    return locale_months[d.getUTCMonth()];\\n  }\\n\\n  function formatUTCPeriod(d) {\\n    return locale_periods[+(d.getUTCHours() >= 12)];\\n  }\\n\\n  return {\\n    format: function(specifier) {\\n      var f = newFormat(specifier += \\\"\\\", formats);\\n      f.toString = function() { return specifier; };\\n      return f;\\n    },\\n    parse: function(specifier) {\\n      var p = newParse(specifier += \\\"\\\", localDate);\\n      p.toString = function() { return specifier; };\\n      return p;\\n    },\\n    utcFormat: function(specifier) {\\n      var f = newFormat(specifier += \\\"\\\", utcFormats);\\n      f.toString = function() { return specifier; };\\n      return f;\\n    },\\n    utcParse: function(specifier) {\\n      var p = newParse(specifier, utcDate);\\n      p.toString = function() { return specifier; };\\n      return p;\\n    }\\n  };\\n}\\n\\nvar pads = {\\\"-\\\": \\\"\\\", \\\"_\\\": \\\" \\\", \\\"0\\\": \\\"0\\\"},\\n    numberRe = /^\\\\s*\\\\d+/, // note: ignores next directive\\n    percentRe = /^%/,\\n    requoteRe = /[\\\\\\\\^$*+?|[\\\\]().{}]/g;\\n\\nfunction pad(value, fill, width) {\\n  var sign = value < 0 ? \\\"-\\\" : \\\"\\\",\\n      string = (sign ? -value : value) + \\\"\\\",\\n      length = string.length;\\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\\n}\\n\\nfunction requote(s) {\\n  return s.replace(requoteRe, \\\"\\\\\\\\$&\\\");\\n}\\n\\nfunction formatRe(names) {\\n  return new RegExp(\\\"^(?:\\\" + names.map(requote).join(\\\"|\\\") + \\\")\\\", \\\"i\\\");\\n}\\n\\nfunction formatLookup(names) {\\n  var map = {}, i = -1, n = names.length;\\n  while (++i < n) map[names[i].toLowerCase()] = i;\\n  return map;\\n}\\n\\nfunction parseWeekdayNumberSunday(d, string, i) {\\n  var n = numberRe.exec(string.slice(i, i + 1));\\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\\n}\\n\\nfunction parseWeekdayNumberMonday(d, string, i) {\\n  var n = numberRe.exec(string.slice(i, i + 1));\\n  return n ? (d.u = +n[0], i + n[0].length) : -1;\\n}\\n\\nfunction parseWeekNumberSunday(d, string, i) {\\n  var n = numberRe.exec(string.slice(i, i + 2));\\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\\n}\\n\\nfunction parseWeekNumberISO(d, string, i) {\\n  var n = numberRe.exec(string.slice(i, i + 2));\\n  return n ? (d.V = +n[0], i + n[0].length) : -1;\\n}\\n\\nfunction parseWeekNumberMonday(d, string, i) {\\n  var n = numberRe.exec(string.slice(i, i + 2));\\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\\n}\\n\\nfunction parseFullYear(d, string, i) {\\n  var n = numberRe.exec(string.slice(i, i + 4));\\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\\n}\\n\\nfunction parseYear(d, string, i) {\\n  var n = numberRe.exec(string.slice(i, i + 2));\\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\\n}\\n\\nfunction parseZone(d, string, i) {\\n  var n = /^(Z)|([+-]\\\\d\\\\d)(?::?(\\\\d\\\\d))?/.exec(string.slice(i, i + 6));\\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \\\"00\\\")), i + n[0].length) : -1;\\n}\\n\\nfunction parseMonthNumber(d, string, i) {\\n  var n = numberRe.exec(string.slice(i, i + 2));\\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\\n}\\n\\nfunction parseDayOfMonth(d, string, i) {\\n  var n = numberRe.exec(string.slice(i, i + 2));\\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\\n}\\n\\nfunction parseDayOfYear(d, string, i) {\\n  var n = numberRe.exec(string.slice(i, i + 3));\\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\\n}\\n\\nfunction parseHour24(d, string, i) {\\n  var n = numberRe.exec(string.slice(i, i + 2));\\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\\n}\\n\\nfunction parseMinutes(d, string, i) {\\n  var n = numberRe.exec(string.slice(i, i + 2));\\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\\n}\\n\\nfunction parseSeconds(d, string, i) {\\n  var n = numberRe.exec(string.slice(i, i + 2));\\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\\n}\\n\\nfunction parseMilliseconds(d, string, i) {\\n  var n = numberRe.exec(string.slice(i, i + 3));\\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\\n}\\n\\nfunction parseMicroseconds(d, string, i) {\\n  var n = numberRe.exec(string.slice(i, i + 6));\\n  return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;\\n}\\n\\nfunction parseLiteralPercent(d, string, i) {\\n  var n = percentRe.exec(string.slice(i, i + 1));\\n  return n ? i + n[0].length : -1;\\n}\\n\\nfunction parseUnixTimestamp(d, string, i) {\\n  var n = numberRe.exec(string.slice(i));\\n  return n ? (d.Q = +n[0], i + n[0].length) : -1;\\n}\\n\\nfunction parseUnixTimestampSeconds(d, string, i) {\\n  var n = numberRe.exec(string.slice(i));\\n  return n ? (d.Q = (+n[0]) * 1000, i + n[0].length) : -1;\\n}\\n\\nfunction formatDayOfMonth(d, p) {\\n  return pad(d.getDate(), p, 2);\\n}\\n\\nfunction formatHour24(d, p) {\\n  return pad(d.getHours(), p, 2);\\n}\\n\\nfunction formatHour12(d, p) {\\n  return pad(d.getHours() % 12 || 12, p, 2);\\n}\\n\\nfunction formatDayOfYear(d, p) {\\n  return pad(1 + timeDay.count(timeYear(d), d), p, 3);\\n}\\n\\nfunction formatMilliseconds(d, p) {\\n  return pad(d.getMilliseconds(), p, 3);\\n}\\n\\nfunction formatMicroseconds(d, p) {\\n  return formatMilliseconds(d, p) + \\\"000\\\";\\n}\\n\\nfunction formatMonthNumber(d, p) {\\n  return pad(d.getMonth() + 1, p, 2);\\n}\\n\\nfunction formatMinutes(d, p) {\\n  return pad(d.getMinutes(), p, 2);\\n}\\n\\nfunction formatSeconds(d, p) {\\n  return pad(d.getSeconds(), p, 2);\\n}\\n\\nfunction formatWeekdayNumberMonday(d) {\\n  var day = d.getDay();\\n  return day === 0 ? 7 : day;\\n}\\n\\nfunction formatWeekNumberSunday(d, p) {\\n  return pad(timeSunday.count(timeYear(d), d), p, 2);\\n}\\n\\nfunction formatWeekNumberISO(d, p) {\\n  var day = d.getDay();\\n  d = (day >= 4 || day === 0) ? timeThursday(d) : timeThursday.ceil(d);\\n  return pad(timeThursday.count(timeYear(d), d) + (timeYear(d).getDay() === 4), p, 2);\\n}\\n\\nfunction formatWeekdayNumberSunday(d) {\\n  return d.getDay();\\n}\\n\\nfunction formatWeekNumberMonday(d, p) {\\n  return pad(timeMonday.count(timeYear(d), d), p, 2);\\n}\\n\\nfunction formatYear(d, p) {\\n  return pad(d.getFullYear() % 100, p, 2);\\n}\\n\\nfunction formatFullYear(d, p) {\\n  return pad(d.getFullYear() % 10000, p, 4);\\n}\\n\\nfunction formatZone(d) {\\n  var z = d.getTimezoneOffset();\\n  return (z > 0 ? \\\"-\\\" : (z *= -1, \\\"+\\\"))\\n      + pad(z / 60 | 0, \\\"0\\\", 2)\\n      + pad(z % 60, \\\"0\\\", 2);\\n}\\n\\nfunction formatUTCDayOfMonth(d, p) {\\n  return pad(d.getUTCDate(), p, 2);\\n}\\n\\nfunction formatUTCHour24(d, p) {\\n  return pad(d.getUTCHours(), p, 2);\\n}\\n\\nfunction formatUTCHour12(d, p) {\\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\\n}\\n\\nfunction formatUTCDayOfYear(d, p) {\\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\\n}\\n\\nfunction formatUTCMilliseconds(d, p) {\\n  return pad(d.getUTCMilliseconds(), p, 3);\\n}\\n\\nfunction formatUTCMicroseconds(d, p) {\\n  return formatUTCMilliseconds(d, p) + \\\"000\\\";\\n}\\n\\nfunction formatUTCMonthNumber(d, p) {\\n  return pad(d.getUTCMonth() + 1, p, 2);\\n}\\n\\nfunction formatUTCMinutes(d, p) {\\n  return pad(d.getUTCMinutes(), p, 2);\\n}\\n\\nfunction formatUTCSeconds(d, p) {\\n  return pad(d.getUTCSeconds(), p, 2);\\n}\\n\\nfunction formatUTCWeekdayNumberMonday(d) {\\n  var dow = d.getUTCDay();\\n  return dow === 0 ? 7 : dow;\\n}\\n\\nfunction formatUTCWeekNumberSunday(d, p) {\\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\\n}\\n\\nfunction formatUTCWeekNumberISO(d, p) {\\n  var day = d.getUTCDay();\\n  d = (day >= 4 || day === 0) ? utcThursday(d) : utcThursday.ceil(d);\\n  return pad(utcThursday.count(utcYear(d), d) + (utcYear(d).getUTCDay() === 4), p, 2);\\n}\\n\\nfunction formatUTCWeekdayNumberSunday(d) {\\n  return d.getUTCDay();\\n}\\n\\nfunction formatUTCWeekNumberMonday(d, p) {\\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\\n}\\n\\nfunction formatUTCYear(d, p) {\\n  return pad(d.getUTCFullYear() % 100, p, 2);\\n}\\n\\nfunction formatUTCFullYear(d, p) {\\n  return pad(d.getUTCFullYear() % 10000, p, 4);\\n}\\n\\nfunction formatUTCZone() {\\n  return \\\"+0000\\\";\\n}\\n\\nfunction formatLiteralPercent() {\\n  return \\\"%\\\";\\n}\\n\\nfunction formatUnixTimestamp(d) {\\n  return +d;\\n}\\n\\nfunction formatUnixTimestampSeconds(d) {\\n  return Math.floor(+d / 1000);\\n}\\n\",\"import formatLocale from \\\"./locale\\\";\\n\\nvar locale;\\nexport var timeFormat;\\nexport var timeParse;\\nexport var utcFormat;\\nexport var utcParse;\\n\\ndefaultLocale({\\n  dateTime: \\\"%x, %X\\\",\\n  date: \\\"%-m/%-d/%Y\\\",\\n  time: \\\"%-I:%M:%S %p\\\",\\n  periods: [\\\"AM\\\", \\\"PM\\\"],\\n  days: [\\\"Sunday\\\", \\\"Monday\\\", \\\"Tuesday\\\", \\\"Wednesday\\\", \\\"Thursday\\\", \\\"Friday\\\", \\\"Saturday\\\"],\\n  shortDays: [\\\"Sun\\\", \\\"Mon\\\", \\\"Tue\\\", \\\"Wed\\\", \\\"Thu\\\", \\\"Fri\\\", \\\"Sat\\\"],\\n  months: [\\\"January\\\", \\\"February\\\", \\\"March\\\", \\\"April\\\", \\\"May\\\", \\\"June\\\", \\\"July\\\", \\\"August\\\", \\\"September\\\", \\\"October\\\", \\\"November\\\", \\\"December\\\"],\\n  shortMonths: [\\\"Jan\\\", \\\"Feb\\\", \\\"Mar\\\", \\\"Apr\\\", \\\"May\\\", \\\"Jun\\\", \\\"Jul\\\", \\\"Aug\\\", \\\"Sep\\\", \\\"Oct\\\", \\\"Nov\\\", \\\"Dec\\\"]\\n});\\n\\nexport default function defaultLocale(definition) {\\n  locale = formatLocale(definition);\\n  timeFormat = locale.format;\\n  timeParse = locale.parse;\\n  utcFormat = locale.utcFormat;\\n  utcParse = locale.utcParse;\\n  return locale;\\n}\\n\",\"import {utcFormat} from \\\"./defaultLocale\\\";\\n\\nexport var isoSpecifier = \\\"%Y-%m-%dT%H:%M:%S.%LZ\\\";\\n\\nfunction formatIsoNative(date) {\\n  return date.toISOString();\\n}\\n\\nvar formatIso = Date.prototype.toISOString\\n    ? formatIsoNative\\n    : utcFormat(isoSpecifier);\\n\\nexport default formatIso;\\n\",\"import {isoSpecifier} from \\\"./isoFormat\\\";\\nimport {utcParse} from \\\"./defaultLocale\\\";\\n\\nfunction parseIsoNative(string) {\\n  var date = new Date(string);\\n  return isNaN(date) ? null : date;\\n}\\n\\nvar parseIso = +new Date(\\\"2000-01-01T00:00:00.000Z\\\")\\n    ? parseIsoNative\\n    : utcParse(isoSpecifier);\\n\\nexport default parseIso;\\n\",\"import {bisector, tickStep} from \\\"d3-array\\\";\\nimport {timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond} from \\\"d3-time\\\";\\nimport {timeFormat} from \\\"d3-time-format\\\";\\nimport {map} from \\\"./array\\\";\\nimport continuous, {copy, identity} from \\\"./continuous\\\";\\nimport {initRange} from \\\"./init\\\";\\nimport nice from \\\"./nice\\\";\\n\\nvar durationSecond = 1000,\\n    durationMinute = durationSecond * 60,\\n    durationHour = durationMinute * 60,\\n    durationDay = durationHour * 24,\\n    durationWeek = durationDay * 7,\\n    durationMonth = durationDay * 30,\\n    durationYear = durationDay * 365;\\n\\nfunction date(t) {\\n  return new Date(t);\\n}\\n\\nfunction number(t) {\\n  return t instanceof Date ? +t : +new Date(+t);\\n}\\n\\nexport function calendar(year, month, week, day, hour, minute, second, millisecond, format) {\\n  var scale = continuous(identity, identity),\\n      invert = scale.invert,\\n      domain = scale.domain;\\n\\n  var formatMillisecond = format(\\\".%L\\\"),\\n      formatSecond = format(\\\":%S\\\"),\\n      formatMinute = format(\\\"%I:%M\\\"),\\n      formatHour = format(\\\"%I %p\\\"),\\n      formatDay = format(\\\"%a %d\\\"),\\n      formatWeek = format(\\\"%b %d\\\"),\\n      formatMonth = format(\\\"%B\\\"),\\n      formatYear = format(\\\"%Y\\\");\\n\\n  var tickIntervals = [\\n    [second,  1,      durationSecond],\\n    [second,  5,  5 * durationSecond],\\n    [second, 15, 15 * durationSecond],\\n    [second, 30, 30 * durationSecond],\\n    [minute,  1,      durationMinute],\\n    [minute,  5,  5 * durationMinute],\\n    [minute, 15, 15 * durationMinute],\\n    [minute, 30, 30 * durationMinute],\\n    [  hour,  1,      durationHour  ],\\n    [  hour,  3,  3 * durationHour  ],\\n    [  hour,  6,  6 * durationHour  ],\\n    [  hour, 12, 12 * durationHour  ],\\n    [   day,  1,      durationDay   ],\\n    [   day,  2,  2 * durationDay   ],\\n    [  week,  1,      durationWeek  ],\\n    [ month,  1,      durationMonth ],\\n    [ month,  3,  3 * durationMonth ],\\n    [  year,  1,      durationYear  ]\\n  ];\\n\\n  function tickFormat(date) {\\n    return (second(date) < date ? formatMillisecond\\n        : minute(date) < date ? formatSecond\\n        : hour(date) < date ? formatMinute\\n        : day(date) < date ? formatHour\\n        : month(date) < date ? (week(date) < date ? formatDay : formatWeek)\\n        : year(date) < date ? formatMonth\\n        : formatYear)(date);\\n  }\\n\\n  function tickInterval(interval, start, stop, step) {\\n    if (interval == null) interval = 10;\\n\\n    // If a desired tick count is specified, pick a reasonable tick interval\\n    // based on the extent of the domain and a rough estimate of tick size.\\n    // Otherwise, assume interval is already a time interval and use it.\\n    if (typeof interval === \\\"number\\\") {\\n      var target = Math.abs(stop - start) / interval,\\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\\n      if (i === tickIntervals.length) {\\n        step = tickStep(start / durationYear, stop / durationYear, interval);\\n        interval = year;\\n      } else if (i) {\\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\\n        step = i[1];\\n        interval = i[0];\\n      } else {\\n        step = Math.max(tickStep(start, stop, interval), 1);\\n        interval = millisecond;\\n      }\\n    }\\n\\n    return step == null ? interval : interval.every(step);\\n  }\\n\\n  scale.invert = function(y) {\\n    return new Date(invert(y));\\n  };\\n\\n  scale.domain = function(_) {\\n    return arguments.length ? domain(map.call(_, number)) : domain().map(date);\\n  };\\n\\n  scale.ticks = function(interval, step) {\\n    var d = domain(),\\n        t0 = d[0],\\n        t1 = d[d.length - 1],\\n        r = t1 < t0,\\n        t;\\n    if (r) t = t0, t0 = t1, t1 = t;\\n    t = tickInterval(interval, t0, t1, step);\\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\\n    return r ? t.reverse() : t;\\n  };\\n\\n  scale.tickFormat = function(count, specifier) {\\n    return specifier == null ? tickFormat : format(specifier);\\n  };\\n\\n  scale.nice = function(interval, step) {\\n    var d = domain();\\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\\n        ? domain(nice(d, interval))\\n        : scale;\\n  };\\n\\n  scale.copy = function() {\\n    return copy(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format));\\n  };\\n\\n  return scale;\\n}\\n\\nexport default function() {\\n  return initRange.apply(calendar(timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond, timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]), arguments);\\n}\\n\",\"import {calendar} from \\\"./time\\\";\\nimport {utcFormat} from \\\"d3-time-format\\\";\\nimport {utcYear, utcMonth, utcWeek, utcDay, utcHour, utcMinute, utcSecond, utcMillisecond} from \\\"d3-time\\\";\\nimport {initRange} from \\\"./init\\\";\\n\\nexport default function() {\\n  return initRange.apply(calendar(utcYear, utcMonth, utcWeek, utcDay, utcHour, utcMinute, utcSecond, utcMillisecond, utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]), arguments);\\n}\\n\",\"import {identity} from \\\"./continuous\\\";\\nimport {initInterpolator} from \\\"./init\\\";\\nimport {linearish} from \\\"./linear\\\";\\nimport {loggish} from \\\"./log\\\";\\nimport {symlogish} from \\\"./symlog\\\";\\nimport {powish} from \\\"./pow\\\";\\n\\nfunction transformer() {\\n  var x0 = 0,\\n      x1 = 1,\\n      t0,\\n      t1,\\n      k10,\\n      transform,\\n      interpolator = identity,\\n      clamp = false,\\n      unknown;\\n\\n  function scale(x) {\\n    return isNaN(x = +x) ? unknown : interpolator(k10 === 0 ? 0.5 : (x = (transform(x) - t0) * k10, clamp ? Math.max(0, Math.min(1, x)) : x));\\n  }\\n\\n  scale.domain = function(_) {\\n    return arguments.length ? (t0 = transform(x0 = +_[0]), t1 = transform(x1 = +_[1]), k10 = t0 === t1 ? 0 : 1 / (t1 - t0), scale) : [x0, x1];\\n  };\\n\\n  scale.clamp = function(_) {\\n    return arguments.length ? (clamp = !!_, scale) : clamp;\\n  };\\n\\n  scale.interpolator = function(_) {\\n    return arguments.length ? (interpolator = _, scale) : interpolator;\\n  };\\n\\n  scale.unknown = function(_) {\\n    return arguments.length ? (unknown = _, scale) : unknown;\\n  };\\n\\n  return function(t) {\\n    transform = t, t0 = t(x0), t1 = t(x1), k10 = t0 === t1 ? 0 : 1 / (t1 - t0);\\n    return scale;\\n  };\\n}\\n\\nexport function copy(source, target) {\\n  return target\\n      .domain(source.domain())\\n      .interpolator(source.interpolator())\\n      .clamp(source.clamp())\\n      .unknown(source.unknown());\\n}\\n\\nexport default function sequential() {\\n  var scale = linearish(transformer()(identity));\\n\\n  scale.copy = function() {\\n    return copy(scale, sequential());\\n  };\\n\\n  return initInterpolator.apply(scale, arguments);\\n}\\n\\nexport function sequentialLog() {\\n  var scale = loggish(transformer()).domain([1, 10]);\\n\\n  scale.copy = function() {\\n    return copy(scale, sequentialLog()).base(scale.base());\\n  };\\n\\n  return initInterpolator.apply(scale, arguments);\\n}\\n\\nexport function sequentialSymlog() {\\n  var scale = symlogish(transformer());\\n\\n  scale.copy = function() {\\n    return copy(scale, sequentialSymlog()).constant(scale.constant());\\n  };\\n\\n  return initInterpolator.apply(scale, arguments);\\n}\\n\\nexport function sequentialPow() {\\n  var scale = powish(transformer());\\n\\n  scale.copy = function() {\\n    return copy(scale, sequentialPow()).exponent(scale.exponent());\\n  };\\n\\n  return initInterpolator.apply(scale, arguments);\\n}\\n\\nexport function sequentialSqrt() {\\n  return sequentialPow.apply(null, arguments).exponent(0.5);\\n}\\n\",\"import {ascending, bisect} from \\\"d3-array\\\";\\nimport {identity} from \\\"./continuous\\\";\\nimport {initInterpolator} from \\\"./init\\\";\\n\\nexport default function sequentialQuantile() {\\n  var domain = [],\\n      interpolator = identity;\\n\\n  function scale(x) {\\n    if (!isNaN(x = +x)) return interpolator((bisect(domain, x) - 1) / (domain.length - 1));\\n  }\\n\\n  scale.domain = function(_) {\\n    if (!arguments.length) return domain.slice();\\n    domain = [];\\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\\n    domain.sort(ascending);\\n    return scale;\\n  };\\n\\n  scale.interpolator = function(_) {\\n    return arguments.length ? (interpolator = _, scale) : interpolator;\\n  };\\n\\n  scale.copy = function() {\\n    return sequentialQuantile(interpolator).domain(domain);\\n  };\\n\\n  return initInterpolator.apply(scale, arguments);\\n}\\n\",\"import {identity} from \\\"./continuous\\\";\\nimport {initInterpolator} from \\\"./init\\\";\\nimport {linearish} from \\\"./linear\\\";\\nimport {loggish} from \\\"./log\\\";\\nimport {copy} from \\\"./sequential\\\";\\nimport {symlogish} from \\\"./symlog\\\";\\nimport {powish} from \\\"./pow\\\";\\n\\nfunction transformer() {\\n  var x0 = 0,\\n      x1 = 0.5,\\n      x2 = 1,\\n      t0,\\n      t1,\\n      t2,\\n      k10,\\n      k21,\\n      interpolator = identity,\\n      transform,\\n      clamp = false,\\n      unknown;\\n\\n  function scale(x) {\\n    return isNaN(x = +x) ? unknown : (x = 0.5 + ((x = +transform(x)) - t1) * (x < t1 ? k10 : k21), interpolator(clamp ? Math.max(0, Math.min(1, x)) : x));\\n  }\\n\\n  scale.domain = function(_) {\\n    return arguments.length ? (t0 = transform(x0 = +_[0]), t1 = transform(x1 = +_[1]), t2 = transform(x2 = +_[2]), k10 = t0 === t1 ? 0 : 0.5 / (t1 - t0), k21 = t1 === t2 ? 0 : 0.5 / (t2 - t1), scale) : [x0, x1, x2];\\n  };\\n\\n  scale.clamp = function(_) {\\n    return arguments.length ? (clamp = !!_, scale) : clamp;\\n  };\\n\\n  scale.interpolator = function(_) {\\n    return arguments.length ? (interpolator = _, scale) : interpolator;\\n  };\\n\\n  scale.unknown = function(_) {\\n    return arguments.length ? (unknown = _, scale) : unknown;\\n  };\\n\\n  return function(t) {\\n    transform = t, t0 = t(x0), t1 = t(x1), t2 = t(x2), k10 = t0 === t1 ? 0 : 0.5 / (t1 - t0), k21 = t1 === t2 ? 0 : 0.5 / (t2 - t1);\\n    return scale;\\n  };\\n}\\n\\nexport default function diverging() {\\n  var scale = linearish(transformer()(identity));\\n\\n  scale.copy = function() {\\n    return copy(scale, diverging());\\n  };\\n\\n  return initInterpolator.apply(scale, arguments);\\n}\\n\\nexport function divergingLog() {\\n  var scale = loggish(transformer()).domain([0.1, 1, 10]);\\n\\n  scale.copy = function() {\\n    return copy(scale, divergingLog()).base(scale.base());\\n  };\\n\\n  return initInterpolator.apply(scale, arguments);\\n}\\n\\nexport function divergingSymlog() {\\n  var scale = symlogish(transformer());\\n\\n  scale.copy = function() {\\n    return copy(scale, divergingSymlog()).constant(scale.constant());\\n  };\\n\\n  return initInterpolator.apply(scale, arguments);\\n}\\n\\nexport function divergingPow() {\\n  var scale = powish(transformer());\\n\\n  scale.copy = function() {\\n    return copy(scale, divergingPow()).exponent(scale.exponent());\\n  };\\n\\n  return initInterpolator.apply(scale, arguments);\\n}\\n\\nexport function divergingSqrt() {\\n  return divergingPow.apply(null, arguments).exponent(0.5);\\n}\\n\",\"export default function(specifier) {\\n  var n = specifier.length / 6 | 0, colors = new Array(n), i = 0;\\n  while (i < n) colors[i] = \\\"#\\\" + specifier.slice(i * 6, ++i * 6);\\n  return colors;\\n}\\n\",\"import colors from \\\"../colors\\\";\\n\\nexport default colors(\\\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\\\");\\n\",\"import colors from \\\"../colors\\\";\\n\\nexport default colors(\\\"7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666\\\");\\n\",\"import colors from \\\"../colors\\\";\\n\\nexport default colors(\\\"1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666\\\");\\n\",\"import colors from \\\"../colors\\\";\\n\\nexport default colors(\\\"a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928\\\");\\n\",\"import colors from \\\"../colors\\\";\\n\\nexport default colors(\\\"fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2\\\");\\n\",\"import colors from \\\"../colors\\\";\\n\\nexport default colors(\\\"b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc\\\");\\n\",\"import colors from \\\"../colors\\\";\\n\\nexport default colors(\\\"e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999\\\");\\n\",\"import colors from \\\"../colors\\\";\\n\\nexport default colors(\\\"66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3\\\");\\n\",\"import colors from \\\"../colors\\\";\\n\\nexport default colors(\\\"8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f\\\");\\n\",\"import {interpolateRgbBasis} from \\\"d3-interpolate\\\";\\n\\nexport default function(scheme) {\\n  return interpolateRgbBasis(scheme[scheme.length - 1]);\\n}\\n\",\"import colors from \\\"../colors\\\";\\nimport ramp from \\\"../ramp\\\";\\n\\nexport var scheme = new Array(3).concat(\\n  \\\"d8b365f5f5f55ab4ac\\\",\\n  \\\"a6611adfc27d80cdc1018571\\\",\\n  \\\"a6611adfc27df5f5f580cdc1018571\\\",\\n  \\\"8c510ad8b365f6e8c3c7eae55ab4ac01665e\\\",\\n  \\\"8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e\\\",\\n  \\\"8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e\\\",\\n  \\\"8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e\\\",\\n  \\\"5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30\\\",\\n  \\\"5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30\\\"\\n).map(colors);\\n\\nexport default ramp(scheme);\\n\",\"import colors from \\\"../colors\\\";\\nimport ramp from \\\"../ramp\\\";\\n\\nexport var scheme = new Array(3).concat(\\n  \\\"af8dc3f7f7f77fbf7b\\\",\\n  \\\"7b3294c2a5cfa6dba0008837\\\",\\n  \\\"7b3294c2a5cff7f7f7a6dba0008837\\\",\\n  \\\"762a83af8dc3e7d4e8d9f0d37fbf7b1b7837\\\",\\n  \\\"762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837\\\",\\n  \\\"762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837\\\",\\n  \\\"762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837\\\",\\n  \\\"40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b\\\",\\n  \\\"40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b\\\"\\n).map(colors);\\n\\nexport default ramp(scheme);\\n\",\"import colors from \\\"../colors\\\";\\nimport ramp from \\\"../ramp\\\";\\n\\nexport var scheme = new Array(3).concat(\\n  \\\"e9a3c9f7f7f7a1d76a\\\",\\n  \\\"d01c8bf1b6dab8e1864dac26\\\",\\n  \\\"d01c8bf1b6daf7f7f7b8e1864dac26\\\",\\n  \\\"c51b7de9a3c9fde0efe6f5d0a1d76a4d9221\\\",\\n  \\\"c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221\\\",\\n  \\\"c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221\\\",\\n  \\\"c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221\\\",\\n  \\\"8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419\\\",\\n  \\\"8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419\\\"\\n).map(colors);\\n\\nexport default ramp(scheme);\\n\",\"import colors from \\\"../colors\\\";\\nimport ramp from \\\"../ramp\\\";\\n\\nexport var scheme = new Array(3).concat(\\n  \\\"998ec3f7f7f7f1a340\\\",\\n  \\\"5e3c99b2abd2fdb863e66101\\\",\\n  \\\"5e3c99b2abd2f7f7f7fdb863e66101\\\",\\n  \\\"542788998ec3d8daebfee0b6f1a340b35806\\\",\\n  \\\"542788998ec3d8daebf7f7f7fee0b6f1a340b35806\\\",\\n  \\\"5427888073acb2abd2d8daebfee0b6fdb863e08214b35806\\\",\\n  \\\"5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806\\\",\\n  \\\"2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08\\\",\\n  \\\"2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08\\\"\\n).map(colors);\\n\\nexport default ramp(scheme);\\n\",\"import colors from \\\"../colors\\\";\\nimport ramp from \\\"../ramp\\\";\\n\\nexport var scheme = new Array(3).concat(\\n  \\\"ef8a62f7f7f767a9cf\\\",\\n  \\\"ca0020f4a58292c5de0571b0\\\",\\n  \\\"ca0020f4a582f7f7f792c5de0571b0\\\",\\n  \\\"b2182bef8a62fddbc7d1e5f067a9cf2166ac\\\",\\n  \\\"b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac\\\",\\n  \\\"b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac\\\",\\n  \\\"b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac\\\",\\n  \\\"67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061\\\",\\n  \\\"67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061\\\"\\n).map(colors);\\n\\nexport default ramp(scheme);\\n\",\"import colors from \\\"../colors\\\";\\nimport ramp from \\\"../ramp\\\";\\n\\nexport var scheme = new Array(3).concat(\\n  \\\"ef8a62ffffff999999\\\",\\n  \\\"ca0020f4a582bababa404040\\\",\\n  \\\"ca0020f4a582ffffffbababa404040\\\",\\n  \\\"b2182bef8a62fddbc7e0e0e09999994d4d4d\\\",\\n  \\\"b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d\\\",\\n  \\\"b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d\\\",\\n  \\\"b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d\\\",\\n  \\\"67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a\\\",\\n  \\\"67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a\\\"\\n).map(colors);\\n\\nexport default ramp(scheme);\\n\",\"import colors from \\\"../colors\\\";\\nimport ramp from \\\"../ramp\\\";\\n\\nexport var scheme = new Array(3).concat(\\n  \\\"fc8d59ffffbf91bfdb\\\",\\n  \\\"d7191cfdae61abd9e92c7bb6\\\",\\n  \\\"d7191cfdae61ffffbfabd9e92c7bb6\\\",\\n  \\\"d73027fc8d59fee090e0f3f891bfdb4575b4\\\",\\n  \\\"d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4\\\",\\n  \\\"d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4\\\",\\n  \\\"d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4\\\",\\n  \\\"a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695\\\",\\n  \\\"a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695\\\"\\n).map(colors);\\n\\nexport default ramp(scheme);\\n\",\"import colors from \\\"../colors\\\";\\nimport ramp from \\\"../ramp\\\";\\n\\nexport var scheme = new Array(3).concat(\\n  \\\"fc8d59ffffbf91cf60\\\",\\n  \\\"d7191cfdae61a6d96a1a9641\\\",\\n  \\\"d7191cfdae61ffffbfa6d96a1a9641\\\",\\n  \\\"d73027fc8d59fee08bd9ef8b91cf601a9850\\\",\\n  \\\"d73027fc8d59fee08bffffbfd9ef8b91cf601a9850\\\",\\n  \\\"d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850\\\",\\n  \\\"d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850\\\",\\n  \\\"a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837\\\",\\n  \\\"a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837\\\"\\n).map(colors);\\n\\nexport default ramp(scheme);\\n\",\"import colors from \\\"../colors\\\";\\nimport ramp from \\\"../ramp\\\";\\n\\nexport var scheme = new Array(3).concat(\\n  \\\"fc8d59ffffbf99d594\\\",\\n  \\\"d7191cfdae61abdda42b83ba\\\",\\n  \\\"d7191cfdae61ffffbfabdda42b83ba\\\",\\n  \\\"d53e4ffc8d59fee08be6f59899d5943288bd\\\",\\n  \\\"d53e4ffc8d59fee08bffffbfe6f59899d5943288bd\\\",\\n  \\\"d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd\\\",\\n  \\\"d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd\\\",\\n  \\\"9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2\\\",\\n  \\\"9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2\\\"\\n).map(colors);\\n\\nexport default ramp(scheme);\\n\",\"import colors from \\\"../colors\\\";\\nimport ramp from \\\"../ramp\\\";\\n\\nexport var scheme = new Array(3).concat(\\n  \\\"e5f5f999d8c92ca25f\\\",\\n  \\\"edf8fbb2e2e266c2a4238b45\\\",\\n  \\\"edf8fbb2e2e266c2a42ca25f006d2c\\\",\\n  \\\"edf8fbccece699d8c966c2a42ca25f006d2c\\\",\\n  \\\"edf8fbccece699d8c966c2a441ae76238b45005824\\\",\\n  \\\"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824\\\",\\n  \\\"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b\\\"\\n).map(colors);\\n\\nexport default ramp(scheme);\\n\",\"import colors from \\\"../colors\\\";\\nimport ramp from \\\"../ramp\\\";\\n\\nexport var scheme = new Array(3).concat(\\n  \\\"e0ecf49ebcda8856a7\\\",\\n  \\\"edf8fbb3cde38c96c688419d\\\",\\n  \\\"edf8fbb3cde38c96c68856a7810f7c\\\",\\n  \\\"edf8fbbfd3e69ebcda8c96c68856a7810f7c\\\",\\n  \\\"edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b\\\",\\n  \\\"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b\\\",\\n  \\\"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b\\\"\\n).map(colors);\\n\\nexport default ramp(scheme);\\n\",\"import colors from \\\"../colors\\\";\\nimport ramp from \\\"../ramp\\\";\\n\\nexport var scheme = new Array(3).concat(\\n  \\\"e0f3dba8ddb543a2ca\\\",\\n  \\\"f0f9e8bae4bc7bccc42b8cbe\\\",\\n  \\\"f0f9e8bae4bc7bccc443a2ca0868ac\\\",\\n  \\\"f0f9e8ccebc5a8ddb57bccc443a2ca0868ac\\\",\\n  \\\"f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e\\\",\\n  \\\"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e\\\",\\n  \\\"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081\\\"\\n).map(colors);\\n\\nexport default ramp(scheme);\\n\",\"import colors from \\\"../colors\\\";\\nimport ramp from \\\"../ramp\\\";\\n\\nexport var scheme = new Array(3).concat(\\n  \\\"fee8c8fdbb84e34a33\\\",\\n  \\\"fef0d9fdcc8afc8d59d7301f\\\",\\n  \\\"fef0d9fdcc8afc8d59e34a33b30000\\\",\\n  \\\"fef0d9fdd49efdbb84fc8d59e34a33b30000\\\",\\n  \\\"fef0d9fdd49efdbb84fc8d59ef6548d7301f990000\\\",\\n  \\\"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000\\\",\\n  \\\"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000\\\"\\n).map(colors);\\n\\nexport default ramp(scheme);\\n\",\"import colors from \\\"../colors\\\";\\nimport ramp from \\\"../ramp\\\";\\n\\nexport var scheme = new Array(3).concat(\\n  \\\"ece2f0a6bddb1c9099\\\",\\n  \\\"f6eff7bdc9e167a9cf02818a\\\",\\n  \\\"f6eff7bdc9e167a9cf1c9099016c59\\\",\\n  \\\"f6eff7d0d1e6a6bddb67a9cf1c9099016c59\\\",\\n  \\\"f6eff7d0d1e6a6bddb67a9cf3690c002818a016450\\\",\\n  \\\"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450\\\",\\n  \\\"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636\\\"\\n).map(colors);\\n\\nexport default ramp(scheme);\\n\",\"import colors from \\\"../colors\\\";\\nimport ramp from \\\"../ramp\\\";\\n\\nexport var scheme = new Array(3).concat(\\n  \\\"ece7f2a6bddb2b8cbe\\\",\\n  \\\"f1eef6bdc9e174a9cf0570b0\\\",\\n  \\\"f1eef6bdc9e174a9cf2b8cbe045a8d\\\",\\n  \\\"f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d\\\",\\n  \\\"f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b\\\",\\n  \\\"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b\\\",\\n  \\\"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858\\\"\\n).map(colors);\\n\\nexport default ramp(scheme);\\n\",\"import colors from \\\"../colors\\\";\\nimport ramp from \\\"../ramp\\\";\\n\\nexport var scheme = new Array(3).concat(\\n  \\\"e7e1efc994c7dd1c77\\\",\\n  \\\"f1eef6d7b5d8df65b0ce1256\\\",\\n  \\\"f1eef6d7b5d8df65b0dd1c77980043\\\",\\n  \\\"f1eef6d4b9dac994c7df65b0dd1c77980043\\\",\\n  \\\"f1eef6d4b9dac994c7df65b0e7298ace125691003f\\\",\\n  \\\"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f\\\",\\n  \\\"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f\\\"\\n).map(colors);\\n\\nexport default ramp(scheme);\\n\",\"import colors from \\\"../colors\\\";\\nimport ramp from \\\"../ramp\\\";\\n\\nexport var scheme = new Array(3).concat(\\n  \\\"fde0ddfa9fb5c51b8a\\\",\\n  \\\"feebe2fbb4b9f768a1ae017e\\\",\\n  \\\"feebe2fbb4b9f768a1c51b8a7a0177\\\",\\n  \\\"feebe2fcc5c0fa9fb5f768a1c51b8a7a0177\\\",\\n  \\\"feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177\\\",\\n  \\\"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177\\\",\\n  \\\"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a\\\"\\n).map(colors);\\n\\nexport default ramp(scheme);\\n\",\"import colors from \\\"../colors\\\";\\nimport ramp from \\\"../ramp\\\";\\n\\nexport var scheme = new Array(3).concat(\\n  \\\"edf8b17fcdbb2c7fb8\\\",\\n  \\\"ffffcca1dab441b6c4225ea8\\\",\\n  \\\"ffffcca1dab441b6c42c7fb8253494\\\",\\n  \\\"ffffccc7e9b47fcdbb41b6c42c7fb8253494\\\",\\n  \\\"ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84\\\",\\n  \\\"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84\\\",\\n  \\\"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58\\\"\\n).map(colors);\\n\\nexport default ramp(scheme);\\n\",\"import colors from \\\"../colors\\\";\\nimport ramp from \\\"../ramp\\\";\\n\\nexport var scheme = new Array(3).concat(\\n  \\\"f7fcb9addd8e31a354\\\",\\n  \\\"ffffccc2e69978c679238443\\\",\\n  \\\"ffffccc2e69978c67931a354006837\\\",\\n  \\\"ffffccd9f0a3addd8e78c67931a354006837\\\",\\n  \\\"ffffccd9f0a3addd8e78c67941ab5d238443005a32\\\",\\n  \\\"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32\\\",\\n  \\\"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529\\\"\\n).map(colors);\\n\\nexport default ramp(scheme);\\n\",\"import colors from \\\"../colors\\\";\\nimport ramp from \\\"../ramp\\\";\\n\\nexport var scheme = new Array(3).concat(\\n  \\\"fff7bcfec44fd95f0e\\\",\\n  \\\"ffffd4fed98efe9929cc4c02\\\",\\n  \\\"ffffd4fed98efe9929d95f0e993404\\\",\\n  \\\"ffffd4fee391fec44ffe9929d95f0e993404\\\",\\n  \\\"ffffd4fee391fec44ffe9929ec7014cc4c028c2d04\\\",\\n  \\\"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04\\\",\\n  \\\"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506\\\"\\n).map(colors);\\n\\nexport default ramp(scheme);\\n\",\"import colors from \\\"../colors\\\";\\nimport ramp from \\\"../ramp\\\";\\n\\nexport var scheme = new Array(3).concat(\\n  \\\"ffeda0feb24cf03b20\\\",\\n  \\\"ffffb2fecc5cfd8d3ce31a1c\\\",\\n  \\\"ffffb2fecc5cfd8d3cf03b20bd0026\\\",\\n  \\\"ffffb2fed976feb24cfd8d3cf03b20bd0026\\\",\\n  \\\"ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026\\\",\\n  \\\"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026\\\",\\n  \\\"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026\\\"\\n).map(colors);\\n\\nexport default ramp(scheme);\\n\",\"import colors from \\\"../colors\\\";\\nimport ramp from \\\"../ramp\\\";\\n\\nexport var scheme = new Array(3).concat(\\n  \\\"deebf79ecae13182bd\\\",\\n  \\\"eff3ffbdd7e76baed62171b5\\\",\\n  \\\"eff3ffbdd7e76baed63182bd08519c\\\",\\n  \\\"eff3ffc6dbef9ecae16baed63182bd08519c\\\",\\n  \\\"eff3ffc6dbef9ecae16baed64292c62171b5084594\\\",\\n  \\\"f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594\\\",\\n  \\\"f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b\\\"\\n).map(colors);\\n\\nexport default ramp(scheme);\\n\",\"import colors from \\\"../colors\\\";\\nimport ramp from \\\"../ramp\\\";\\n\\nexport var scheme = new Array(3).concat(\\n  \\\"e5f5e0a1d99b31a354\\\",\\n  \\\"edf8e9bae4b374c476238b45\\\",\\n  \\\"edf8e9bae4b374c47631a354006d2c\\\",\\n  \\\"edf8e9c7e9c0a1d99b74c47631a354006d2c\\\",\\n  \\\"edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32\\\",\\n  \\\"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32\\\",\\n  \\\"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b\\\"\\n).map(colors);\\n\\nexport default ramp(scheme);\\n\",\"import colors from \\\"../colors\\\";\\nimport ramp from \\\"../ramp\\\";\\n\\nexport var scheme = new Array(3).concat(\\n  \\\"f0f0f0bdbdbd636363\\\",\\n  \\\"f7f7f7cccccc969696525252\\\",\\n  \\\"f7f7f7cccccc969696636363252525\\\",\\n  \\\"f7f7f7d9d9d9bdbdbd969696636363252525\\\",\\n  \\\"f7f7f7d9d9d9bdbdbd969696737373525252252525\\\",\\n  \\\"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525\\\",\\n  \\\"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000\\\"\\n).map(colors);\\n\\nexport default ramp(scheme);\\n\",\"import colors from \\\"../colors\\\";\\nimport ramp from \\\"../ramp\\\";\\n\\nexport var scheme = new Array(3).concat(\\n  \\\"efedf5bcbddc756bb1\\\",\\n  \\\"f2f0f7cbc9e29e9ac86a51a3\\\",\\n  \\\"f2f0f7cbc9e29e9ac8756bb154278f\\\",\\n  \\\"f2f0f7dadaebbcbddc9e9ac8756bb154278f\\\",\\n  \\\"f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486\\\",\\n  \\\"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486\\\",\\n  \\\"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d\\\"\\n).map(colors);\\n\\nexport default ramp(scheme);\\n\",\"import colors from \\\"../colors\\\";\\nimport ramp from \\\"../ramp\\\";\\n\\nexport var scheme = new Array(3).concat(\\n  \\\"fee0d2fc9272de2d26\\\",\\n  \\\"fee5d9fcae91fb6a4acb181d\\\",\\n  \\\"fee5d9fcae91fb6a4ade2d26a50f15\\\",\\n  \\\"fee5d9fcbba1fc9272fb6a4ade2d26a50f15\\\",\\n  \\\"fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d\\\",\\n  \\\"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d\\\",\\n  \\\"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d\\\"\\n).map(colors);\\n\\nexport default ramp(scheme);\\n\",\"import colors from \\\"../colors\\\";\\nimport ramp from \\\"../ramp\\\";\\n\\nexport var scheme = new Array(3).concat(\\n  \\\"fee6cefdae6be6550d\\\",\\n  \\\"feeddefdbe85fd8d3cd94701\\\",\\n  \\\"feeddefdbe85fd8d3ce6550da63603\\\",\\n  \\\"feeddefdd0a2fdae6bfd8d3ce6550da63603\\\",\\n  \\\"feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04\\\",\\n  \\\"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04\\\",\\n  \\\"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704\\\"\\n).map(colors);\\n\\nexport default ramp(scheme);\\n\",\"import {cubehelix} from \\\"d3-color\\\";\\nimport {interpolateCubehelixLong} from \\\"d3-interpolate\\\";\\n\\nexport default interpolateCubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\\n\",\"import {cubehelix} from \\\"d3-color\\\";\\nimport {interpolateCubehelixLong} from \\\"d3-interpolate\\\";\\n\\nexport var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\\n\\nexport var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\\n\\nvar c = cubehelix();\\n\\nexport default function(t) {\\n  if (t < 0 || t > 1) t -= Math.floor(t);\\n  var ts = Math.abs(t - 0.5);\\n  c.h = 360 * t - 100;\\n  c.s = 1.5 - 1.5 * ts;\\n  c.l = 0.8 - 0.9 * ts;\\n  return c + \\\"\\\";\\n}\\n\",\"import {rgb} from \\\"d3-color\\\";\\n\\nvar c = rgb(),\\n    pi_1_3 = Math.PI / 3,\\n    pi_2_3 = Math.PI * 2 / 3;\\n\\nexport default function(t) {\\n  var x;\\n  t = (0.5 - t) * Math.PI;\\n  c.r = 255 * (x = Math.sin(t)) * x;\\n  c.g = 255 * (x = Math.sin(t + pi_1_3)) * x;\\n  c.b = 255 * (x = Math.sin(t + pi_2_3)) * x;\\n  return c + \\\"\\\";\\n}\\n\",\"import colors from \\\"../colors\\\";\\n\\nfunction ramp(range) {\\n  var n = range.length;\\n  return function(t) {\\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\\n  };\\n}\\n\\nexport default ramp(colors(\\\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\\\"));\\n\\nexport var magma = ramp(colors(\\\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\\\"));\\n\\nexport var inferno = ramp(colors(\\\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\\\"));\\n\\nexport var plasma = ramp(colors(\\\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\\\"));\\n\",\"export default function(x) {\\n  return function constant() {\\n    return x;\\n  };\\n}\\n\",\"export var abs = Math.abs;\\nexport var atan2 = Math.atan2;\\nexport var cos = Math.cos;\\nexport var max = Math.max;\\nexport var min = Math.min;\\nexport var sin = Math.sin;\\nexport var sqrt = Math.sqrt;\\n\\nexport var epsilon = 1e-12;\\nexport var pi = Math.PI;\\nexport var halfPi = pi / 2;\\nexport var tau = 2 * pi;\\n\\nexport function acos(x) {\\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\\n}\\n\\nexport function asin(x) {\\n  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);\\n}\\n\",\"import {path} from \\\"d3-path\\\";\\nimport constant from \\\"./constant\\\";\\nimport {abs, acos, asin, atan2, cos, epsilon, halfPi, max, min, pi, sin, sqrt, tau} from \\\"./math\\\";\\n\\nfunction arcInnerRadius(d) {\\n  return d.innerRadius;\\n}\\n\\nfunction arcOuterRadius(d) {\\n  return d.outerRadius;\\n}\\n\\nfunction arcStartAngle(d) {\\n  return d.startAngle;\\n}\\n\\nfunction arcEndAngle(d) {\\n  return d.endAngle;\\n}\\n\\nfunction arcPadAngle(d) {\\n  return d && d.padAngle; // Note: optional!\\n}\\n\\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\\n  var x10 = x1 - x0, y10 = y1 - y0,\\n      x32 = x3 - x2, y32 = y3 - y2,\\n      t = y32 * x10 - x32 * y10;\\n  if (t * t < epsilon) return;\\n  t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / t;\\n  return [x0 + t * x10, y0 + t * y10];\\n}\\n\\n// Compute perpendicular offset line of length rc.\\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\\n  var x01 = x0 - x1,\\n      y01 = y0 - y1,\\n      lo = (cw ? rc : -rc) / sqrt(x01 * x01 + y01 * y01),\\n      ox = lo * y01,\\n      oy = -lo * x01,\\n      x11 = x0 + ox,\\n      y11 = y0 + oy,\\n      x10 = x1 + ox,\\n      y10 = y1 + oy,\\n      x00 = (x11 + x10) / 2,\\n      y00 = (y11 + y10) / 2,\\n      dx = x10 - x11,\\n      dy = y10 - y11,\\n      d2 = dx * dx + dy * dy,\\n      r = r1 - rc,\\n      D = x11 * y10 - x10 * y11,\\n      d = (dy < 0 ? -1 : 1) * sqrt(max(0, r * r * d2 - D * D)),\\n      cx0 = (D * dy - dx * d) / d2,\\n      cy0 = (-D * dx - dy * d) / d2,\\n      cx1 = (D * dy + dx * d) / d2,\\n      cy1 = (-D * dx + dy * d) / d2,\\n      dx0 = cx0 - x00,\\n      dy0 = cy0 - y00,\\n      dx1 = cx1 - x00,\\n      dy1 = cy1 - y00;\\n\\n  // Pick the closer of the two intersection points.\\n  // TODO Is there a faster way to determine which intersection to use?\\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\\n\\n  return {\\n    cx: cx0,\\n    cy: cy0,\\n    x01: -ox,\\n    y01: -oy,\\n    x11: cx0 * (r1 / r - 1),\\n    y11: cy0 * (r1 / r - 1)\\n  };\\n}\\n\\nexport default function() {\\n  var innerRadius = arcInnerRadius,\\n      outerRadius = arcOuterRadius,\\n      cornerRadius = constant(0),\\n      padRadius = null,\\n      startAngle = arcStartAngle,\\n      endAngle = arcEndAngle,\\n      padAngle = arcPadAngle,\\n      context = null;\\n\\n  function arc() {\\n    var buffer,\\n        r,\\n        r0 = +innerRadius.apply(this, arguments),\\n        r1 = +outerRadius.apply(this, arguments),\\n        a0 = startAngle.apply(this, arguments) - halfPi,\\n        a1 = endAngle.apply(this, arguments) - halfPi,\\n        da = abs(a1 - a0),\\n        cw = a1 > a0;\\n\\n    if (!context) context = buffer = path();\\n\\n    // Ensure that the outer radius is always larger than the inner radius.\\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\\n\\n    // Is it a point?\\n    if (!(r1 > epsilon)) context.moveTo(0, 0);\\n\\n    // Or is it a circle or annulus?\\n    else if (da > tau - epsilon) {\\n      context.moveTo(r1 * cos(a0), r1 * sin(a0));\\n      context.arc(0, 0, r1, a0, a1, !cw);\\n      if (r0 > epsilon) {\\n        context.moveTo(r0 * cos(a1), r0 * sin(a1));\\n        context.arc(0, 0, r0, a1, a0, cw);\\n      }\\n    }\\n\\n    // Or is it a circular or annular sector?\\n    else {\\n      var a01 = a0,\\n          a11 = a1,\\n          a00 = a0,\\n          a10 = a1,\\n          da0 = da,\\n          da1 = da,\\n          ap = padAngle.apply(this, arguments) / 2,\\n          rp = (ap > epsilon) && (padRadius ? +padRadius.apply(this, arguments) : sqrt(r0 * r0 + r1 * r1)),\\n          rc = min(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\\n          rc0 = rc,\\n          rc1 = rc,\\n          t0,\\n          t1;\\n\\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\\n      if (rp > epsilon) {\\n        var p0 = asin(rp / r0 * sin(ap)),\\n            p1 = asin(rp / r1 * sin(ap));\\n        if ((da0 -= p0 * 2) > epsilon) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\\n        if ((da1 -= p1 * 2) > epsilon) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\\n      }\\n\\n      var x01 = r1 * cos(a01),\\n          y01 = r1 * sin(a01),\\n          x10 = r0 * cos(a10),\\n          y10 = r0 * sin(a10);\\n\\n      // Apply rounded corners?\\n      if (rc > epsilon) {\\n        var x11 = r1 * cos(a11),\\n            y11 = r1 * sin(a11),\\n            x00 = r0 * cos(a00),\\n            y00 = r0 * sin(a00),\\n            oc;\\n\\n        // Restrict the corner radius according to the sector angle.\\n        if (da < pi && (oc = intersect(x01, y01, x00, y00, x11, y11, x10, y10))) {\\n          var ax = x01 - oc[0],\\n              ay = y01 - oc[1],\\n              bx = x11 - oc[0],\\n              by = y11 - oc[1],\\n              kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt(ax * ax + ay * ay) * sqrt(bx * bx + by * by))) / 2),\\n              lc = sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\\n          rc0 = min(rc, (r0 - lc) / (kc - 1));\\n          rc1 = min(rc, (r1 - lc) / (kc + 1));\\n        }\\n      }\\n\\n      // Is the sector collapsed to a line?\\n      if (!(da1 > epsilon)) context.moveTo(x01, y01);\\n\\n      // Does the sector’s outer ring have rounded corners?\\n      else if (rc1 > epsilon) {\\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\\n\\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\\n\\n        // Have the corners merged?\\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\\n\\n        // Otherwise, draw the two corners and the ring.\\n        else {\\n          context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\\n          context.arc(0, 0, r1, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\\n          context.arc(t1.cx, t1.cy, rc1, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\\n        }\\n      }\\n\\n      // Or is the outer ring just a circular arc?\\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\\n\\n      // Is there no inner ring, and it’s a circular sector?\\n      // Or perhaps it’s an annular sector collapsed due to padding?\\n      if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10);\\n\\n      // Does the sector’s inner ring (or point) have rounded corners?\\n      else if (rc0 > epsilon) {\\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\\n\\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\\n\\n        // Have the corners merged?\\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\\n\\n        // Otherwise, draw the two corners and the ring.\\n        else {\\n          context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\\n          context.arc(0, 0, r0, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\\n          context.arc(t1.cx, t1.cy, rc0, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\\n        }\\n      }\\n\\n      // Or is the inner ring just a circular arc?\\n      else context.arc(0, 0, r0, a10, a00, cw);\\n    }\\n\\n    context.closePath();\\n\\n    if (buffer) return context = null, buffer + \\\"\\\" || null;\\n  }\\n\\n  arc.centroid = function() {\\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;\\n    return [cos(a) * r, sin(a) * r];\\n  };\\n\\n  arc.innerRadius = function(_) {\\n    return arguments.length ? (innerRadius = typeof _ === \\\"function\\\" ? _ : constant(+_), arc) : innerRadius;\\n  };\\n\\n  arc.outerRadius = function(_) {\\n    return arguments.length ? (outerRadius = typeof _ === \\\"function\\\" ? _ : constant(+_), arc) : outerRadius;\\n  };\\n\\n  arc.cornerRadius = function(_) {\\n    return arguments.length ? (cornerRadius = typeof _ === \\\"function\\\" ? _ : constant(+_), arc) : cornerRadius;\\n  };\\n\\n  arc.padRadius = function(_) {\\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \\\"function\\\" ? _ : constant(+_), arc) : padRadius;\\n  };\\n\\n  arc.startAngle = function(_) {\\n    return arguments.length ? (startAngle = typeof _ === \\\"function\\\" ? _ : constant(+_), arc) : startAngle;\\n  };\\n\\n  arc.endAngle = function(_) {\\n    return arguments.length ? (endAngle = typeof _ === \\\"function\\\" ? _ : constant(+_), arc) : endAngle;\\n  };\\n\\n  arc.padAngle = function(_) {\\n    return arguments.length ? (padAngle = typeof _ === \\\"function\\\" ? _ : constant(+_), arc) : padAngle;\\n  };\\n\\n  arc.context = function(_) {\\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\\n  };\\n\\n  return arc;\\n}\\n\",\"function Linear(context) {\\n  this._context = context;\\n}\\n\\nLinear.prototype = {\\n  areaStart: function() {\\n    this._line = 0;\\n  },\\n  areaEnd: function() {\\n    this._line = NaN;\\n  },\\n  lineStart: function() {\\n    this._point = 0;\\n  },\\n  lineEnd: function() {\\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\\n    this._line = 1 - this._line;\\n  },\\n  point: function(x, y) {\\n    x = +x, y = +y;\\n    switch (this._point) {\\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\\n      case 1: this._point = 2; // proceed\\n      default: this._context.lineTo(x, y); break;\\n    }\\n  }\\n};\\n\\nexport default function(context) {\\n  return new Linear(context);\\n}\\n\",\"export function x(p) {\\n  return p[0];\\n}\\n\\nexport function y(p) {\\n  return p[1];\\n}\\n\",\"import {path} from \\\"d3-path\\\";\\nimport constant from \\\"./constant\\\";\\nimport curveLinear from \\\"./curve/linear\\\";\\nimport {x as pointX, y as pointY} from \\\"./point\\\";\\n\\nexport default function() {\\n  var x = pointX,\\n      y = pointY,\\n      defined = constant(true),\\n      context = null,\\n      curve = curveLinear,\\n      output = null;\\n\\n  function line(data) {\\n    var i,\\n        n = data.length,\\n        d,\\n        defined0 = false,\\n        buffer;\\n\\n    if (context == null) output = curve(buffer = path());\\n\\n    for (i = 0; i <= n; ++i) {\\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\\n        if (defined0 = !defined0) output.lineStart();\\n        else output.lineEnd();\\n      }\\n      if (defined0) output.point(+x(d, i, data), +y(d, i, data));\\n    }\\n\\n    if (buffer) return output = null, buffer + \\\"\\\" || null;\\n  }\\n\\n  line.x = function(_) {\\n    return arguments.length ? (x = typeof _ === \\\"function\\\" ? _ : constant(+_), line) : x;\\n  };\\n\\n  line.y = function(_) {\\n    return arguments.length ? (y = typeof _ === \\\"function\\\" ? _ : constant(+_), line) : y;\\n  };\\n\\n  line.defined = function(_) {\\n    return arguments.length ? (defined = typeof _ === \\\"function\\\" ? _ : constant(!!_), line) : defined;\\n  };\\n\\n  line.curve = function(_) {\\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\\n  };\\n\\n  line.context = function(_) {\\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\\n  };\\n\\n  return line;\\n}\\n\",\"import {path} from \\\"d3-path\\\";\\nimport constant from \\\"./constant\\\";\\nimport curveLinear from \\\"./curve/linear\\\";\\nimport line from \\\"./line\\\";\\nimport {x as pointX, y as pointY} from \\\"./point\\\";\\n\\nexport default function() {\\n  var x0 = pointX,\\n      x1 = null,\\n      y0 = constant(0),\\n      y1 = pointY,\\n      defined = constant(true),\\n      context = null,\\n      curve = curveLinear,\\n      output = null;\\n\\n  function area(data) {\\n    var i,\\n        j,\\n        k,\\n        n = data.length,\\n        d,\\n        defined0 = false,\\n        buffer,\\n        x0z = new Array(n),\\n        y0z = new Array(n);\\n\\n    if (context == null) output = curve(buffer = path());\\n\\n    for (i = 0; i <= n; ++i) {\\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\\n        if (defined0 = !defined0) {\\n          j = i;\\n          output.areaStart();\\n          output.lineStart();\\n        } else {\\n          output.lineEnd();\\n          output.lineStart();\\n          for (k = i - 1; k >= j; --k) {\\n            output.point(x0z[k], y0z[k]);\\n          }\\n          output.lineEnd();\\n          output.areaEnd();\\n        }\\n      }\\n      if (defined0) {\\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\\n      }\\n    }\\n\\n    if (buffer) return output = null, buffer + \\\"\\\" || null;\\n  }\\n\\n  function arealine() {\\n    return line().defined(defined).curve(curve).context(context);\\n  }\\n\\n  area.x = function(_) {\\n    return arguments.length ? (x0 = typeof _ === \\\"function\\\" ? _ : constant(+_), x1 = null, area) : x0;\\n  };\\n\\n  area.x0 = function(_) {\\n    return arguments.length ? (x0 = typeof _ === \\\"function\\\" ? _ : constant(+_), area) : x0;\\n  };\\n\\n  area.x1 = function(_) {\\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \\\"function\\\" ? _ : constant(+_), area) : x1;\\n  };\\n\\n  area.y = function(_) {\\n    return arguments.length ? (y0 = typeof _ === \\\"function\\\" ? _ : constant(+_), y1 = null, area) : y0;\\n  };\\n\\n  area.y0 = function(_) {\\n    return arguments.length ? (y0 = typeof _ === \\\"function\\\" ? _ : constant(+_), area) : y0;\\n  };\\n\\n  area.y1 = function(_) {\\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \\\"function\\\" ? _ : constant(+_), area) : y1;\\n  };\\n\\n  area.lineX0 =\\n  area.lineY0 = function() {\\n    return arealine().x(x0).y(y0);\\n  };\\n\\n  area.lineY1 = function() {\\n    return arealine().x(x0).y(y1);\\n  };\\n\\n  area.lineX1 = function() {\\n    return arealine().x(x1).y(y0);\\n  };\\n\\n  area.defined = function(_) {\\n    return arguments.length ? (defined = typeof _ === \\\"function\\\" ? _ : constant(!!_), area) : defined;\\n  };\\n\\n  area.curve = function(_) {\\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\\n  };\\n\\n  area.context = function(_) {\\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\\n  };\\n\\n  return area;\\n}\\n\",\"export default function(a, b) {\\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\\n}\\n\",\"export default function(d) {\\n  return d;\\n}\\n\",\"import constant from \\\"./constant\\\";\\nimport descending from \\\"./descending\\\";\\nimport identity from \\\"./identity\\\";\\nimport {tau} from \\\"./math\\\";\\n\\nexport default function() {\\n  var value = identity,\\n      sortValues = descending,\\n      sort = null,\\n      startAngle = constant(0),\\n      endAngle = constant(tau),\\n      padAngle = constant(0);\\n\\n  function pie(data) {\\n    var i,\\n        n = data.length,\\n        j,\\n        k,\\n        sum = 0,\\n        index = new Array(n),\\n        arcs = new Array(n),\\n        a0 = +startAngle.apply(this, arguments),\\n        da = Math.min(tau, Math.max(-tau, endAngle.apply(this, arguments) - a0)),\\n        a1,\\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\\n        pa = p * (da < 0 ? -1 : 1),\\n        v;\\n\\n    for (i = 0; i < n; ++i) {\\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\\n        sum += v;\\n      }\\n    }\\n\\n    // Optionally sort the arcs by previously-computed values or by data.\\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\\n\\n    // Compute the arcs! They are stored in the original data's order.\\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\\n        data: data[j],\\n        index: i,\\n        value: v,\\n        startAngle: a0,\\n        endAngle: a1,\\n        padAngle: p\\n      };\\n    }\\n\\n    return arcs;\\n  }\\n\\n  pie.value = function(_) {\\n    return arguments.length ? (value = typeof _ === \\\"function\\\" ? _ : constant(+_), pie) : value;\\n  };\\n\\n  pie.sortValues = function(_) {\\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\\n  };\\n\\n  pie.sort = function(_) {\\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\\n  };\\n\\n  pie.startAngle = function(_) {\\n    return arguments.length ? (startAngle = typeof _ === \\\"function\\\" ? _ : constant(+_), pie) : startAngle;\\n  };\\n\\n  pie.endAngle = function(_) {\\n    return arguments.length ? (endAngle = typeof _ === \\\"function\\\" ? _ : constant(+_), pie) : endAngle;\\n  };\\n\\n  pie.padAngle = function(_) {\\n    return arguments.length ? (padAngle = typeof _ === \\\"function\\\" ? _ : constant(+_), pie) : padAngle;\\n  };\\n\\n  return pie;\\n}\\n\",\"import curveLinear from \\\"./linear\\\";\\n\\nexport var curveRadialLinear = curveRadial(curveLinear);\\n\\nfunction Radial(curve) {\\n  this._curve = curve;\\n}\\n\\nRadial.prototype = {\\n  areaStart: function() {\\n    this._curve.areaStart();\\n  },\\n  areaEnd: function() {\\n    this._curve.areaEnd();\\n  },\\n  lineStart: function() {\\n    this._curve.lineStart();\\n  },\\n  lineEnd: function() {\\n    this._curve.lineEnd();\\n  },\\n  point: function(a, r) {\\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\\n  }\\n};\\n\\nexport default function curveRadial(curve) {\\n\\n  function radial(context) {\\n    return new Radial(curve(context));\\n  }\\n\\n  radial._curve = curve;\\n\\n  return radial;\\n}\\n\",\"import curveRadial, {curveRadialLinear} from \\\"./curve/radial\\\";\\nimport line from \\\"./line\\\";\\n\\nexport function lineRadial(l) {\\n  var c = l.curve;\\n\\n  l.angle = l.x, delete l.x;\\n  l.radius = l.y, delete l.y;\\n\\n  l.curve = function(_) {\\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\\n  };\\n\\n  return l;\\n}\\n\\nexport default function() {\\n  return lineRadial(line().curve(curveRadialLinear));\\n}\\n\",\"import curveRadial, {curveRadialLinear} from \\\"./curve/radial\\\";\\nimport area from \\\"./area\\\";\\nimport {lineRadial} from \\\"./lineRadial\\\"\\n\\nexport default function() {\\n  var a = area().curve(curveRadialLinear),\\n      c = a.curve,\\n      x0 = a.lineX0,\\n      x1 = a.lineX1,\\n      y0 = a.lineY0,\\n      y1 = a.lineY1;\\n\\n  a.angle = a.x, delete a.x;\\n  a.startAngle = a.x0, delete a.x0;\\n  a.endAngle = a.x1, delete a.x1;\\n  a.radius = a.y, delete a.y;\\n  a.innerRadius = a.y0, delete a.y0;\\n  a.outerRadius = a.y1, delete a.y1;\\n  a.lineStartAngle = function() { return lineRadial(x0()); }, delete a.lineX0;\\n  a.lineEndAngle = function() { return lineRadial(x1()); }, delete a.lineX1;\\n  a.lineInnerRadius = function() { return lineRadial(y0()); }, delete a.lineY0;\\n  a.lineOuterRadius = function() { return lineRadial(y1()); }, delete a.lineY1;\\n\\n  a.curve = function(_) {\\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\\n  };\\n\\n  return a;\\n}\\n\",\"export default function(x, y) {\\n  return [(y = +y) * Math.cos(x -= Math.PI / 2), y * Math.sin(x)];\\n}\\n\",\"export var slice = Array.prototype.slice;\\n\",\"import {path} from \\\"d3-path\\\";\\nimport {slice} from \\\"../array\\\";\\nimport constant from \\\"../constant\\\";\\nimport {x as pointX, y as pointY} from \\\"../point\\\";\\nimport pointRadial from \\\"../pointRadial\\\";\\n\\nfunction linkSource(d) {\\n  return d.source;\\n}\\n\\nfunction linkTarget(d) {\\n  return d.target;\\n}\\n\\nfunction link(curve) {\\n  var source = linkSource,\\n      target = linkTarget,\\n      x = pointX,\\n      y = pointY,\\n      context = null;\\n\\n  function link() {\\n    var buffer, argv = slice.call(arguments), s = source.apply(this, argv), t = target.apply(this, argv);\\n    if (!context) context = buffer = path();\\n    curve(context, +x.apply(this, (argv[0] = s, argv)), +y.apply(this, argv), +x.apply(this, (argv[0] = t, argv)), +y.apply(this, argv));\\n    if (buffer) return context = null, buffer + \\\"\\\" || null;\\n  }\\n\\n  link.source = function(_) {\\n    return arguments.length ? (source = _, link) : source;\\n  };\\n\\n  link.target = function(_) {\\n    return arguments.length ? (target = _, link) : target;\\n  };\\n\\n  link.x = function(_) {\\n    return arguments.length ? (x = typeof _ === \\\"function\\\" ? _ : constant(+_), link) : x;\\n  };\\n\\n  link.y = function(_) {\\n    return arguments.length ? (y = typeof _ === \\\"function\\\" ? _ : constant(+_), link) : y;\\n  };\\n\\n  link.context = function(_) {\\n    return arguments.length ? ((context = _ == null ? null : _), link) : context;\\n  };\\n\\n  return link;\\n}\\n\\nfunction curveHorizontal(context, x0, y0, x1, y1) {\\n  context.moveTo(x0, y0);\\n  context.bezierCurveTo(x0 = (x0 + x1) / 2, y0, x0, y1, x1, y1);\\n}\\n\\nfunction curveVertical(context, x0, y0, x1, y1) {\\n  context.moveTo(x0, y0);\\n  context.bezierCurveTo(x0, y0 = (y0 + y1) / 2, x1, y0, x1, y1);\\n}\\n\\nfunction curveRadial(context, x0, y0, x1, y1) {\\n  var p0 = pointRadial(x0, y0),\\n      p1 = pointRadial(x0, y0 = (y0 + y1) / 2),\\n      p2 = pointRadial(x1, y0),\\n      p3 = pointRadial(x1, y1);\\n  context.moveTo(p0[0], p0[1]);\\n  context.bezierCurveTo(p1[0], p1[1], p2[0], p2[1], p3[0], p3[1]);\\n}\\n\\nexport function linkHorizontal() {\\n  return link(curveHorizontal);\\n}\\n\\nexport function linkVertical() {\\n  return link(curveVertical);\\n}\\n\\nexport function linkRadial() {\\n  var l = link(curveRadial);\\n  l.angle = l.x, delete l.x;\\n  l.radius = l.y, delete l.y;\\n  return l;\\n}\\n\",\"import {pi, tau} from \\\"../math\\\";\\n\\nexport default {\\n  draw: function(context, size) {\\n    var r = Math.sqrt(size / pi);\\n    context.moveTo(r, 0);\\n    context.arc(0, 0, r, 0, tau);\\n  }\\n};\\n\",\"export default {\\n  draw: function(context, size) {\\n    var r = Math.sqrt(size / 5) / 2;\\n    context.moveTo(-3 * r, -r);\\n    context.lineTo(-r, -r);\\n    context.lineTo(-r, -3 * r);\\n    context.lineTo(r, -3 * r);\\n    context.lineTo(r, -r);\\n    context.lineTo(3 * r, -r);\\n    context.lineTo(3 * r, r);\\n    context.lineTo(r, r);\\n    context.lineTo(r, 3 * r);\\n    context.lineTo(-r, 3 * r);\\n    context.lineTo(-r, r);\\n    context.lineTo(-3 * r, r);\\n    context.closePath();\\n  }\\n};\\n\",\"var tan30 = Math.sqrt(1 / 3),\\n    tan30_2 = tan30 * 2;\\n\\nexport default {\\n  draw: function(context, size) {\\n    var y = Math.sqrt(size / tan30_2),\\n        x = y * tan30;\\n    context.moveTo(0, -y);\\n    context.lineTo(x, 0);\\n    context.lineTo(0, y);\\n    context.lineTo(-x, 0);\\n    context.closePath();\\n  }\\n};\\n\",\"import {pi, tau} from \\\"../math\\\";\\n\\nvar ka = 0.89081309152928522810,\\n    kr = Math.sin(pi / 10) / Math.sin(7 * pi / 10),\\n    kx = Math.sin(tau / 10) * kr,\\n    ky = -Math.cos(tau / 10) * kr;\\n\\nexport default {\\n  draw: function(context, size) {\\n    var r = Math.sqrt(size * ka),\\n        x = kx * r,\\n        y = ky * r;\\n    context.moveTo(0, -r);\\n    context.lineTo(x, y);\\n    for (var i = 1; i < 5; ++i) {\\n      var a = tau * i / 5,\\n          c = Math.cos(a),\\n          s = Math.sin(a);\\n      context.lineTo(s * r, -c * r);\\n      context.lineTo(c * x - s * y, s * x + c * y);\\n    }\\n    context.closePath();\\n  }\\n};\\n\",\"export default {\\n  draw: function(context, size) {\\n    var w = Math.sqrt(size),\\n        x = -w / 2;\\n    context.rect(x, x, w, w);\\n  }\\n};\\n\",\"var sqrt3 = Math.sqrt(3);\\n\\nexport default {\\n  draw: function(context, size) {\\n    var y = -Math.sqrt(size / (sqrt3 * 3));\\n    context.moveTo(0, y * 2);\\n    context.lineTo(-sqrt3 * y, -y);\\n    context.lineTo(sqrt3 * y, -y);\\n    context.closePath();\\n  }\\n};\\n\",\"var c = -0.5,\\n    s = Math.sqrt(3) / 2,\\n    k = 1 / Math.sqrt(12),\\n    a = (k / 2 + 1) * 3;\\n\\nexport default {\\n  draw: function(context, size) {\\n    var r = Math.sqrt(size / a),\\n        x0 = r / 2,\\n        y0 = r * k,\\n        x1 = x0,\\n        y1 = r * k + r,\\n        x2 = -x1,\\n        y2 = y1;\\n    context.moveTo(x0, y0);\\n    context.lineTo(x1, y1);\\n    context.lineTo(x2, y2);\\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\\n    context.closePath();\\n  }\\n};\\n\",\"import {path} from \\\"d3-path\\\";\\nimport circle from \\\"./symbol/circle\\\";\\nimport cross from \\\"./symbol/cross\\\";\\nimport diamond from \\\"./symbol/diamond\\\";\\nimport star from \\\"./symbol/star\\\";\\nimport square from \\\"./symbol/square\\\";\\nimport triangle from \\\"./symbol/triangle\\\";\\nimport wye from \\\"./symbol/wye\\\";\\nimport constant from \\\"./constant\\\";\\n\\nexport var symbols = [\\n  circle,\\n  cross,\\n  diamond,\\n  square,\\n  star,\\n  triangle,\\n  wye\\n];\\n\\nexport default function() {\\n  var type = constant(circle),\\n      size = constant(64),\\n      context = null;\\n\\n  function symbol() {\\n    var buffer;\\n    if (!context) context = buffer = path();\\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\\n    if (buffer) return context = null, buffer + \\\"\\\" || null;\\n  }\\n\\n  symbol.type = function(_) {\\n    return arguments.length ? (type = typeof _ === \\\"function\\\" ? _ : constant(_), symbol) : type;\\n  };\\n\\n  symbol.size = function(_) {\\n    return arguments.length ? (size = typeof _ === \\\"function\\\" ? _ : constant(+_), symbol) : size;\\n  };\\n\\n  symbol.context = function(_) {\\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\\n  };\\n\\n  return symbol;\\n}\\n\",\"export default function() {}\\n\",\"export function point(that, x, y) {\\n  that._context.bezierCurveTo(\\n    (2 * that._x0 + that._x1) / 3,\\n    (2 * that._y0 + that._y1) / 3,\\n    (that._x0 + 2 * that._x1) / 3,\\n    (that._y0 + 2 * that._y1) / 3,\\n    (that._x0 + 4 * that._x1 + x) / 6,\\n    (that._y0 + 4 * that._y1 + y) / 6\\n  );\\n}\\n\\nexport function Basis(context) {\\n  this._context = context;\\n}\\n\\nBasis.prototype = {\\n  areaStart: function() {\\n    this._line = 0;\\n  },\\n  areaEnd: function() {\\n    this._line = NaN;\\n  },\\n  lineStart: function() {\\n    this._x0 = this._x1 =\\n    this._y0 = this._y1 = NaN;\\n    this._point = 0;\\n  },\\n  lineEnd: function() {\\n    switch (this._point) {\\n      case 3: point(this, this._x1, this._y1); // proceed\\n      case 2: this._context.lineTo(this._x1, this._y1); break;\\n    }\\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\\n    this._line = 1 - this._line;\\n  },\\n  point: function(x, y) {\\n    x = +x, y = +y;\\n    switch (this._point) {\\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\\n      case 1: this._point = 2; break;\\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\\n      default: point(this, x, y); break;\\n    }\\n    this._x0 = this._x1, this._x1 = x;\\n    this._y0 = this._y1, this._y1 = y;\\n  }\\n};\\n\\nexport default function(context) {\\n  return new Basis(context);\\n}\\n\",\"import noop from \\\"../noop\\\";\\nimport {point} from \\\"./basis\\\";\\n\\nfunction BasisClosed(context) {\\n  this._context = context;\\n}\\n\\nBasisClosed.prototype = {\\n  areaStart: noop,\\n  areaEnd: noop,\\n  lineStart: function() {\\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\\n    this._point = 0;\\n  },\\n  lineEnd: function() {\\n    switch (this._point) {\\n      case 1: {\\n        this._context.moveTo(this._x2, this._y2);\\n        this._context.closePath();\\n        break;\\n      }\\n      case 2: {\\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\\n        this._context.closePath();\\n        break;\\n      }\\n      case 3: {\\n        this.point(this._x2, this._y2);\\n        this.point(this._x3, this._y3);\\n        this.point(this._x4, this._y4);\\n        break;\\n      }\\n    }\\n  },\\n  point: function(x, y) {\\n    x = +x, y = +y;\\n    switch (this._point) {\\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\\n      default: point(this, x, y); break;\\n    }\\n    this._x0 = this._x1, this._x1 = x;\\n    this._y0 = this._y1, this._y1 = y;\\n  }\\n};\\n\\nexport default function(context) {\\n  return new BasisClosed(context);\\n}\\n\",\"import {point} from \\\"./basis\\\";\\n\\nfunction BasisOpen(context) {\\n  this._context = context;\\n}\\n\\nBasisOpen.prototype = {\\n  areaStart: function() {\\n    this._line = 0;\\n  },\\n  areaEnd: function() {\\n    this._line = NaN;\\n  },\\n  lineStart: function() {\\n    this._x0 = this._x1 =\\n    this._y0 = this._y1 = NaN;\\n    this._point = 0;\\n  },\\n  lineEnd: function() {\\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\\n    this._line = 1 - this._line;\\n  },\\n  point: function(x, y) {\\n    x = +x, y = +y;\\n    switch (this._point) {\\n      case 0: this._point = 1; break;\\n      case 1: this._point = 2; break;\\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\\n      case 3: this._point = 4; // proceed\\n      default: point(this, x, y); break;\\n    }\\n    this._x0 = this._x1, this._x1 = x;\\n    this._y0 = this._y1, this._y1 = y;\\n  }\\n};\\n\\nexport default function(context) {\\n  return new BasisOpen(context);\\n}\\n\",\"import {Basis} from \\\"./basis\\\";\\n\\nfunction Bundle(context, beta) {\\n  this._basis = new Basis(context);\\n  this._beta = beta;\\n}\\n\\nBundle.prototype = {\\n  lineStart: function() {\\n    this._x = [];\\n    this._y = [];\\n    this._basis.lineStart();\\n  },\\n  lineEnd: function() {\\n    var x = this._x,\\n        y = this._y,\\n        j = x.length - 1;\\n\\n    if (j > 0) {\\n      var x0 = x[0],\\n          y0 = y[0],\\n          dx = x[j] - x0,\\n          dy = y[j] - y0,\\n          i = -1,\\n          t;\\n\\n      while (++i <= j) {\\n        t = i / j;\\n        this._basis.point(\\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\\n        );\\n      }\\n    }\\n\\n    this._x = this._y = null;\\n    this._basis.lineEnd();\\n  },\\n  point: function(x, y) {\\n    this._x.push(+x);\\n    this._y.push(+y);\\n  }\\n};\\n\\nexport default (function custom(beta) {\\n\\n  function bundle(context) {\\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\\n  }\\n\\n  bundle.beta = function(beta) {\\n    return custom(+beta);\\n  };\\n\\n  return bundle;\\n})(0.85);\\n\",\"export function point(that, x, y) {\\n  that._context.bezierCurveTo(\\n    that._x1 + that._k * (that._x2 - that._x0),\\n    that._y1 + that._k * (that._y2 - that._y0),\\n    that._x2 + that._k * (that._x1 - x),\\n    that._y2 + that._k * (that._y1 - y),\\n    that._x2,\\n    that._y2\\n  );\\n}\\n\\nexport function Cardinal(context, tension) {\\n  this._context = context;\\n  this._k = (1 - tension) / 6;\\n}\\n\\nCardinal.prototype = {\\n  areaStart: function() {\\n    this._line = 0;\\n  },\\n  areaEnd: function() {\\n    this._line = NaN;\\n  },\\n  lineStart: function() {\\n    this._x0 = this._x1 = this._x2 =\\n    this._y0 = this._y1 = this._y2 = NaN;\\n    this._point = 0;\\n  },\\n  lineEnd: function() {\\n    switch (this._point) {\\n      case 2: this._context.lineTo(this._x2, this._y2); break;\\n      case 3: point(this, this._x1, this._y1); break;\\n    }\\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\\n    this._line = 1 - this._line;\\n  },\\n  point: function(x, y) {\\n    x = +x, y = +y;\\n    switch (this._point) {\\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\\n      case 2: this._point = 3; // proceed\\n      default: point(this, x, y); break;\\n    }\\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\\n  }\\n};\\n\\nexport default (function custom(tension) {\\n\\n  function cardinal(context) {\\n    return new Cardinal(context, tension);\\n  }\\n\\n  cardinal.tension = function(tension) {\\n    return custom(+tension);\\n  };\\n\\n  return cardinal;\\n})(0);\\n\",\"import noop from \\\"../noop\\\";\\nimport {point} from \\\"./cardinal\\\";\\n\\nexport function CardinalClosed(context, tension) {\\n  this._context = context;\\n  this._k = (1 - tension) / 6;\\n}\\n\\nCardinalClosed.prototype = {\\n  areaStart: noop,\\n  areaEnd: noop,\\n  lineStart: function() {\\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\\n    this._point = 0;\\n  },\\n  lineEnd: function() {\\n    switch (this._point) {\\n      case 1: {\\n        this._context.moveTo(this._x3, this._y3);\\n        this._context.closePath();\\n        break;\\n      }\\n      case 2: {\\n        this._context.lineTo(this._x3, this._y3);\\n        this._context.closePath();\\n        break;\\n      }\\n      case 3: {\\n        this.point(this._x3, this._y3);\\n        this.point(this._x4, this._y4);\\n        this.point(this._x5, this._y5);\\n        break;\\n      }\\n    }\\n  },\\n  point: function(x, y) {\\n    x = +x, y = +y;\\n    switch (this._point) {\\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\\n      default: point(this, x, y); break;\\n    }\\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\\n  }\\n};\\n\\nexport default (function custom(tension) {\\n\\n  function cardinal(context) {\\n    return new CardinalClosed(context, tension);\\n  }\\n\\n  cardinal.tension = function(tension) {\\n    return custom(+tension);\\n  };\\n\\n  return cardinal;\\n})(0);\\n\",\"import {point} from \\\"./cardinal\\\";\\n\\nexport function CardinalOpen(context, tension) {\\n  this._context = context;\\n  this._k = (1 - tension) / 6;\\n}\\n\\nCardinalOpen.prototype = {\\n  areaStart: function() {\\n    this._line = 0;\\n  },\\n  areaEnd: function() {\\n    this._line = NaN;\\n  },\\n  lineStart: function() {\\n    this._x0 = this._x1 = this._x2 =\\n    this._y0 = this._y1 = this._y2 = NaN;\\n    this._point = 0;\\n  },\\n  lineEnd: function() {\\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\\n    this._line = 1 - this._line;\\n  },\\n  point: function(x, y) {\\n    x = +x, y = +y;\\n    switch (this._point) {\\n      case 0: this._point = 1; break;\\n      case 1: this._point = 2; break;\\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\\n      case 3: this._point = 4; // proceed\\n      default: point(this, x, y); break;\\n    }\\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\\n  }\\n};\\n\\nexport default (function custom(tension) {\\n\\n  function cardinal(context) {\\n    return new CardinalOpen(context, tension);\\n  }\\n\\n  cardinal.tension = function(tension) {\\n    return custom(+tension);\\n  };\\n\\n  return cardinal;\\n})(0);\\n\",\"import {epsilon} from \\\"../math\\\";\\nimport {Cardinal} from \\\"./cardinal\\\";\\n\\nexport function point(that, x, y) {\\n  var x1 = that._x1,\\n      y1 = that._y1,\\n      x2 = that._x2,\\n      y2 = that._y2;\\n\\n  if (that._l01_a > epsilon) {\\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\\n  }\\n\\n  if (that._l23_a > epsilon) {\\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\\n  }\\n\\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\\n}\\n\\nfunction CatmullRom(context, alpha) {\\n  this._context = context;\\n  this._alpha = alpha;\\n}\\n\\nCatmullRom.prototype = {\\n  areaStart: function() {\\n    this._line = 0;\\n  },\\n  areaEnd: function() {\\n    this._line = NaN;\\n  },\\n  lineStart: function() {\\n    this._x0 = this._x1 = this._x2 =\\n    this._y0 = this._y1 = this._y2 = NaN;\\n    this._l01_a = this._l12_a = this._l23_a =\\n    this._l01_2a = this._l12_2a = this._l23_2a =\\n    this._point = 0;\\n  },\\n  lineEnd: function() {\\n    switch (this._point) {\\n      case 2: this._context.lineTo(this._x2, this._y2); break;\\n      case 3: this.point(this._x2, this._y2); break;\\n    }\\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\\n    this._line = 1 - this._line;\\n  },\\n  point: function(x, y) {\\n    x = +x, y = +y;\\n\\n    if (this._point) {\\n      var x23 = this._x2 - x,\\n          y23 = this._y2 - y;\\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\\n    }\\n\\n    switch (this._point) {\\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\\n      case 1: this._point = 2; break;\\n      case 2: this._point = 3; // proceed\\n      default: point(this, x, y); break;\\n    }\\n\\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\\n  }\\n};\\n\\nexport default (function custom(alpha) {\\n\\n  function catmullRom(context) {\\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\\n  }\\n\\n  catmullRom.alpha = function(alpha) {\\n    return custom(+alpha);\\n  };\\n\\n  return catmullRom;\\n})(0.5);\\n\",\"import {CardinalClosed} from \\\"./cardinalClosed\\\";\\nimport noop from \\\"../noop\\\";\\nimport {point} from \\\"./catmullRom\\\";\\n\\nfunction CatmullRomClosed(context, alpha) {\\n  this._context = context;\\n  this._alpha = alpha;\\n}\\n\\nCatmullRomClosed.prototype = {\\n  areaStart: noop,\\n  areaEnd: noop,\\n  lineStart: function() {\\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\\n    this._l01_a = this._l12_a = this._l23_a =\\n    this._l01_2a = this._l12_2a = this._l23_2a =\\n    this._point = 0;\\n  },\\n  lineEnd: function() {\\n    switch (this._point) {\\n      case 1: {\\n        this._context.moveTo(this._x3, this._y3);\\n        this._context.closePath();\\n        break;\\n      }\\n      case 2: {\\n        this._context.lineTo(this._x3, this._y3);\\n        this._context.closePath();\\n        break;\\n      }\\n      case 3: {\\n        this.point(this._x3, this._y3);\\n        this.point(this._x4, this._y4);\\n        this.point(this._x5, this._y5);\\n        break;\\n      }\\n    }\\n  },\\n  point: function(x, y) {\\n    x = +x, y = +y;\\n\\n    if (this._point) {\\n      var x23 = this._x2 - x,\\n          y23 = this._y2 - y;\\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\\n    }\\n\\n    switch (this._point) {\\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\\n      default: point(this, x, y); break;\\n    }\\n\\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\\n  }\\n};\\n\\nexport default (function custom(alpha) {\\n\\n  function catmullRom(context) {\\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\\n  }\\n\\n  catmullRom.alpha = function(alpha) {\\n    return custom(+alpha);\\n  };\\n\\n  return catmullRom;\\n})(0.5);\\n\",\"import {CardinalOpen} from \\\"./cardinalOpen\\\";\\nimport {point} from \\\"./catmullRom\\\";\\n\\nfunction CatmullRomOpen(context, alpha) {\\n  this._context = context;\\n  this._alpha = alpha;\\n}\\n\\nCatmullRomOpen.prototype = {\\n  areaStart: function() {\\n    this._line = 0;\\n  },\\n  areaEnd: function() {\\n    this._line = NaN;\\n  },\\n  lineStart: function() {\\n    this._x0 = this._x1 = this._x2 =\\n    this._y0 = this._y1 = this._y2 = NaN;\\n    this._l01_a = this._l12_a = this._l23_a =\\n    this._l01_2a = this._l12_2a = this._l23_2a =\\n    this._point = 0;\\n  },\\n  lineEnd: function() {\\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\\n    this._line = 1 - this._line;\\n  },\\n  point: function(x, y) {\\n    x = +x, y = +y;\\n\\n    if (this._point) {\\n      var x23 = this._x2 - x,\\n          y23 = this._y2 - y;\\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\\n    }\\n\\n    switch (this._point) {\\n      case 0: this._point = 1; break;\\n      case 1: this._point = 2; break;\\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\\n      case 3: this._point = 4; // proceed\\n      default: point(this, x, y); break;\\n    }\\n\\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\\n  }\\n};\\n\\nexport default (function custom(alpha) {\\n\\n  function catmullRom(context) {\\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\\n  }\\n\\n  catmullRom.alpha = function(alpha) {\\n    return custom(+alpha);\\n  };\\n\\n  return catmullRom;\\n})(0.5);\\n\",\"import noop from \\\"../noop\\\";\\n\\nfunction LinearClosed(context) {\\n  this._context = context;\\n}\\n\\nLinearClosed.prototype = {\\n  areaStart: noop,\\n  areaEnd: noop,\\n  lineStart: function() {\\n    this._point = 0;\\n  },\\n  lineEnd: function() {\\n    if (this._point) this._context.closePath();\\n  },\\n  point: function(x, y) {\\n    x = +x, y = +y;\\n    if (this._point) this._context.lineTo(x, y);\\n    else this._point = 1, this._context.moveTo(x, y);\\n  }\\n};\\n\\nexport default function(context) {\\n  return new LinearClosed(context);\\n}\\n\",\"function sign(x) {\\n  return x < 0 ? -1 : 1;\\n}\\n\\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\\n// NOV(II), P. 443, 1990.\\nfunction slope3(that, x2, y2) {\\n  var h0 = that._x1 - that._x0,\\n      h1 = x2 - that._x1,\\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\\n}\\n\\n// Calculate a one-sided slope.\\nfunction slope2(that, t) {\\n  var h = that._x1 - that._x0;\\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\\n}\\n\\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\\n// \\\"you can express cubic Hermite interpolation in terms of cubic Bézier curves\\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\\\".\\nfunction point(that, t0, t1) {\\n  var x0 = that._x0,\\n      y0 = that._y0,\\n      x1 = that._x1,\\n      y1 = that._y1,\\n      dx = (x1 - x0) / 3;\\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\\n}\\n\\nfunction MonotoneX(context) {\\n  this._context = context;\\n}\\n\\nMonotoneX.prototype = {\\n  areaStart: function() {\\n    this._line = 0;\\n  },\\n  areaEnd: function() {\\n    this._line = NaN;\\n  },\\n  lineStart: function() {\\n    this._x0 = this._x1 =\\n    this._y0 = this._y1 =\\n    this._t0 = NaN;\\n    this._point = 0;\\n  },\\n  lineEnd: function() {\\n    switch (this._point) {\\n      case 2: this._context.lineTo(this._x1, this._y1); break;\\n      case 3: point(this, this._t0, slope2(this, this._t0)); break;\\n    }\\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\\n    this._line = 1 - this._line;\\n  },\\n  point: function(x, y) {\\n    var t1 = NaN;\\n\\n    x = +x, y = +y;\\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\\n    switch (this._point) {\\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\\n      case 1: this._point = 2; break;\\n      case 2: this._point = 3; point(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\\n      default: point(this, this._t0, t1 = slope3(this, x, y)); break;\\n    }\\n\\n    this._x0 = this._x1, this._x1 = x;\\n    this._y0 = this._y1, this._y1 = y;\\n    this._t0 = t1;\\n  }\\n}\\n\\nfunction MonotoneY(context) {\\n  this._context = new ReflectContext(context);\\n}\\n\\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\\n  MonotoneX.prototype.point.call(this, y, x);\\n};\\n\\nfunction ReflectContext(context) {\\n  this._context = context;\\n}\\n\\nReflectContext.prototype = {\\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\\n  closePath: function() { this._context.closePath(); },\\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\\n};\\n\\nexport function monotoneX(context) {\\n  return new MonotoneX(context);\\n}\\n\\nexport function monotoneY(context) {\\n  return new MonotoneY(context);\\n}\\n\",\"function Natural(context) {\\n  this._context = context;\\n}\\n\\nNatural.prototype = {\\n  areaStart: function() {\\n    this._line = 0;\\n  },\\n  areaEnd: function() {\\n    this._line = NaN;\\n  },\\n  lineStart: function() {\\n    this._x = [];\\n    this._y = [];\\n  },\\n  lineEnd: function() {\\n    var x = this._x,\\n        y = this._y,\\n        n = x.length;\\n\\n    if (n) {\\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\\n      if (n === 2) {\\n        this._context.lineTo(x[1], y[1]);\\n      } else {\\n        var px = controlPoints(x),\\n            py = controlPoints(y);\\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\\n        }\\n      }\\n    }\\n\\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\\n    this._line = 1 - this._line;\\n    this._x = this._y = null;\\n  },\\n  point: function(x, y) {\\n    this._x.push(+x);\\n    this._y.push(+y);\\n  }\\n};\\n\\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\\nfunction controlPoints(x) {\\n  var i,\\n      n = x.length - 1,\\n      m,\\n      a = new Array(n),\\n      b = new Array(n),\\n      r = new Array(n);\\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\\n  a[n - 1] = r[n - 1] / b[n - 1];\\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\\n  return [a, b];\\n}\\n\\nexport default function(context) {\\n  return new Natural(context);\\n}\\n\",\"function Step(context, t) {\\n  this._context = context;\\n  this._t = t;\\n}\\n\\nStep.prototype = {\\n  areaStart: function() {\\n    this._line = 0;\\n  },\\n  areaEnd: function() {\\n    this._line = NaN;\\n  },\\n  lineStart: function() {\\n    this._x = this._y = NaN;\\n    this._point = 0;\\n  },\\n  lineEnd: function() {\\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\\n  },\\n  point: function(x, y) {\\n    x = +x, y = +y;\\n    switch (this._point) {\\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\\n      case 1: this._point = 2; // proceed\\n      default: {\\n        if (this._t <= 0) {\\n          this._context.lineTo(this._x, y);\\n          this._context.lineTo(x, y);\\n        } else {\\n          var x1 = this._x * (1 - this._t) + x * this._t;\\n          this._context.lineTo(x1, this._y);\\n          this._context.lineTo(x1, y);\\n        }\\n        break;\\n      }\\n    }\\n    this._x = x, this._y = y;\\n  }\\n};\\n\\nexport default function(context) {\\n  return new Step(context, 0.5);\\n}\\n\\nexport function stepBefore(context) {\\n  return new Step(context, 0);\\n}\\n\\nexport function stepAfter(context) {\\n  return new Step(context, 1);\\n}\\n\",\"export default function(series, order) {\\n  if (!((n = series.length) > 1)) return;\\n  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\\n    s0 = s1, s1 = series[order[i]];\\n    for (j = 0; j < m; ++j) {\\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\\n    }\\n  }\\n}\\n\",\"export default function(series) {\\n  var n = series.length, o = new Array(n);\\n  while (--n >= 0) o[n] = n;\\n  return o;\\n}\\n\",\"import {slice} from \\\"./array\\\";\\nimport constant from \\\"./constant\\\";\\nimport offsetNone from \\\"./offset/none\\\";\\nimport orderNone from \\\"./order/none\\\";\\n\\nfunction stackValue(d, key) {\\n  return d[key];\\n}\\n\\nexport default function() {\\n  var keys = constant([]),\\n      order = orderNone,\\n      offset = offsetNone,\\n      value = stackValue;\\n\\n  function stack(data) {\\n    var kz = keys.apply(this, arguments),\\n        i,\\n        m = data.length,\\n        n = kz.length,\\n        sz = new Array(n),\\n        oz;\\n\\n    for (i = 0; i < n; ++i) {\\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\\n        sij.data = data[j];\\n      }\\n      si.key = ki;\\n    }\\n\\n    for (i = 0, oz = order(sz); i < n; ++i) {\\n      sz[oz[i]].index = i;\\n    }\\n\\n    offset(sz, oz);\\n    return sz;\\n  }\\n\\n  stack.keys = function(_) {\\n    return arguments.length ? (keys = typeof _ === \\\"function\\\" ? _ : constant(slice.call(_)), stack) : keys;\\n  };\\n\\n  stack.value = function(_) {\\n    return arguments.length ? (value = typeof _ === \\\"function\\\" ? _ : constant(+_), stack) : value;\\n  };\\n\\n  stack.order = function(_) {\\n    return arguments.length ? (order = _ == null ? orderNone : typeof _ === \\\"function\\\" ? _ : constant(slice.call(_)), stack) : order;\\n  };\\n\\n  stack.offset = function(_) {\\n    return arguments.length ? (offset = _ == null ? offsetNone : _, stack) : offset;\\n  };\\n\\n  return stack;\\n}\\n\",\"import none from \\\"./none\\\";\\n\\nexport default function(series, order) {\\n  if (!((n = series.length) > 0)) return;\\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\\n  }\\n  none(series, order);\\n}\\n\",\"export default function(series, order) {\\n  if (!((n = series.length) > 1)) return;\\n  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {\\n    for (yp = yn = 0, i = 0; i < n; ++i) {\\n      if ((dy = (d = series[order[i]][j])[1] - d[0]) >= 0) {\\n        d[0] = yp, d[1] = yp += dy;\\n      } else if (dy < 0) {\\n        d[1] = yn, d[0] = yn += dy;\\n      } else {\\n        d[0] = yp;\\n      }\\n    }\\n  }\\n}\\n\",\"import none from \\\"./none\\\";\\n\\nexport default function(series, order) {\\n  if (!((n = series.length) > 0)) return;\\n  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\\n    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\\n    s0[j][1] += s0[j][0] = -y / 2;\\n  }\\n  none(series, order);\\n}\\n\",\"import none from \\\"./none\\\";\\n\\nexport default function(series, order) {\\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\\n      var si = series[order[i]],\\n          sij0 = si[j][1] || 0,\\n          sij1 = si[j - 1][1] || 0,\\n          s3 = (sij0 - sij1) / 2;\\n      for (var k = 0; k < i; ++k) {\\n        var sk = series[order[k]],\\n            skj0 = sk[j][1] || 0,\\n            skj1 = sk[j - 1][1] || 0;\\n        s3 += skj0 - skj1;\\n      }\\n      s1 += sij0, s2 += s3 * sij0;\\n    }\\n    s0[j - 1][1] += s0[j - 1][0] = y;\\n    if (s1) y -= s2 / s1;\\n  }\\n  s0[j - 1][1] += s0[j - 1][0] = y;\\n  none(series, order);\\n}\\n\",\"import none from \\\"./none\\\";\\n\\nexport default function(series) {\\n  var peaks = series.map(peak);\\n  return none(series).sort(function(a, b) { return peaks[a] - peaks[b]; });\\n}\\n\\nfunction peak(series) {\\n  var i = -1, j = 0, n = series.length, vi, vj = -Infinity;\\n  while (++i < n) if ((vi = +series[i][1]) > vj) vj = vi, j = i;\\n  return j;\\n}\\n\",\"import none from \\\"./none\\\";\\n\\nexport default function(series) {\\n  var sums = series.map(sum);\\n  return none(series).sort(function(a, b) { return sums[a] - sums[b]; });\\n}\\n\\nexport function sum(series) {\\n  var s = 0, i = -1, n = series.length, v;\\n  while (++i < n) if (v = +series[i][1]) s += v;\\n  return s;\\n}\\n\",\"import ascending from \\\"./ascending\\\";\\n\\nexport default function(series) {\\n  return ascending(series).reverse();\\n}\\n\",\"import appearance from \\\"./appearance\\\";\\nimport {sum} from \\\"./ascending\\\";\\n\\nexport default function(series) {\\n  var n = series.length,\\n      i,\\n      j,\\n      sums = series.map(sum),\\n      order = appearance(series),\\n      top = 0,\\n      bottom = 0,\\n      tops = [],\\n      bottoms = [];\\n\\n  for (i = 0; i < n; ++i) {\\n    j = order[i];\\n    if (top < bottom) {\\n      top += sums[j];\\n      tops.push(j);\\n    } else {\\n      bottom += sums[j];\\n      bottoms.push(j);\\n    }\\n  }\\n\\n  return bottoms.reverse().concat(tops);\\n}\\n\",\"import none from \\\"./none\\\";\\n\\nexport default function(series) {\\n  return none(series).reverse();\\n}\\n\",\"export default function(x) {\\n  return function() {\\n    return x;\\n  };\\n}\\n\",\"export function x(d) {\\n  return d[0];\\n}\\n\\nexport function y(d) {\\n  return d[1];\\n}\\n\",\"function RedBlackTree() {\\n  this._ = null; // root node\\n}\\n\\nexport function RedBlackNode(node) {\\n  node.U = // parent node\\n  node.C = // color - true for red, false for black\\n  node.L = // left node\\n  node.R = // right node\\n  node.P = // previous node\\n  node.N = null; // next node\\n}\\n\\nRedBlackTree.prototype = {\\n  constructor: RedBlackTree,\\n\\n  insert: function(after, node) {\\n    var parent, grandpa, uncle;\\n\\n    if (after) {\\n      node.P = after;\\n      node.N = after.N;\\n      if (after.N) after.N.P = node;\\n      after.N = node;\\n      if (after.R) {\\n        after = after.R;\\n        while (after.L) after = after.L;\\n        after.L = node;\\n      } else {\\n        after.R = node;\\n      }\\n      parent = after;\\n    } else if (this._) {\\n      after = RedBlackFirst(this._);\\n      node.P = null;\\n      node.N = after;\\n      after.P = after.L = node;\\n      parent = after;\\n    } else {\\n      node.P = node.N = null;\\n      this._ = node;\\n      parent = null;\\n    }\\n    node.L = node.R = null;\\n    node.U = parent;\\n    node.C = true;\\n\\n    after = node;\\n    while (parent && parent.C) {\\n      grandpa = parent.U;\\n      if (parent === grandpa.L) {\\n        uncle = grandpa.R;\\n        if (uncle && uncle.C) {\\n          parent.C = uncle.C = false;\\n          grandpa.C = true;\\n          after = grandpa;\\n        } else {\\n          if (after === parent.R) {\\n            RedBlackRotateLeft(this, parent);\\n            after = parent;\\n            parent = after.U;\\n          }\\n          parent.C = false;\\n          grandpa.C = true;\\n          RedBlackRotateRight(this, grandpa);\\n        }\\n      } else {\\n        uncle = grandpa.L;\\n        if (uncle && uncle.C) {\\n          parent.C = uncle.C = false;\\n          grandpa.C = true;\\n          after = grandpa;\\n        } else {\\n          if (after === parent.L) {\\n            RedBlackRotateRight(this, parent);\\n            after = parent;\\n            parent = after.U;\\n          }\\n          parent.C = false;\\n          grandpa.C = true;\\n          RedBlackRotateLeft(this, grandpa);\\n        }\\n      }\\n      parent = after.U;\\n    }\\n    this._.C = false;\\n  },\\n\\n  remove: function(node) {\\n    if (node.N) node.N.P = node.P;\\n    if (node.P) node.P.N = node.N;\\n    node.N = node.P = null;\\n\\n    var parent = node.U,\\n        sibling,\\n        left = node.L,\\n        right = node.R,\\n        next,\\n        red;\\n\\n    if (!left) next = right;\\n    else if (!right) next = left;\\n    else next = RedBlackFirst(right);\\n\\n    if (parent) {\\n      if (parent.L === node) parent.L = next;\\n      else parent.R = next;\\n    } else {\\n      this._ = next;\\n    }\\n\\n    if (left && right) {\\n      red = next.C;\\n      next.C = node.C;\\n      next.L = left;\\n      left.U = next;\\n      if (next !== right) {\\n        parent = next.U;\\n        next.U = node.U;\\n        node = next.R;\\n        parent.L = node;\\n        next.R = right;\\n        right.U = next;\\n      } else {\\n        next.U = parent;\\n        parent = next;\\n        node = next.R;\\n      }\\n    } else {\\n      red = node.C;\\n      node = next;\\n    }\\n\\n    if (node) node.U = parent;\\n    if (red) return;\\n    if (node && node.C) { node.C = false; return; }\\n\\n    do {\\n      if (node === this._) break;\\n      if (node === parent.L) {\\n        sibling = parent.R;\\n        if (sibling.C) {\\n          sibling.C = false;\\n          parent.C = true;\\n          RedBlackRotateLeft(this, parent);\\n          sibling = parent.R;\\n        }\\n        if ((sibling.L && sibling.L.C)\\n            || (sibling.R && sibling.R.C)) {\\n          if (!sibling.R || !sibling.R.C) {\\n            sibling.L.C = false;\\n            sibling.C = true;\\n            RedBlackRotateRight(this, sibling);\\n            sibling = parent.R;\\n          }\\n          sibling.C = parent.C;\\n          parent.C = sibling.R.C = false;\\n          RedBlackRotateLeft(this, parent);\\n          node = this._;\\n          break;\\n        }\\n      } else {\\n        sibling = parent.L;\\n        if (sibling.C) {\\n          sibling.C = false;\\n          parent.C = true;\\n          RedBlackRotateRight(this, parent);\\n          sibling = parent.L;\\n        }\\n        if ((sibling.L && sibling.L.C)\\n          || (sibling.R && sibling.R.C)) {\\n          if (!sibling.L || !sibling.L.C) {\\n            sibling.R.C = false;\\n            sibling.C = true;\\n            RedBlackRotateLeft(this, sibling);\\n            sibling = parent.L;\\n          }\\n          sibling.C = parent.C;\\n          parent.C = sibling.L.C = false;\\n          RedBlackRotateRight(this, parent);\\n          node = this._;\\n          break;\\n        }\\n      }\\n      sibling.C = true;\\n      node = parent;\\n      parent = parent.U;\\n    } while (!node.C);\\n\\n    if (node) node.C = false;\\n  }\\n};\\n\\nfunction RedBlackRotateLeft(tree, node) {\\n  var p = node,\\n      q = node.R,\\n      parent = p.U;\\n\\n  if (parent) {\\n    if (parent.L === p) parent.L = q;\\n    else parent.R = q;\\n  } else {\\n    tree._ = q;\\n  }\\n\\n  q.U = parent;\\n  p.U = q;\\n  p.R = q.L;\\n  if (p.R) p.R.U = p;\\n  q.L = p;\\n}\\n\\nfunction RedBlackRotateRight(tree, node) {\\n  var p = node,\\n      q = node.L,\\n      parent = p.U;\\n\\n  if (parent) {\\n    if (parent.L === p) parent.L = q;\\n    else parent.R = q;\\n  } else {\\n    tree._ = q;\\n  }\\n\\n  q.U = parent;\\n  p.U = q;\\n  p.L = q.R;\\n  if (p.L) p.L.U = p;\\n  q.R = p;\\n}\\n\\nfunction RedBlackFirst(node) {\\n  while (node.L) node = node.L;\\n  return node;\\n}\\n\\nexport default RedBlackTree;\\n\",\"import {cells, edges, epsilon} from \\\"./Diagram\\\";\\n\\nexport function createEdge(left, right, v0, v1) {\\n  var edge = [null, null],\\n      index = edges.push(edge) - 1;\\n  edge.left = left;\\n  edge.right = right;\\n  if (v0) setEdgeEnd(edge, left, right, v0);\\n  if (v1) setEdgeEnd(edge, right, left, v1);\\n  cells[left.index].halfedges.push(index);\\n  cells[right.index].halfedges.push(index);\\n  return edge;\\n}\\n\\nexport function createBorderEdge(left, v0, v1) {\\n  var edge = [v0, v1];\\n  edge.left = left;\\n  return edge;\\n}\\n\\nexport function setEdgeEnd(edge, left, right, vertex) {\\n  if (!edge[0] && !edge[1]) {\\n    edge[0] = vertex;\\n    edge.left = left;\\n    edge.right = right;\\n  } else if (edge.left === right) {\\n    edge[1] = vertex;\\n  } else {\\n    edge[0] = vertex;\\n  }\\n}\\n\\n// Liang–Barsky line clipping.\\nfunction clipEdge(edge, x0, y0, x1, y1) {\\n  var a = edge[0],\\n      b = edge[1],\\n      ax = a[0],\\n      ay = a[1],\\n      bx = b[0],\\n      by = b[1],\\n      t0 = 0,\\n      t1 = 1,\\n      dx = bx - ax,\\n      dy = by - ay,\\n      r;\\n\\n  r = x0 - ax;\\n  if (!dx && r > 0) return;\\n  r /= dx;\\n  if (dx < 0) {\\n    if (r < t0) return;\\n    if (r < t1) t1 = r;\\n  } else if (dx > 0) {\\n    if (r > t1) return;\\n    if (r > t0) t0 = r;\\n  }\\n\\n  r = x1 - ax;\\n  if (!dx && r < 0) return;\\n  r /= dx;\\n  if (dx < 0) {\\n    if (r > t1) return;\\n    if (r > t0) t0 = r;\\n  } else if (dx > 0) {\\n    if (r < t0) return;\\n    if (r < t1) t1 = r;\\n  }\\n\\n  r = y0 - ay;\\n  if (!dy && r > 0) return;\\n  r /= dy;\\n  if (dy < 0) {\\n    if (r < t0) return;\\n    if (r < t1) t1 = r;\\n  } else if (dy > 0) {\\n    if (r > t1) return;\\n    if (r > t0) t0 = r;\\n  }\\n\\n  r = y1 - ay;\\n  if (!dy && r < 0) return;\\n  r /= dy;\\n  if (dy < 0) {\\n    if (r > t1) return;\\n    if (r > t0) t0 = r;\\n  } else if (dy > 0) {\\n    if (r < t0) return;\\n    if (r < t1) t1 = r;\\n  }\\n\\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\\n\\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\\n  return true;\\n}\\n\\nfunction connectEdge(edge, x0, y0, x1, y1) {\\n  var v1 = edge[1];\\n  if (v1) return true;\\n\\n  var v0 = edge[0],\\n      left = edge.left,\\n      right = edge.right,\\n      lx = left[0],\\n      ly = left[1],\\n      rx = right[0],\\n      ry = right[1],\\n      fx = (lx + rx) / 2,\\n      fy = (ly + ry) / 2,\\n      fm,\\n      fb;\\n\\n  if (ry === ly) {\\n    if (fx < x0 || fx >= x1) return;\\n    if (lx > rx) {\\n      if (!v0) v0 = [fx, y0];\\n      else if (v0[1] >= y1) return;\\n      v1 = [fx, y1];\\n    } else {\\n      if (!v0) v0 = [fx, y1];\\n      else if (v0[1] < y0) return;\\n      v1 = [fx, y0];\\n    }\\n  } else {\\n    fm = (lx - rx) / (ry - ly);\\n    fb = fy - fm * fx;\\n    if (fm < -1 || fm > 1) {\\n      if (lx > rx) {\\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\\n        else if (v0[1] >= y1) return;\\n        v1 = [(y1 - fb) / fm, y1];\\n      } else {\\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\\n        else if (v0[1] < y0) return;\\n        v1 = [(y0 - fb) / fm, y0];\\n      }\\n    } else {\\n      if (ly < ry) {\\n        if (!v0) v0 = [x0, fm * x0 + fb];\\n        else if (v0[0] >= x1) return;\\n        v1 = [x1, fm * x1 + fb];\\n      } else {\\n        if (!v0) v0 = [x1, fm * x1 + fb];\\n        else if (v0[0] < x0) return;\\n        v1 = [x0, fm * x0 + fb];\\n      }\\n    }\\n  }\\n\\n  edge[0] = v0;\\n  edge[1] = v1;\\n  return true;\\n}\\n\\nexport function clipEdges(x0, y0, x1, y1) {\\n  var i = edges.length,\\n      edge;\\n\\n  while (i--) {\\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\\n        || !clipEdge(edge, x0, y0, x1, y1)\\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon\\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon)) {\\n      delete edges[i];\\n    }\\n  }\\n}\\n\",\"import {createBorderEdge} from \\\"./Edge\\\";\\nimport {cells, edges, epsilon} from \\\"./Diagram\\\";\\n\\nexport function createCell(site) {\\n  return cells[site.index] = {\\n    site: site,\\n    halfedges: []\\n  };\\n}\\n\\nfunction cellHalfedgeAngle(cell, edge) {\\n  var site = cell.site,\\n      va = edge.left,\\n      vb = edge.right;\\n  if (site === vb) vb = va, va = site;\\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\\n  if (site === va) va = edge[1], vb = edge[0];\\n  else va = edge[0], vb = edge[1];\\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\\n}\\n\\nexport function cellHalfedgeStart(cell, edge) {\\n  return edge[+(edge.left !== cell.site)];\\n}\\n\\nexport function cellHalfedgeEnd(cell, edge) {\\n  return edge[+(edge.left === cell.site)];\\n}\\n\\nexport function sortCellHalfedges() {\\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\\n      var index = new Array(m),\\n          array = new Array(m);\\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\\n      index.sort(function(i, j) { return array[j] - array[i]; });\\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\\n    }\\n  }\\n}\\n\\nexport function clipCells(x0, y0, x1, y1) {\\n  var nCells = cells.length,\\n      iCell,\\n      cell,\\n      site,\\n      iHalfedge,\\n      halfedges,\\n      nHalfedges,\\n      start,\\n      startX,\\n      startY,\\n      end,\\n      endX,\\n      endY,\\n      cover = true;\\n\\n  for (iCell = 0; iCell < nCells; ++iCell) {\\n    if (cell = cells[iCell]) {\\n      site = cell.site;\\n      halfedges = cell.halfedges;\\n      iHalfedge = halfedges.length;\\n\\n      // Remove any dangling clipped edges.\\n      while (iHalfedge--) {\\n        if (!edges[halfedges[iHalfedge]]) {\\n          halfedges.splice(iHalfedge, 1);\\n        }\\n      }\\n\\n      // Insert any border edges as necessary.\\n      iHalfedge = 0, nHalfedges = halfedges.length;\\n      while (iHalfedge < nHalfedges) {\\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\\n        if (Math.abs(endX - startX) > epsilon || Math.abs(endY - startY) > epsilon) {\\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\\n              Math.abs(endX - x0) < epsilon && y1 - endY > epsilon ? [x0, Math.abs(startX - x0) < epsilon ? startY : y1]\\n              : Math.abs(endY - y1) < epsilon && x1 - endX > epsilon ? [Math.abs(startY - y1) < epsilon ? startX : x1, y1]\\n              : Math.abs(endX - x1) < epsilon && endY - y0 > epsilon ? [x1, Math.abs(startX - x1) < epsilon ? startY : y0]\\n              : Math.abs(endY - y0) < epsilon && endX - x0 > epsilon ? [Math.abs(startY - y0) < epsilon ? startX : x0, y0]\\n              : null)) - 1);\\n          ++nHalfedges;\\n        }\\n      }\\n\\n      if (nHalfedges) cover = false;\\n    }\\n  }\\n\\n  // If there weren’t any edges, have the closest site cover the extent.\\n  // It doesn’t matter which corner of the extent we measure!\\n  if (cover) {\\n    var dx, dy, d2, dc = Infinity;\\n\\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\\n      if (cell = cells[iCell]) {\\n        site = cell.site;\\n        dx = site[0] - x0;\\n        dy = site[1] - y0;\\n        d2 = dx * dx + dy * dy;\\n        if (d2 < dc) dc = d2, cover = cell;\\n      }\\n    }\\n\\n    if (cover) {\\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\\n      cover.halfedges.push(\\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\\n        edges.push(createBorderEdge(site, v10, v00)) - 1\\n      );\\n    }\\n  }\\n\\n  // Lastly delete any cells with no edges; these were entirely clipped.\\n  for (iCell = 0; iCell < nCells; ++iCell) {\\n    if (cell = cells[iCell]) {\\n      if (!cell.halfedges.length) {\\n        delete cells[iCell];\\n      }\\n    }\\n  }\\n}\\n\",\"import {RedBlackNode} from \\\"./RedBlackTree\\\";\\nimport {circles, epsilon2} from \\\"./Diagram\\\";\\n\\nvar circlePool = [];\\n\\nexport var firstCircle;\\n\\nfunction Circle() {\\n  RedBlackNode(this);\\n  this.x =\\n  this.y =\\n  this.arc =\\n  this.site =\\n  this.cy = null;\\n}\\n\\nexport function attachCircle(arc) {\\n  var lArc = arc.P,\\n      rArc = arc.N;\\n\\n  if (!lArc || !rArc) return;\\n\\n  var lSite = lArc.site,\\n      cSite = arc.site,\\n      rSite = rArc.site;\\n\\n  if (lSite === rSite) return;\\n\\n  var bx = cSite[0],\\n      by = cSite[1],\\n      ax = lSite[0] - bx,\\n      ay = lSite[1] - by,\\n      cx = rSite[0] - bx,\\n      cy = rSite[1] - by;\\n\\n  var d = 2 * (ax * cy - ay * cx);\\n  if (d >= -epsilon2) return;\\n\\n  var ha = ax * ax + ay * ay,\\n      hc = cx * cx + cy * cy,\\n      x = (cy * ha - ay * hc) / d,\\n      y = (ax * hc - cx * ha) / d;\\n\\n  var circle = circlePool.pop() || new Circle;\\n  circle.arc = arc;\\n  circle.site = cSite;\\n  circle.x = x + bx;\\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\\n\\n  arc.circle = circle;\\n\\n  var before = null,\\n      node = circles._;\\n\\n  while (node) {\\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\\n      if (node.L) node = node.L;\\n      else { before = node.P; break; }\\n    } else {\\n      if (node.R) node = node.R;\\n      else { before = node; break; }\\n    }\\n  }\\n\\n  circles.insert(before, circle);\\n  if (!before) firstCircle = circle;\\n}\\n\\nexport function detachCircle(arc) {\\n  var circle = arc.circle;\\n  if (circle) {\\n    if (!circle.P) firstCircle = circle.N;\\n    circles.remove(circle);\\n    circlePool.push(circle);\\n    RedBlackNode(circle);\\n    arc.circle = null;\\n  }\\n}\\n\",\"import {RedBlackNode} from \\\"./RedBlackTree\\\";\\nimport {createCell} from \\\"./Cell\\\";\\nimport {attachCircle, detachCircle} from \\\"./Circle\\\";\\nimport {createEdge, setEdgeEnd} from \\\"./Edge\\\";\\nimport {beaches, epsilon} from \\\"./Diagram\\\";\\n\\nvar beachPool = [];\\n\\nfunction Beach() {\\n  RedBlackNode(this);\\n  this.edge =\\n  this.site =\\n  this.circle = null;\\n}\\n\\nfunction createBeach(site) {\\n  var beach = beachPool.pop() || new Beach;\\n  beach.site = site;\\n  return beach;\\n}\\n\\nfunction detachBeach(beach) {\\n  detachCircle(beach);\\n  beaches.remove(beach);\\n  beachPool.push(beach);\\n  RedBlackNode(beach);\\n}\\n\\nexport function removeBeach(beach) {\\n  var circle = beach.circle,\\n      x = circle.x,\\n      y = circle.cy,\\n      vertex = [x, y],\\n      previous = beach.P,\\n      next = beach.N,\\n      disappearing = [beach];\\n\\n  detachBeach(beach);\\n\\n  var lArc = previous;\\n  while (lArc.circle\\n      && Math.abs(x - lArc.circle.x) < epsilon\\n      && Math.abs(y - lArc.circle.cy) < epsilon) {\\n    previous = lArc.P;\\n    disappearing.unshift(lArc);\\n    detachBeach(lArc);\\n    lArc = previous;\\n  }\\n\\n  disappearing.unshift(lArc);\\n  detachCircle(lArc);\\n\\n  var rArc = next;\\n  while (rArc.circle\\n      && Math.abs(x - rArc.circle.x) < epsilon\\n      && Math.abs(y - rArc.circle.cy) < epsilon) {\\n    next = rArc.N;\\n    disappearing.push(rArc);\\n    detachBeach(rArc);\\n    rArc = next;\\n  }\\n\\n  disappearing.push(rArc);\\n  detachCircle(rArc);\\n\\n  var nArcs = disappearing.length,\\n      iArc;\\n  for (iArc = 1; iArc < nArcs; ++iArc) {\\n    rArc = disappearing[iArc];\\n    lArc = disappearing[iArc - 1];\\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\\n  }\\n\\n  lArc = disappearing[0];\\n  rArc = disappearing[nArcs - 1];\\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\\n\\n  attachCircle(lArc);\\n  attachCircle(rArc);\\n}\\n\\nexport function addBeach(site) {\\n  var x = site[0],\\n      directrix = site[1],\\n      lArc,\\n      rArc,\\n      dxl,\\n      dxr,\\n      node = beaches._;\\n\\n  while (node) {\\n    dxl = leftBreakPoint(node, directrix) - x;\\n    if (dxl > epsilon) node = node.L; else {\\n      dxr = x - rightBreakPoint(node, directrix);\\n      if (dxr > epsilon) {\\n        if (!node.R) {\\n          lArc = node;\\n          break;\\n        }\\n        node = node.R;\\n      } else {\\n        if (dxl > -epsilon) {\\n          lArc = node.P;\\n          rArc = node;\\n        } else if (dxr > -epsilon) {\\n          lArc = node;\\n          rArc = node.N;\\n        } else {\\n          lArc = rArc = node;\\n        }\\n        break;\\n      }\\n    }\\n  }\\n\\n  createCell(site);\\n  var newArc = createBeach(site);\\n  beaches.insert(lArc, newArc);\\n\\n  if (!lArc && !rArc) return;\\n\\n  if (lArc === rArc) {\\n    detachCircle(lArc);\\n    rArc = createBeach(lArc.site);\\n    beaches.insert(newArc, rArc);\\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\\n    attachCircle(lArc);\\n    attachCircle(rArc);\\n    return;\\n  }\\n\\n  if (!rArc) { // && lArc\\n    newArc.edge = createEdge(lArc.site, newArc.site);\\n    return;\\n  }\\n\\n  // else lArc !== rArc\\n  detachCircle(lArc);\\n  detachCircle(rArc);\\n\\n  var lSite = lArc.site,\\n      ax = lSite[0],\\n      ay = lSite[1],\\n      bx = site[0] - ax,\\n      by = site[1] - ay,\\n      rSite = rArc.site,\\n      cx = rSite[0] - ax,\\n      cy = rSite[1] - ay,\\n      d = 2 * (bx * cy - by * cx),\\n      hb = bx * bx + by * by,\\n      hc = cx * cx + cy * cy,\\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\\n\\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\\n  newArc.edge = createEdge(lSite, site, null, vertex);\\n  rArc.edge = createEdge(site, rSite, null, vertex);\\n  attachCircle(lArc);\\n  attachCircle(rArc);\\n}\\n\\nfunction leftBreakPoint(arc, directrix) {\\n  var site = arc.site,\\n      rfocx = site[0],\\n      rfocy = site[1],\\n      pby2 = rfocy - directrix;\\n\\n  if (!pby2) return rfocx;\\n\\n  var lArc = arc.P;\\n  if (!lArc) return -Infinity;\\n\\n  site = lArc.site;\\n  var lfocx = site[0],\\n      lfocy = site[1],\\n      plby2 = lfocy - directrix;\\n\\n  if (!plby2) return lfocx;\\n\\n  var hl = lfocx - rfocx,\\n      aby2 = 1 / pby2 - 1 / plby2,\\n      b = hl / plby2;\\n\\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\\n\\n  return (rfocx + lfocx) / 2;\\n}\\n\\nfunction rightBreakPoint(arc, directrix) {\\n  var rArc = arc.N;\\n  if (rArc) return leftBreakPoint(rArc, directrix);\\n  var site = arc.site;\\n  return site[1] === directrix ? site[0] : Infinity;\\n}\\n\",\"import {addBeach, removeBeach} from \\\"./Beach\\\";\\nimport {sortCellHalfedges, cellHalfedgeStart, clipCells} from \\\"./Cell\\\";\\nimport {firstCircle} from \\\"./Circle\\\";\\nimport {clipEdges} from \\\"./Edge\\\";\\nimport RedBlackTree from \\\"./RedBlackTree\\\";\\n\\nexport var epsilon = 1e-6;\\nexport var epsilon2 = 1e-12;\\nexport var beaches;\\nexport var cells;\\nexport var circles;\\nexport var edges;\\n\\nfunction triangleArea(a, b, c) {\\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\\n}\\n\\nfunction lexicographic(a, b) {\\n  return b[1] - a[1]\\n      || b[0] - a[0];\\n}\\n\\nexport default function Diagram(sites, extent) {\\n  var site = sites.sort(lexicographic).pop(),\\n      x,\\n      y,\\n      circle;\\n\\n  edges = [];\\n  cells = new Array(sites.length);\\n  beaches = new RedBlackTree;\\n  circles = new RedBlackTree;\\n\\n  while (true) {\\n    circle = firstCircle;\\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\\n      if (site[0] !== x || site[1] !== y) {\\n        addBeach(site);\\n        x = site[0], y = site[1];\\n      }\\n      site = sites.pop();\\n    } else if (circle) {\\n      removeBeach(circle.arc);\\n    } else {\\n      break;\\n    }\\n  }\\n\\n  sortCellHalfedges();\\n\\n  if (extent) {\\n    var x0 = +extent[0][0],\\n        y0 = +extent[0][1],\\n        x1 = +extent[1][0],\\n        y1 = +extent[1][1];\\n    clipEdges(x0, y0, x1, y1);\\n    clipCells(x0, y0, x1, y1);\\n  }\\n\\n  this.edges = edges;\\n  this.cells = cells;\\n\\n  beaches =\\n  circles =\\n  edges =\\n  cells = null;\\n}\\n\\nDiagram.prototype = {\\n  constructor: Diagram,\\n\\n  polygons: function() {\\n    var edges = this.edges;\\n\\n    return this.cells.map(function(cell) {\\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\\n      polygon.data = cell.site.data;\\n      return polygon;\\n    });\\n  },\\n\\n  triangles: function() {\\n    var triangles = [],\\n        edges = this.edges;\\n\\n    this.cells.forEach(function(cell, i) {\\n      if (!(m = (halfedges = cell.halfedges).length)) return;\\n      var site = cell.site,\\n          halfedges,\\n          j = -1,\\n          m,\\n          s0,\\n          e1 = edges[halfedges[m - 1]],\\n          s1 = e1.left === site ? e1.right : e1.left;\\n\\n      while (++j < m) {\\n        s0 = s1;\\n        e1 = edges[halfedges[j]];\\n        s1 = e1.left === site ? e1.right : e1.left;\\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\\n          triangles.push([site.data, s0.data, s1.data]);\\n        }\\n      }\\n    });\\n\\n    return triangles;\\n  },\\n\\n  links: function() {\\n    return this.edges.filter(function(edge) {\\n      return edge.right;\\n    }).map(function(edge) {\\n      return {\\n        source: edge.left.data,\\n        target: edge.right.data\\n      };\\n    });\\n  },\\n\\n  find: function(x, y, radius) {\\n    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\\n\\n    // Use the previously-found cell, or start with an arbitrary one.\\n    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\\n    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\\n\\n    // Traverse the half-edges to find a closer cell, if any.\\n    do {\\n      cell = that.cells[i0 = i1], i1 = null;\\n      cell.halfedges.forEach(function(e) {\\n        var edge = that.edges[e], v = edge.left;\\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\\n        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\\n        if (v2 < d2) d2 = v2, i1 = v.index;\\n      });\\n    } while (i1 !== null);\\n\\n    that._found = i0;\\n\\n    return radius == null || d2 <= radius * radius ? cell.site : null;\\n  }\\n}\\n\",\"import constant from \\\"./constant\\\";\\nimport {x as pointX, y as pointY} from \\\"./point\\\";\\nimport Diagram, {epsilon} from \\\"./Diagram\\\";\\n\\nexport default function() {\\n  var x = pointX,\\n      y = pointY,\\n      extent = null;\\n\\n  function voronoi(data) {\\n    return new Diagram(data.map(function(d, i) {\\n      var s = [Math.round(x(d, i, data) / epsilon) * epsilon, Math.round(y(d, i, data) / epsilon) * epsilon];\\n      s.index = i;\\n      s.data = d;\\n      return s;\\n    }), extent);\\n  }\\n\\n  voronoi.polygons = function(data) {\\n    return voronoi(data).polygons();\\n  };\\n\\n  voronoi.links = function(data) {\\n    return voronoi(data).links();\\n  };\\n\\n  voronoi.triangles = function(data) {\\n    return voronoi(data).triangles();\\n  };\\n\\n  voronoi.x = function(_) {\\n    return arguments.length ? (x = typeof _ === \\\"function\\\" ? _ : constant(+_), voronoi) : x;\\n  };\\n\\n  voronoi.y = function(_) {\\n    return arguments.length ? (y = typeof _ === \\\"function\\\" ? _ : constant(+_), voronoi) : y;\\n  };\\n\\n  voronoi.extent = function(_) {\\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\\n  };\\n\\n  voronoi.size = function(_) {\\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\\n  };\\n\\n  return voronoi;\\n}\\n\",\"export default function(x) {\\n  return function() {\\n    return x;\\n  };\\n}\\n\",\"export default function ZoomEvent(target, type, transform) {\\n  this.target = target;\\n  this.type = type;\\n  this.transform = transform;\\n}\\n\",\"export function Transform(k, x, y) {\\n  this.k = k;\\n  this.x = x;\\n  this.y = y;\\n}\\n\\nTransform.prototype = {\\n  constructor: Transform,\\n  scale: function(k) {\\n    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\\n  },\\n  translate: function(x, y) {\\n    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\\n  },\\n  apply: function(point) {\\n    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\\n  },\\n  applyX: function(x) {\\n    return x * this.k + this.x;\\n  },\\n  applyY: function(y) {\\n    return y * this.k + this.y;\\n  },\\n  invert: function(location) {\\n    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\\n  },\\n  invertX: function(x) {\\n    return (x - this.x) / this.k;\\n  },\\n  invertY: function(y) {\\n    return (y - this.y) / this.k;\\n  },\\n  rescaleX: function(x) {\\n    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\\n  },\\n  rescaleY: function(y) {\\n    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\\n  },\\n  toString: function() {\\n    return \\\"translate(\\\" + this.x + \\\",\\\" + this.y + \\\") scale(\\\" + this.k + \\\")\\\";\\n  }\\n};\\n\\nexport var identity = new Transform(1, 0, 0);\\n\\ntransform.prototype = Transform.prototype;\\n\\nexport default function transform(node) {\\n  return node.__zoom || identity;\\n}\\n\",\"import {event} from \\\"d3-selection\\\";\\n\\nexport function nopropagation() {\\n  event.stopImmediatePropagation();\\n}\\n\\nexport default function() {\\n  event.preventDefault();\\n  event.stopImmediatePropagation();\\n}\\n\",\"import {dispatch} from \\\"d3-dispatch\\\";\\nimport {dragDisable, dragEnable} from \\\"d3-drag\\\";\\nimport {interpolateZoom} from \\\"d3-interpolate\\\";\\nimport {event, customEvent, select, mouse, touch} from \\\"d3-selection\\\";\\nimport {interrupt} from \\\"d3-transition\\\";\\nimport constant from \\\"./constant\\\";\\nimport ZoomEvent from \\\"./event\\\";\\nimport {Transform, identity} from \\\"./transform\\\";\\nimport noevent, {nopropagation} from \\\"./noevent\\\";\\n\\n// Ignore right-click, since that should open the context menu.\\nfunction defaultFilter() {\\n  return !event.button;\\n}\\n\\nfunction defaultExtent() {\\n  var e = this, w, h;\\n  if (e instanceof SVGElement) {\\n    e = e.ownerSVGElement || e;\\n    w = e.width.baseVal.value;\\n    h = e.height.baseVal.value;\\n  } else {\\n    w = e.clientWidth;\\n    h = e.clientHeight;\\n  }\\n  return [[0, 0], [w, h]];\\n}\\n\\nfunction defaultTransform() {\\n  return this.__zoom || identity;\\n}\\n\\nfunction defaultWheelDelta() {\\n  return -event.deltaY * (event.deltaMode ? 120 : 1) / 500;\\n}\\n\\nfunction defaultTouchable() {\\n  return \\\"ontouchstart\\\" in this;\\n}\\n\\nfunction defaultConstrain(transform, extent, translateExtent) {\\n  var dx0 = transform.invertX(extent[0][0]) - translateExtent[0][0],\\n      dx1 = transform.invertX(extent[1][0]) - translateExtent[1][0],\\n      dy0 = transform.invertY(extent[0][1]) - translateExtent[0][1],\\n      dy1 = transform.invertY(extent[1][1]) - translateExtent[1][1];\\n  return transform.translate(\\n    dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1),\\n    dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1)\\n  );\\n}\\n\\nexport default function() {\\n  var filter = defaultFilter,\\n      extent = defaultExtent,\\n      constrain = defaultConstrain,\\n      wheelDelta = defaultWheelDelta,\\n      touchable = defaultTouchable,\\n      scaleExtent = [0, Infinity],\\n      translateExtent = [[-Infinity, -Infinity], [Infinity, Infinity]],\\n      duration = 250,\\n      interpolate = interpolateZoom,\\n      gestures = [],\\n      listeners = dispatch(\\\"start\\\", \\\"zoom\\\", \\\"end\\\"),\\n      touchstarting,\\n      touchending,\\n      touchDelay = 500,\\n      wheelDelay = 150,\\n      clickDistance2 = 0;\\n\\n  function zoom(selection) {\\n    selection\\n        .property(\\\"__zoom\\\", defaultTransform)\\n        .on(\\\"wheel.zoom\\\", wheeled)\\n        .on(\\\"mousedown.zoom\\\", mousedowned)\\n        .on(\\\"dblclick.zoom\\\", dblclicked)\\n      .filter(touchable)\\n        .on(\\\"touchstart.zoom\\\", touchstarted)\\n        .on(\\\"touchmove.zoom\\\", touchmoved)\\n        .on(\\\"touchend.zoom touchcancel.zoom\\\", touchended)\\n        .style(\\\"touch-action\\\", \\\"none\\\")\\n        .style(\\\"-webkit-tap-highlight-color\\\", \\\"rgba(0,0,0,0)\\\");\\n  }\\n\\n  zoom.transform = function(collection, transform) {\\n    var selection = collection.selection ? collection.selection() : collection;\\n    selection.property(\\\"__zoom\\\", defaultTransform);\\n    if (collection !== selection) {\\n      schedule(collection, transform);\\n    } else {\\n      selection.interrupt().each(function() {\\n        gesture(this, arguments)\\n            .start()\\n            .zoom(null, typeof transform === \\\"function\\\" ? transform.apply(this, arguments) : transform)\\n            .end();\\n      });\\n    }\\n  };\\n\\n  zoom.scaleBy = function(selection, k) {\\n    zoom.scaleTo(selection, function() {\\n      var k0 = this.__zoom.k,\\n          k1 = typeof k === \\\"function\\\" ? k.apply(this, arguments) : k;\\n      return k0 * k1;\\n    });\\n  };\\n\\n  zoom.scaleTo = function(selection, k) {\\n    zoom.transform(selection, function() {\\n      var e = extent.apply(this, arguments),\\n          t0 = this.__zoom,\\n          p0 = centroid(e),\\n          p1 = t0.invert(p0),\\n          k1 = typeof k === \\\"function\\\" ? k.apply(this, arguments) : k;\\n      return constrain(translate(scale(t0, k1), p0, p1), e, translateExtent);\\n    });\\n  };\\n\\n  zoom.translateBy = function(selection, x, y) {\\n    zoom.transform(selection, function() {\\n      return constrain(this.__zoom.translate(\\n        typeof x === \\\"function\\\" ? x.apply(this, arguments) : x,\\n        typeof y === \\\"function\\\" ? y.apply(this, arguments) : y\\n      ), extent.apply(this, arguments), translateExtent);\\n    });\\n  };\\n\\n  zoom.translateTo = function(selection, x, y) {\\n    zoom.transform(selection, function() {\\n      var e = extent.apply(this, arguments),\\n          t = this.__zoom,\\n          p = centroid(e);\\n      return constrain(identity.translate(p[0], p[1]).scale(t.k).translate(\\n        typeof x === \\\"function\\\" ? -x.apply(this, arguments) : -x,\\n        typeof y === \\\"function\\\" ? -y.apply(this, arguments) : -y\\n      ), e, translateExtent);\\n    });\\n  };\\n\\n  function scale(transform, k) {\\n    k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], k));\\n    return k === transform.k ? transform : new Transform(k, transform.x, transform.y);\\n  }\\n\\n  function translate(transform, p0, p1) {\\n    var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;\\n    return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);\\n  }\\n\\n  function centroid(extent) {\\n    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\\n  }\\n\\n  function schedule(transition, transform, center) {\\n    transition\\n        .on(\\\"start.zoom\\\", function() { gesture(this, arguments).start(); })\\n        .on(\\\"interrupt.zoom end.zoom\\\", function() { gesture(this, arguments).end(); })\\n        .tween(\\\"zoom\\\", function() {\\n          var that = this,\\n              args = arguments,\\n              g = gesture(that, args),\\n              e = extent.apply(that, args),\\n              p = center || centroid(e),\\n              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\\n              a = that.__zoom,\\n              b = typeof transform === \\\"function\\\" ? transform.apply(that, args) : transform,\\n              i = interpolate(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\\n          return function(t) {\\n            if (t === 1) t = b; // Avoid rounding error on end.\\n            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\\n            g.zoom(null, t);\\n          };\\n        });\\n  }\\n\\n  function gesture(that, args) {\\n    for (var i = 0, n = gestures.length, g; i < n; ++i) {\\n      if ((g = gestures[i]).that === that) {\\n        return g;\\n      }\\n    }\\n    return new Gesture(that, args);\\n  }\\n\\n  function Gesture(that, args) {\\n    this.that = that;\\n    this.args = args;\\n    this.index = -1;\\n    this.active = 0;\\n    this.extent = extent.apply(that, args);\\n  }\\n\\n  Gesture.prototype = {\\n    start: function() {\\n      if (++this.active === 1) {\\n        this.index = gestures.push(this) - 1;\\n        this.emit(\\\"start\\\");\\n      }\\n      return this;\\n    },\\n    zoom: function(key, transform) {\\n      if (this.mouse && key !== \\\"mouse\\\") this.mouse[1] = transform.invert(this.mouse[0]);\\n      if (this.touch0 && key !== \\\"touch\\\") this.touch0[1] = transform.invert(this.touch0[0]);\\n      if (this.touch1 && key !== \\\"touch\\\") this.touch1[1] = transform.invert(this.touch1[0]);\\n      this.that.__zoom = transform;\\n      this.emit(\\\"zoom\\\");\\n      return this;\\n    },\\n    end: function() {\\n      if (--this.active === 0) {\\n        gestures.splice(this.index, 1);\\n        this.index = -1;\\n        this.emit(\\\"end\\\");\\n      }\\n      return this;\\n    },\\n    emit: function(type) {\\n      customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\\n    }\\n  };\\n\\n  function wheeled() {\\n    if (!filter.apply(this, arguments)) return;\\n    var g = gesture(this, arguments),\\n        t = this.__zoom,\\n        k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], t.k * Math.pow(2, wheelDelta.apply(this, arguments)))),\\n        p = mouse(this);\\n\\n    // If the mouse is in the same location as before, reuse it.\\n    // If there were recent wheel events, reset the wheel idle timeout.\\n    if (g.wheel) {\\n      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\\n        g.mouse[1] = t.invert(g.mouse[0] = p);\\n      }\\n      clearTimeout(g.wheel);\\n    }\\n\\n    // If this wheel event won’t trigger a transform change, ignore it.\\n    else if (t.k === k) return;\\n\\n    // Otherwise, capture the mouse point and location at the start.\\n    else {\\n      g.mouse = [p, t.invert(p)];\\n      interrupt(this);\\n      g.start();\\n    }\\n\\n    noevent();\\n    g.wheel = setTimeout(wheelidled, wheelDelay);\\n    g.zoom(\\\"mouse\\\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent, translateExtent));\\n\\n    function wheelidled() {\\n      g.wheel = null;\\n      g.end();\\n    }\\n  }\\n\\n  function mousedowned() {\\n    if (touchending || !filter.apply(this, arguments)) return;\\n    var g = gesture(this, arguments),\\n        v = select(event.view).on(\\\"mousemove.zoom\\\", mousemoved, true).on(\\\"mouseup.zoom\\\", mouseupped, true),\\n        p = mouse(this),\\n        x0 = event.clientX,\\n        y0 = event.clientY;\\n\\n    dragDisable(event.view);\\n    nopropagation();\\n    g.mouse = [p, this.__zoom.invert(p)];\\n    interrupt(this);\\n    g.start();\\n\\n    function mousemoved() {\\n      noevent();\\n      if (!g.moved) {\\n        var dx = event.clientX - x0, dy = event.clientY - y0;\\n        g.moved = dx * dx + dy * dy > clickDistance2;\\n      }\\n      g.zoom(\\\"mouse\\\", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent, translateExtent));\\n    }\\n\\n    function mouseupped() {\\n      v.on(\\\"mousemove.zoom mouseup.zoom\\\", null);\\n      dragEnable(event.view, g.moved);\\n      noevent();\\n      g.end();\\n    }\\n  }\\n\\n  function dblclicked() {\\n    if (!filter.apply(this, arguments)) return;\\n    var t0 = this.__zoom,\\n        p0 = mouse(this),\\n        p1 = t0.invert(p0),\\n        k1 = t0.k * (event.shiftKey ? 0.5 : 2),\\n        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments), translateExtent);\\n\\n    noevent();\\n    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);\\n    else select(this).call(zoom.transform, t1);\\n  }\\n\\n  function touchstarted() {\\n    if (!filter.apply(this, arguments)) return;\\n    var g = gesture(this, arguments),\\n        touches = event.changedTouches,\\n        started,\\n        n = touches.length, i, t, p;\\n\\n    nopropagation();\\n    for (i = 0; i < n; ++i) {\\n      t = touches[i], p = touch(this, touches, t.identifier);\\n      p = [p, this.__zoom.invert(p), t.identifier];\\n      if (!g.touch0) g.touch0 = p, started = true;\\n      else if (!g.touch1) g.touch1 = p;\\n    }\\n\\n    // If this is a dbltap, reroute to the (optional) dblclick.zoom handler.\\n    if (touchstarting) {\\n      touchstarting = clearTimeout(touchstarting);\\n      if (!g.touch1) {\\n        g.end();\\n        p = select(this).on(\\\"dblclick.zoom\\\");\\n        if (p) p.apply(this, arguments);\\n        return;\\n      }\\n    }\\n\\n    if (started) {\\n      touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\\n      interrupt(this);\\n      g.start();\\n    }\\n  }\\n\\n  function touchmoved() {\\n    var g = gesture(this, arguments),\\n        touches = event.changedTouches,\\n        n = touches.length, i, t, p, l;\\n\\n    noevent();\\n    if (touchstarting) touchstarting = clearTimeout(touchstarting);\\n    for (i = 0; i < n; ++i) {\\n      t = touches[i], p = touch(this, touches, t.identifier);\\n      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\\n      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\\n    }\\n    t = g.that.__zoom;\\n    if (g.touch1) {\\n      var p0 = g.touch0[0], l0 = g.touch0[1],\\n          p1 = g.touch1[0], l1 = g.touch1[1],\\n          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\\n          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\\n      t = scale(t, Math.sqrt(dp / dl));\\n      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\\n      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\\n    }\\n    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\\n    else return;\\n    g.zoom(\\\"touch\\\", constrain(translate(t, p, l), g.extent, translateExtent));\\n  }\\n\\n  function touchended() {\\n    var g = gesture(this, arguments),\\n        touches = event.changedTouches,\\n        n = touches.length, i, t;\\n\\n    nopropagation();\\n    if (touchending) clearTimeout(touchending);\\n    touchending = setTimeout(function() { touchending = null; }, touchDelay);\\n    for (i = 0; i < n; ++i) {\\n      t = touches[i];\\n      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\\n      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\\n    }\\n    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\\n    if (g.touch0) g.touch0[1] = this.__zoom.invert(g.touch0[0]);\\n    else g.end();\\n  }\\n\\n  zoom.wheelDelta = function(_) {\\n    return arguments.length ? (wheelDelta = typeof _ === \\\"function\\\" ? _ : constant(+_), zoom) : wheelDelta;\\n  };\\n\\n  zoom.filter = function(_) {\\n    return arguments.length ? (filter = typeof _ === \\\"function\\\" ? _ : constant(!!_), zoom) : filter;\\n  };\\n\\n  zoom.touchable = function(_) {\\n    return arguments.length ? (touchable = typeof _ === \\\"function\\\" ? _ : constant(!!_), zoom) : touchable;\\n  };\\n\\n  zoom.extent = function(_) {\\n    return arguments.length ? (extent = typeof _ === \\\"function\\\" ? _ : constant([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\\n  };\\n\\n  zoom.scaleExtent = function(_) {\\n    return arguments.length ? (scaleExtent[0] = +_[0], scaleExtent[1] = +_[1], zoom) : [scaleExtent[0], scaleExtent[1]];\\n  };\\n\\n  zoom.translateExtent = function(_) {\\n    return arguments.length ? (translateExtent[0][0] = +_[0][0], translateExtent[1][0] = +_[1][0], translateExtent[0][1] = +_[0][1], translateExtent[1][1] = +_[1][1], zoom) : [[translateExtent[0][0], translateExtent[0][1]], [translateExtent[1][0], translateExtent[1][1]]];\\n  };\\n\\n  zoom.constrain = function(_) {\\n    return arguments.length ? (constrain = _, zoom) : constrain;\\n  };\\n\\n  zoom.duration = function(_) {\\n    return arguments.length ? (duration = +_, zoom) : duration;\\n  };\\n\\n  zoom.interpolate = function(_) {\\n    return arguments.length ? (interpolate = _, zoom) : interpolate;\\n  };\\n\\n  zoom.on = function() {\\n    var value = listeners.on.apply(listeners, arguments);\\n    return value === listeners ? zoom : value;\\n  };\\n\\n  zoom.clickDistance = function(_) {\\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, zoom) : Math.sqrt(clickDistance2);\\n  };\\n\\n  return zoom;\\n}\\n\",\"export {version} from \\\"./dist/package\\\";\\nexport * from \\\"d3-array\\\";\\nexport * from \\\"d3-axis\\\";\\nexport * from \\\"d3-brush\\\";\\nexport * from \\\"d3-chord\\\";\\nexport * from \\\"d3-collection\\\";\\nexport * from \\\"d3-color\\\";\\nexport * from \\\"d3-contour\\\";\\nexport * from \\\"d3-dispatch\\\";\\nexport * from \\\"d3-drag\\\";\\nexport * from \\\"d3-dsv\\\";\\nexport * from \\\"d3-ease\\\";\\nexport * from \\\"d3-fetch\\\";\\nexport * from \\\"d3-force\\\";\\nexport * from \\\"d3-format\\\";\\nexport * from \\\"d3-geo\\\";\\nexport * from \\\"d3-hierarchy\\\";\\nexport * from \\\"d3-interpolate\\\";\\nexport * from \\\"d3-path\\\";\\nexport * from \\\"d3-polygon\\\";\\nexport * from \\\"d3-quadtree\\\";\\nexport * from \\\"d3-random\\\";\\nexport * from \\\"d3-scale\\\";\\nexport * from \\\"d3-scale-chromatic\\\";\\nexport * from \\\"d3-selection\\\";\\nexport * from \\\"d3-shape\\\";\\nexport * from \\\"d3-time\\\";\\nexport * from \\\"d3-time-format\\\";\\nexport * from \\\"d3-timer\\\";\\nexport * from \\\"d3-transition\\\";\\nexport * from \\\"d3-voronoi\\\";\\nexport * from \\\"d3-zoom\\\";\\n\"]}","code":"!function(n){var t={};function e(r){if(t[r])return t[r].exports;var i=t[r]={i:r,l:!1,exports:{}};return n[r].call(i.exports,i,i.exports,e),i.l=!0,i.exports}e.m=n,e.c=t,e.d=function(n,t,r){e.o(n,t)||Object.defineProperty(n,t,{enumerable:!0,get:r})},e.r=function(n){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(n,\"__esModule\",{value:!0})},e.t=function(n,t){if(1&t&&(n=e(n)),8&t)return n;if(4&t&&\"object\"==typeof n&&n&&n.__esModule)return n;var r=Object.create(null);if(e.r(r),Object.defineProperty(r,\"default\",{enumerable:!0,value:n}),2&t&&\"string\"!=typeof n)for(var i in n)e.d(r,i,function(t){return n[t]}.bind(null,i));return r},e.n=function(n){var t=n&&n.__esModule?function(){return n.default}:function(){return n};return e.d(t,\"a\",t),t},e.o=function(n,t){return Object.prototype.hasOwnProperty.call(n,t)},e.p=\"\",e(e.s=6)}([function(n,t,e){\"use strict\";e.r(t);var r=\"http://www.w3.org/1999/xhtml\",i={svg:\"http://www.w3.org/2000/svg\",xhtml:r,xlink:\"http://www.w3.org/1999/xlink\",xml:\"http://www.w3.org/XML/1998/namespace\",xmlns:\"http://www.w3.org/2000/xmlns/\"},u=function(n){var t=n+=\"\",e=t.indexOf(\":\");return e>=0&&\"xmlns\"!==(t=n.slice(0,e))&&(n=n.slice(e+1)),i.hasOwnProperty(t)?{space:i[t],local:n}:n};var o=function(n){var t=u(n);return(t.local?function(n){return function(){return this.ownerDocument.createElementNS(n.space,n.local)}}:function(n){return function(){var t=this.ownerDocument,e=this.namespaceURI;return e===r&&t.documentElement.namespaceURI===r?t.createElement(n):t.createElementNS(e,n)}})(t)};function a(){}var c=function(n){return null==n?a:function(){return this.querySelector(n)}};function f(){return[]}var s=function(n){return null==n?f:function(){return this.querySelectorAll(n)}},l=function(n){return function(){return this.matches(n)}},h=function(n){return new Array(n.length)};function d(n,t){this.ownerDocument=n.ownerDocument,this.namespaceURI=n.namespaceURI,this._next=null,this._parent=n,this.__data__=t}d.prototype={constructor:d,appendChild:function(n){return this._parent.insertBefore(n,this._next)},insertBefore:function(n,t){return this._parent.insertBefore(n,t)},querySelector:function(n){return this._parent.querySelector(n)},querySelectorAll:function(n){return this._parent.querySelectorAll(n)}};var p=\"$\";function v(n,t,e,r,i,u){for(var o,a=0,c=t.length,f=u.length;a<f;++a)(o=t[a])?(o.__data__=u[a],r[a]=o):e[a]=new d(n,u[a]);for(;a<c;++a)(o=t[a])&&(i[a]=o)}function g(n,t,e,r,i,u,o){var a,c,f,s={},l=t.length,h=u.length,v=new Array(l);for(a=0;a<l;++a)(c=t[a])&&(v[a]=f=p+o.call(c,c.__data__,a,t),f in s?i[a]=c:s[f]=c);for(a=0;a<h;++a)(c=s[f=p+o.call(n,u[a],a,u)])?(r[a]=c,c.__data__=u[a],s[f]=null):e[a]=new d(n,u[a]);for(a=0;a<l;++a)(c=t[a])&&s[v[a]]===c&&(i[a]=c)}function y(n,t){return n<t?-1:n>t?1:n>=t?0:NaN}var b=function(n){return n.ownerDocument&&n.ownerDocument.defaultView||n.document&&n||n.defaultView};function _(n,t){return n.style.getPropertyValue(t)||b(n).getComputedStyle(n,null).getPropertyValue(t)}function m(n){return n.trim().split(/^|\\s+/)}function x(n){return n.classList||new w(n)}function w(n){this._node=n,this._names=m(n.getAttribute(\"class\")||\"\")}function M(n,t){for(var e=x(n),r=-1,i=t.length;++r<i;)e.add(t[r])}function N(n,t){for(var e=x(n),r=-1,i=t.length;++r<i;)e.remove(t[r])}w.prototype={add:function(n){this._names.indexOf(n)<0&&(this._names.push(n),this._node.setAttribute(\"class\",this._names.join(\" \")))},remove:function(n){var t=this._names.indexOf(n);t>=0&&(this._names.splice(t,1),this._node.setAttribute(\"class\",this._names.join(\" \")))},contains:function(n){return this._names.indexOf(n)>=0}};function A(){this.textContent=\"\"}function T(){this.innerHTML=\"\"}function S(){this.nextSibling&&this.parentNode.appendChild(this)}function k(){this.previousSibling&&this.parentNode.insertBefore(this,this.parentNode.firstChild)}function E(){return null}function C(){var n=this.parentNode;n&&n.removeChild(this)}function P(){return this.parentNode.insertBefore(this.cloneNode(!1),this.nextSibling)}function z(){return this.parentNode.insertBefore(this.cloneNode(!0),this.nextSibling)}var O={},R=null;\"undefined\"!=typeof document&&(\"onmouseenter\"in document.documentElement||(O={mouseenter:\"mouseover\",mouseleave:\"mouseout\"}));function D(n,t,e){return n=L(n,t,e),function(t){var e=t.relatedTarget;e&&(e===this||8&e.compareDocumentPosition(this))||n.call(this,t)}}function L(n,t,e){return function(r){var i=R;R=r;try{n.call(this,this.__data__,t,e)}finally{R=i}}}function q(n){return function(){var t=this.__on;if(t){for(var e,r=0,i=-1,u=t.length;r<u;++r)e=t[r],n.type&&e.type!==n.type||e.name!==n.name?t[++i]=e:this.removeEventListener(e.type,e.listener,e.capture);++i?t.length=i:delete this.__on}}}function U(n,t,e){var r=O.hasOwnProperty(n.type)?D:L;return function(i,u,o){var a,c=this.__on,f=r(t,u,o);if(c)for(var s=0,l=c.length;s<l;++s)if((a=c[s]).type===n.type&&a.name===n.name)return this.removeEventListener(a.type,a.listener,a.capture),this.addEventListener(a.type,a.listener=f,a.capture=e),void(a.value=t);this.addEventListener(n.type,f,e),a={type:n.type,name:n.name,value:t,listener:f,capture:e},c?c.push(a):this.__on=[a]}}function j(n,t,e,r){var i=R;n.sourceEvent=R,R=n;try{return t.apply(e,r)}finally{R=i}}function B(n,t,e){var r=b(n),i=r.CustomEvent;\"function\"==typeof i?i=new i(t,e):(i=r.document.createEvent(\"Event\"),e?(i.initEvent(t,e.bubbles,e.cancelable),i.detail=e.detail):i.initEvent(t,!1,!1)),n.dispatchEvent(i)}var Y=[null];function F(n,t){this._groups=n,this._parents=t}function I(){return new F([[document.documentElement]],Y)}F.prototype=I.prototype={constructor:F,select:function(n){\"function\"!=typeof n&&(n=c(n));for(var t=this._groups,e=t.length,r=new Array(e),i=0;i<e;++i)for(var u,o,a=t[i],f=a.length,s=r[i]=new Array(f),l=0;l<f;++l)(u=a[l])&&(o=n.call(u,u.__data__,l,a))&&(\"__data__\"in u&&(o.__data__=u.__data__),s[l]=o);return new F(r,this._parents)},selectAll:function(n){\"function\"!=typeof n&&(n=s(n));for(var t=this._groups,e=t.length,r=[],i=[],u=0;u<e;++u)for(var o,a=t[u],c=a.length,f=0;f<c;++f)(o=a[f])&&(r.push(n.call(o,o.__data__,f,a)),i.push(o));return new F(r,i)},filter:function(n){\"function\"!=typeof n&&(n=l(n));for(var t=this._groups,e=t.length,r=new Array(e),i=0;i<e;++i)for(var u,o=t[i],a=o.length,c=r[i]=[],f=0;f<a;++f)(u=o[f])&&n.call(u,u.__data__,f,o)&&c.push(u);return new F(r,this._parents)},data:function(n,t){if(!n)return p=new Array(this.size()),s=-1,this.each(function(n){p[++s]=n}),p;var e,r=t?g:v,i=this._parents,u=this._groups;\"function\"!=typeof n&&(e=n,n=function(){return e});for(var o=u.length,a=new Array(o),c=new Array(o),f=new Array(o),s=0;s<o;++s){var l=i[s],h=u[s],d=h.length,p=n.call(l,l&&l.__data__,s,i),y=p.length,b=c[s]=new Array(y),_=a[s]=new Array(y);r(l,h,b,_,f[s]=new Array(d),p,t);for(var m,x,w=0,M=0;w<y;++w)if(m=b[w]){for(w>=M&&(M=w+1);!(x=_[M])&&++M<y;);m._next=x||null}}return(a=new F(a,i))._enter=c,a._exit=f,a},enter:function(){return new F(this._enter||this._groups.map(h),this._parents)},exit:function(){return new F(this._exit||this._groups.map(h),this._parents)},join:function(n,t,e){var r=this.enter(),i=this,u=this.exit();return r=\"function\"==typeof n?n(r):r.append(n+\"\"),null!=t&&(i=t(i)),null==e?u.remove():e(u),r&&i?r.merge(i).order():i},merge:function(n){for(var t=this._groups,e=n._groups,r=t.length,i=e.length,u=Math.min(r,i),o=new Array(r),a=0;a<u;++a)for(var c,f=t[a],s=e[a],l=f.length,h=o[a]=new Array(l),d=0;d<l;++d)(c=f[d]||s[d])&&(h[d]=c);for(;a<r;++a)o[a]=t[a];return new F(o,this._parents)},order:function(){for(var n=this._groups,t=-1,e=n.length;++t<e;)for(var r,i=n[t],u=i.length-1,o=i[u];--u>=0;)(r=i[u])&&(o&&4^r.compareDocumentPosition(o)&&o.parentNode.insertBefore(r,o),o=r);return this},sort:function(n){function t(t,e){return t&&e?n(t.__data__,e.__data__):!t-!e}n||(n=y);for(var e=this._groups,r=e.length,i=new Array(r),u=0;u<r;++u){for(var o,a=e[u],c=a.length,f=i[u]=new Array(c),s=0;s<c;++s)(o=a[s])&&(f[s]=o);f.sort(t)}return new F(i,this._parents).order()},call:function(){var n=arguments[0];return arguments[0]=this,n.apply(null,arguments),this},nodes:function(){var n=new Array(this.size()),t=-1;return this.each(function(){n[++t]=this}),n},node:function(){for(var n=this._groups,t=0,e=n.length;t<e;++t)for(var r=n[t],i=0,u=r.length;i<u;++i){var o=r[i];if(o)return o}return null},size:function(){var n=0;return this.each(function(){++n}),n},empty:function(){return!this.node()},each:function(n){for(var t=this._groups,e=0,r=t.length;e<r;++e)for(var i,u=t[e],o=0,a=u.length;o<a;++o)(i=u[o])&&n.call(i,i.__data__,o,u);return this},attr:function(n,t){var e=u(n);if(arguments.length<2){var r=this.node();return e.local?r.getAttributeNS(e.space,e.local):r.getAttribute(e)}return this.each((null==t?e.local?function(n){return function(){this.removeAttributeNS(n.space,n.local)}}:function(n){return function(){this.removeAttribute(n)}}:\"function\"==typeof t?e.local?function(n,t){return function(){var e=t.apply(this,arguments);null==e?this.removeAttributeNS(n.space,n.local):this.setAttributeNS(n.space,n.local,e)}}:function(n,t){return function(){var e=t.apply(this,arguments);null==e?this.removeAttribute(n):this.setAttribute(n,e)}}:e.local?function(n,t){return function(){this.setAttributeNS(n.space,n.local,t)}}:function(n,t){return function(){this.setAttribute(n,t)}})(e,t))},style:function(n,t,e){return arguments.length>1?this.each((null==t?function(n){return function(){this.style.removeProperty(n)}}:\"function\"==typeof t?function(n,t,e){return function(){var r=t.apply(this,arguments);null==r?this.style.removeProperty(n):this.style.setProperty(n,r,e)}}:function(n,t,e){return function(){this.style.setProperty(n,t,e)}})(n,t,null==e?\"\":e)):_(this.node(),n)},property:function(n,t){return arguments.length>1?this.each((null==t?function(n){return function(){delete this[n]}}:\"function\"==typeof t?function(n,t){return function(){var e=t.apply(this,arguments);null==e?delete this[n]:this[n]=e}}:function(n,t){return function(){this[n]=t}})(n,t)):this.node()[n]},classed:function(n,t){var e=m(n+\"\");if(arguments.length<2){for(var r=x(this.node()),i=-1,u=e.length;++i<u;)if(!r.contains(e[i]))return!1;return!0}return this.each((\"function\"==typeof t?function(n,t){return function(){(t.apply(this,arguments)?M:N)(this,n)}}:t?function(n){return function(){M(this,n)}}:function(n){return function(){N(this,n)}})(e,t))},text:function(n){return arguments.length?this.each(null==n?A:(\"function\"==typeof n?function(n){return function(){var t=n.apply(this,arguments);this.textContent=null==t?\"\":t}}:function(n){return function(){this.textContent=n}})(n)):this.node().textContent},html:function(n){return arguments.length?this.each(null==n?T:(\"function\"==typeof n?function(n){return function(){var t=n.apply(this,arguments);this.innerHTML=null==t?\"\":t}}:function(n){return function(){this.innerHTML=n}})(n)):this.node().innerHTML},raise:function(){return this.each(S)},lower:function(){return this.each(k)},append:function(n){var t=\"function\"==typeof n?n:o(n);return this.select(function(){return this.appendChild(t.apply(this,arguments))})},insert:function(n,t){var e=\"function\"==typeof n?n:o(n),r=null==t?E:\"function\"==typeof t?t:c(t);return this.select(function(){return this.insertBefore(e.apply(this,arguments),r.apply(this,arguments)||null)})},remove:function(){return this.each(C)},clone:function(n){return this.select(n?z:P)},datum:function(n){return arguments.length?this.property(\"__data__\",n):this.node().__data__},on:function(n,t,e){var r,i,u=function(n){return n.trim().split(/^|\\s+/).map(function(n){var t=\"\",e=n.indexOf(\".\");return e>=0&&(t=n.slice(e+1),n=n.slice(0,e)),{type:n,name:t}})}(n+\"\"),o=u.length;if(!(arguments.length<2)){for(a=t?U:q,null==e&&(e=!1),r=0;r<o;++r)this.each(a(u[r],t,e));return this}var a=this.node().__on;if(a)for(var c,f=0,s=a.length;f<s;++f)for(r=0,c=a[f];r<o;++r)if((i=u[r]).type===c.type&&i.name===c.name)return c.value},dispatch:function(n,t){return this.each((\"function\"==typeof t?function(n,t){return function(){return B(this,n,t.apply(this,arguments))}}:function(n,t){return function(){return B(this,n,t)}})(n,t))}};var H=I,X=function(n){return\"string\"==typeof n?new F([[document.querySelector(n)]],[document.documentElement]):new F([[n]],Y)},G=function(n){return X(o(n).call(document.documentElement))},V=0;function $(){return new W}function W(){this._=\"@\"+(++V).toString(36)}W.prototype=$.prototype={constructor:W,get:function(n){for(var t=this._;!(t in n);)if(!(n=n.parentNode))return;return n[t]},set:function(n,t){return n[this._]=t},remove:function(n){return this._ in n&&delete n[this._]},toString:function(){return this._}};var Z=function(){for(var n,t=R;n=t.sourceEvent;)t=n;return t},Q=function(n,t){var e=n.ownerSVGElement||n;if(e.createSVGPoint){var r=e.createSVGPoint();return r.x=t.clientX,r.y=t.clientY,[(r=r.matrixTransform(n.getScreenCTM().inverse())).x,r.y]}var i=n.getBoundingClientRect();return[t.clientX-i.left-n.clientLeft,t.clientY-i.top-n.clientTop]},J=function(n){var t=Z();return t.changedTouches&&(t=t.changedTouches[0]),Q(n,t)},K=function(n){return\"string\"==typeof n?new F([document.querySelectorAll(n)],[document.documentElement]):new F([null==n?[]:n],Y)},nn=function(n,t,e){arguments.length<3&&(e=t,t=Z().changedTouches);for(var r,i=0,u=t?t.length:0;i<u;++i)if((r=t[i]).identifier===e)return Q(n,r);return null},tn=function(n,t){null==t&&(t=Z().touches);for(var e=0,r=t?t.length:0,i=new Array(r);e<r;++e)i[e]=Q(n,t[e]);return i};e.d(t,\"create\",function(){return G}),e.d(t,\"creator\",function(){return o}),e.d(t,\"local\",function(){return $}),e.d(t,\"matcher\",function(){return l}),e.d(t,\"mouse\",function(){return J}),e.d(t,\"namespace\",function(){return u}),e.d(t,\"namespaces\",function(){return i}),e.d(t,\"clientPoint\",function(){return Q}),e.d(t,\"select\",function(){return X}),e.d(t,\"selectAll\",function(){return K}),e.d(t,\"selection\",function(){return H}),e.d(t,\"selector\",function(){return c}),e.d(t,\"selectorAll\",function(){return s}),e.d(t,\"style\",function(){return _}),e.d(t,\"touch\",function(){return nn}),e.d(t,\"touches\",function(){return tn}),e.d(t,\"window\",function(){return b}),e.d(t,\"event\",function(){return R}),e.d(t,\"customEvent\",function(){return j})},,,,,,function(n,t,e){e(7)},function(n,t,e){const r=e(8);e(0);var i,u,o=document.querySelector(\".display\"),a=document.querySelector(\"#example\"),c=20,f=20,s=20,l=40,h=o.offsetWidth-l-f,d=.3*h-c-s,p=+o.offsetWidth,v=.4*+o.offsetWidth;i=r.select(\"svg\").attr(\"width\",p).attr(\"height\",v),u=i.append(\"g\").attr(\"transform\",\"translate(\"+l+\",\"+c+\")\"),a.offsetWidth,a.offsetHeight;var g=r.timeParse(\"%d-%b-%y\"),y=r.scaleTime().range([0,h]),b=r.scaleLinear().range([d,0]),_=r.line().x(function(n){return y(n.date)}).y(function(n){return b(n.close)}).curve(r.curveLinear);r.csv(\"data/data.csv\").then(function(n,t){if(t)throw t;n.forEach(function(n){n.date=g(n.date),n.close=+n.close}),y.domain(r.extent(n,function(n){return n.date})),b.domain([0,r.max(n,function(n){return n.close})]),u.append(\"path\").data([n]).attrs({d:_,fill:\"none\",stroke:\"#fff\",\"stroke-width\":\"2px\"});u.selectAll(\"circle\").data(n).enter().append(\"circle\").attrs({cx:function(n){return y(n.date)},cy:function(n){return b(n.close)},r:5,fill:\"#fff\"});u.append(\"g\").attr(\"transform\",\"translate(0,\"+d+\")\").call(r.axisBottom(y)),u.append(\"g\").call(r.axisLeft(b))})},function(n,t,e){\"use strict\";e.r(t);var r=function(n,t){return n<t?-1:n>t?1:n>=t?0:NaN},i=function(n){var t;return 1===n.length&&(t=n,n=function(n,e){return r(t(n),e)}),{left:function(t,e,r,i){for(null==r&&(r=0),null==i&&(i=t.length);r<i;){var u=r+i>>>1;n(t[u],e)<0?r=u+1:i=u}return r},right:function(t,e,r,i){for(null==r&&(r=0),null==i&&(i=t.length);r<i;){var u=r+i>>>1;n(t[u],e)>0?i=u:r=u+1}return r}}};var u=i(r),o=u.right,a=u.left,c=o,f=function(n,t){null==t&&(t=s);for(var e=0,r=n.length-1,i=n[0],u=new Array(r<0?0:r);e<r;)u[e]=t(i,i=n[++e]);return u};function s(n,t){return[n,t]}var l=function(n,t,e){var r,i,u,o,a=n.length,c=t.length,f=new Array(a*c);for(null==e&&(e=s),r=u=0;r<a;++r)for(o=n[r],i=0;i<c;++i,++u)f[u]=e(o,t[i]);return f},h=function(n,t){return t<n?-1:t>n?1:t>=n?0:NaN},d=function(n){return null===n?NaN:+n},p=function(n,t){var e,r,i=n.length,u=0,o=-1,a=0,c=0;if(null==t)for(;++o<i;)isNaN(e=d(n[o]))||(c+=(r=e-a)*(e-(a+=r/++u)));else for(;++o<i;)isNaN(e=d(t(n[o],o,n)))||(c+=(r=e-a)*(e-(a+=r/++u)));if(u>1)return c/(u-1)},v=function(n,t){var e=p(n,t);return e?Math.sqrt(e):e},g=function(n,t){var e,r,i,u=n.length,o=-1;if(null==t){for(;++o<u;)if(null!=(e=n[o])&&e>=e)for(r=i=e;++o<u;)null!=(e=n[o])&&(r>e&&(r=e),i<e&&(i=e))}else for(;++o<u;)if(null!=(e=t(n[o],o,n))&&e>=e)for(r=i=e;++o<u;)null!=(e=t(n[o],o,n))&&(r>e&&(r=e),i<e&&(i=e));return[r,i]},y=Array.prototype,b=y.slice,_=y.map,m=function(n){return function(){return n}},x=function(n){return n},w=function(n,t,e){n=+n,t=+t,e=(i=arguments.length)<2?(t=n,n=0,1):i<3?1:+e;for(var r=-1,i=0|Math.max(0,Math.ceil((t-n)/e)),u=new Array(i);++r<i;)u[r]=n+r*e;return u},M=Math.sqrt(50),N=Math.sqrt(10),A=Math.sqrt(2),T=function(n,t,e){var r,i,u,o,a=-1;if(e=+e,(n=+n)===(t=+t)&&e>0)return[n];if((r=t<n)&&(i=n,n=t,t=i),0===(o=S(n,t,e))||!isFinite(o))return[];if(o>0)for(n=Math.ceil(n/o),t=Math.floor(t/o),u=new Array(i=Math.ceil(t-n+1));++a<i;)u[a]=(n+a)*o;else for(n=Math.floor(n*o),t=Math.ceil(t*o),u=new Array(i=Math.ceil(n-t+1));++a<i;)u[a]=(n-a)/o;return r&&u.reverse(),u};function S(n,t,e){var r=(t-n)/Math.max(0,e),i=Math.floor(Math.log(r)/Math.LN10),u=r/Math.pow(10,i);return i>=0?(u>=M?10:u>=N?5:u>=A?2:1)*Math.pow(10,i):-Math.pow(10,-i)/(u>=M?10:u>=N?5:u>=A?2:1)}function k(n,t,e){var r=Math.abs(t-n)/Math.max(0,e),i=Math.pow(10,Math.floor(Math.log(r)/Math.LN10)),u=r/i;return u>=M?i*=10:u>=N?i*=5:u>=A&&(i*=2),t<n?-i:i}var E=function(n){return Math.ceil(Math.log(n.length)/Math.LN2)+1},C=function(){var n=x,t=g,e=E;function r(r){var i,u,o=r.length,a=new Array(o);for(i=0;i<o;++i)a[i]=n(r[i],i,r);var f=t(a),s=f[0],l=f[1],h=e(a,s,l);Array.isArray(h)||(h=k(s,l,h),h=w(Math.ceil(s/h)*h,l,h));for(var d=h.length;h[0]<=s;)h.shift(),--d;for(;h[d-1]>l;)h.pop(),--d;var p,v=new Array(d+1);for(i=0;i<=d;++i)(p=v[i]=[]).x0=i>0?h[i-1]:s,p.x1=i<d?h[i]:l;for(i=0;i<o;++i)s<=(u=a[i])&&u<=l&&v[c(h,u,0,d)].push(r[i]);return v}return r.value=function(t){return arguments.length?(n=\"function\"==typeof t?t:m(t),r):n},r.domain=function(n){return arguments.length?(t=\"function\"==typeof n?n:m([n[0],n[1]]),r):t},r.thresholds=function(n){return arguments.length?(e=\"function\"==typeof n?n:Array.isArray(n)?m(b.call(n)):m(n),r):e},r},P=function(n,t,e){if(null==e&&(e=d),r=n.length){if((t=+t)<=0||r<2)return+e(n[0],0,n);if(t>=1)return+e(n[r-1],r-1,n);var r,i=(r-1)*t,u=Math.floor(i),o=+e(n[u],u,n);return o+(+e(n[u+1],u+1,n)-o)*(i-u)}},z=function(n,t,e){return n=_.call(n,d).sort(r),Math.ceil((e-t)/(2*(P(n,.75)-P(n,.25))*Math.pow(n.length,-1/3)))},O=function(n,t,e){return Math.ceil((e-t)/(3.5*v(n)*Math.pow(n.length,-1/3)))},R=function(n,t){var e,r,i=n.length,u=-1;if(null==t){for(;++u<i;)if(null!=(e=n[u])&&e>=e)for(r=e;++u<i;)null!=(e=n[u])&&e>r&&(r=e)}else for(;++u<i;)if(null!=(e=t(n[u],u,n))&&e>=e)for(r=e;++u<i;)null!=(e=t(n[u],u,n))&&e>r&&(r=e);return r},D=function(n,t){var e,r=n.length,i=r,u=-1,o=0;if(null==t)for(;++u<r;)isNaN(e=d(n[u]))?--i:o+=e;else for(;++u<r;)isNaN(e=d(t(n[u],u,n)))?--i:o+=e;if(i)return o/i},L=function(n,t){var e,i=n.length,u=-1,o=[];if(null==t)for(;++u<i;)isNaN(e=d(n[u]))||o.push(e);else for(;++u<i;)isNaN(e=d(t(n[u],u,n)))||o.push(e);return P(o.sort(r),.5)},q=function(n){for(var t,e,r,i=n.length,u=-1,o=0;++u<i;)o+=n[u].length;for(e=new Array(o);--i>=0;)for(t=(r=n[i]).length;--t>=0;)e[--o]=r[t];return e},U=function(n,t){var e,r,i=n.length,u=-1;if(null==t){for(;++u<i;)if(null!=(e=n[u])&&e>=e)for(r=e;++u<i;)null!=(e=n[u])&&r>e&&(r=e)}else for(;++u<i;)if(null!=(e=t(n[u],u,n))&&e>=e)for(r=e;++u<i;)null!=(e=t(n[u],u,n))&&r>e&&(r=e);return r},j=function(n,t){for(var e=t.length,r=new Array(e);e--;)r[e]=n[t[e]];return r},B=function(n,t){if(e=n.length){var e,i,u=0,o=0,a=n[o];for(null==t&&(t=r);++u<e;)(t(i=n[u],a)<0||0!==t(a,a))&&(a=i,o=u);return 0===t(a,a)?o:void 0}},Y=function(n,t,e){for(var r,i,u=(null==e?n.length:e)-(t=null==t?0:+t);u;)i=Math.random()*u--|0,r=n[u+t],n[u+t]=n[i+t],n[i+t]=r;return n},F=function(n,t){var e,r=n.length,i=-1,u=0;if(null==t)for(;++i<r;)(e=+n[i])&&(u+=e);else for(;++i<r;)(e=+t(n[i],i,n))&&(u+=e);return u},I=function(n){if(!(i=n.length))return[];for(var t=-1,e=U(n,H),r=new Array(e);++t<e;)for(var i,u=-1,o=r[t]=new Array(i);++u<i;)o[u]=n[u][t];return r};function H(n){return n.length}var X=function(){return I(arguments)},G=Array.prototype.slice,V=function(n){return n},$=1,W=2,Z=3,Q=4,J=1e-6;function K(n){return\"translate(\"+(n+.5)+\",0)\"}function nn(n){return\"translate(0,\"+(n+.5)+\")\"}function tn(){return!this.__axis}function en(n,t){var e=[],r=null,i=null,u=6,o=6,a=3,c=n===$||n===Q?-1:1,f=n===Q||n===W?\"x\":\"y\",s=n===$||n===Z?K:nn;function l(l){var h=null==r?t.ticks?t.ticks.apply(t,e):t.domain():r,d=null==i?t.tickFormat?t.tickFormat.apply(t,e):V:i,p=Math.max(u,0)+a,v=t.range(),g=+v[0]+.5,y=+v[v.length-1]+.5,b=(t.bandwidth?function(n){var t=Math.max(0,n.bandwidth()-1)/2;return n.round()&&(t=Math.round(t)),function(e){return+n(e)+t}}:function(n){return function(t){return+n(t)}})(t.copy()),_=l.selection?l.selection():l,m=_.selectAll(\".domain\").data([null]),x=_.selectAll(\".tick\").data(h,t).order(),w=x.exit(),M=x.enter().append(\"g\").attr(\"class\",\"tick\"),N=x.select(\"line\"),A=x.select(\"text\");m=m.merge(m.enter().insert(\"path\",\".tick\").attr(\"class\",\"domain\").attr(\"stroke\",\"currentColor\")),x=x.merge(M),N=N.merge(M.append(\"line\").attr(\"stroke\",\"currentColor\").attr(f+\"2\",c*u)),A=A.merge(M.append(\"text\").attr(\"fill\",\"currentColor\").attr(f,c*p).attr(\"dy\",n===$?\"0em\":n===Z?\"0.71em\":\"0.32em\")),l!==_&&(m=m.transition(l),x=x.transition(l),N=N.transition(l),A=A.transition(l),w=w.transition(l).attr(\"opacity\",J).attr(\"transform\",function(n){return isFinite(n=b(n))?s(n):this.getAttribute(\"transform\")}),M.attr(\"opacity\",J).attr(\"transform\",function(n){var t=this.parentNode.__axis;return s(t&&isFinite(t=t(n))?t:b(n))})),w.remove(),m.attr(\"d\",n===Q||n==W?o?\"M\"+c*o+\",\"+g+\"H0.5V\"+y+\"H\"+c*o:\"M0.5,\"+g+\"V\"+y:o?\"M\"+g+\",\"+c*o+\"V0.5H\"+y+\"V\"+c*o:\"M\"+g+\",0.5H\"+y),x.attr(\"opacity\",1).attr(\"transform\",function(n){return s(b(n))}),N.attr(f+\"2\",c*u),A.attr(f,c*p).text(d),_.filter(tn).attr(\"fill\",\"none\").attr(\"font-size\",10).attr(\"font-family\",\"sans-serif\").attr(\"text-anchor\",n===W?\"start\":n===Q?\"end\":\"middle\"),_.each(function(){this.__axis=b})}return l.scale=function(n){return arguments.length?(t=n,l):t},l.ticks=function(){return e=G.call(arguments),l},l.tickArguments=function(n){return arguments.length?(e=null==n?[]:G.call(n),l):e.slice()},l.tickValues=function(n){return arguments.length?(r=null==n?null:G.call(n),l):r&&r.slice()},l.tickFormat=function(n){return arguments.length?(i=n,l):i},l.tickSize=function(n){return arguments.length?(u=o=+n,l):u},l.tickSizeInner=function(n){return arguments.length?(u=+n,l):u},l.tickSizeOuter=function(n){return arguments.length?(o=+n,l):o},l.tickPadding=function(n){return arguments.length?(a=+n,l):a},l}function rn(n){return en($,n)}function un(n){return en(W,n)}function on(n){return en(Z,n)}function an(n){return en(Q,n)}var cn={value:function(){}};function fn(){for(var n,t=0,e=arguments.length,r={};t<e;++t){if(!(n=arguments[t]+\"\")||n in r)throw new Error(\"illegal type: \"+n);r[n]=[]}return new sn(r)}function sn(n){this._=n}function ln(n,t){for(var e,r=0,i=n.length;r<i;++r)if((e=n[r]).name===t)return e.value}function hn(n,t,e){for(var r=0,i=n.length;r<i;++r)if(n[r].name===t){n[r]=cn,n=n.slice(0,r).concat(n.slice(r+1));break}return null!=e&&n.push({name:t,value:e}),n}sn.prototype=fn.prototype={constructor:sn,on:function(n,t){var e,r,i=this._,u=(r=i,(n+\"\").trim().split(/^|\\s+/).map(function(n){var t=\"\",e=n.indexOf(\".\");if(e>=0&&(t=n.slice(e+1),n=n.slice(0,e)),n&&!r.hasOwnProperty(n))throw new Error(\"unknown type: \"+n);return{type:n,name:t}})),o=-1,a=u.length;if(!(arguments.length<2)){if(null!=t&&\"function\"!=typeof t)throw new Error(\"invalid callback: \"+t);for(;++o<a;)if(e=(n=u[o]).type)i[e]=hn(i[e],n.name,t);else if(null==t)for(e in i)i[e]=hn(i[e],n.name,null);return this}for(;++o<a;)if((e=(n=u[o]).type)&&(e=ln(i[e],n.name)))return e},copy:function(){var n={},t=this._;for(var e in t)n[e]=t[e].slice();return new sn(n)},call:function(n,t){if((e=arguments.length-2)>0)for(var e,r,i=new Array(e),u=0;u<e;++u)i[u]=arguments[u+2];if(!this._.hasOwnProperty(n))throw new Error(\"unknown type: \"+n);for(u=0,e=(r=this._[n]).length;u<e;++u)r[u].value.apply(t,i)},apply:function(n,t,e){if(!this._.hasOwnProperty(n))throw new Error(\"unknown type: \"+n);for(var r=this._[n],i=0,u=r.length;i<u;++i)r[i].value.apply(t,e)}};var dn=fn,pn=e(0);function vn(){pn.event.stopImmediatePropagation()}var gn=function(){pn.event.preventDefault(),pn.event.stopImmediatePropagation()},yn=function(n){var t=n.document.documentElement,e=Object(pn.select)(n).on(\"dragstart.drag\",gn,!0);\"onselectstart\"in t?e.on(\"selectstart.drag\",gn,!0):(t.__noselect=t.style.MozUserSelect,t.style.MozUserSelect=\"none\")};function bn(n,t){var e=n.document.documentElement,r=Object(pn.select)(n).on(\"dragstart.drag\",null);t&&(r.on(\"click.drag\",gn,!0),setTimeout(function(){r.on(\"click.drag\",null)},0)),\"onselectstart\"in e?r.on(\"selectstart.drag\",null):(e.style.MozUserSelect=e.__noselect,delete e.__noselect)}var _n=function(n){return function(){return n}};function mn(n,t,e,r,i,u,o,a,c,f){this.target=n,this.type=t,this.subject=e,this.identifier=r,this.active=i,this.x=u,this.y=o,this.dx=a,this.dy=c,this._=f}function xn(){return!pn.event.button}function wn(){return this.parentNode}function Mn(n){return null==n?{x:pn.event.x,y:pn.event.y}:n}function Nn(){return\"ontouchstart\"in this}mn.prototype.on=function(){var n=this._.on.apply(this._,arguments);return n===this._?this:n};var An=function(){var n,t,e,r,i=xn,u=wn,o=Mn,a=Nn,c={},f=dn(\"start\",\"drag\",\"end\"),s=0,l=0;function h(n){n.on(\"mousedown.drag\",d).filter(a).on(\"touchstart.drag\",g).on(\"touchmove.drag\",y).on(\"touchend.drag touchcancel.drag\",b).style(\"touch-action\",\"none\").style(\"-webkit-tap-highlight-color\",\"rgba(0,0,0,0)\")}function d(){if(!r&&i.apply(this,arguments)){var o=_(\"mouse\",u.apply(this,arguments),pn.mouse,this,arguments);o&&(Object(pn.select)(pn.event.view).on(\"mousemove.drag\",p,!0).on(\"mouseup.drag\",v,!0),yn(pn.event.view),vn(),e=!1,n=pn.event.clientX,t=pn.event.clientY,o(\"start\"))}}function p(){if(gn(),!e){var r=pn.event.clientX-n,i=pn.event.clientY-t;e=r*r+i*i>l}c.mouse(\"drag\")}function v(){Object(pn.select)(pn.event.view).on(\"mousemove.drag mouseup.drag\",null),bn(pn.event.view,e),gn(),c.mouse(\"end\")}function g(){if(i.apply(this,arguments)){var n,t,e=pn.event.changedTouches,r=u.apply(this,arguments),o=e.length;for(n=0;n<o;++n)(t=_(e[n].identifier,r,pn.touch,this,arguments))&&(vn(),t(\"start\"))}}function y(){var n,t,e=pn.event.changedTouches,r=e.length;for(n=0;n<r;++n)(t=c[e[n].identifier])&&(gn(),t(\"drag\"))}function b(){var n,t,e=pn.event.changedTouches,i=e.length;for(r&&clearTimeout(r),r=setTimeout(function(){r=null},500),n=0;n<i;++n)(t=c[e[n].identifier])&&(vn(),t(\"end\"))}function _(n,t,e,r,i){var u,a,l,d=e(t,n),p=f.copy();if(Object(pn.customEvent)(new mn(h,\"beforestart\",u,n,s,d[0],d[1],0,0,p),function(){return null!=(pn.event.subject=u=o.apply(r,i))&&(a=u.x-d[0]||0,l=u.y-d[1]||0,!0)}))return function o(f){var v,g=d;switch(f){case\"start\":c[n]=o,v=s++;break;case\"end\":delete c[n],--s;case\"drag\":d=e(t,n),v=s}Object(pn.customEvent)(new mn(h,f,u,n,v,d[0]+a,d[1]+l,d[0]-g[0],d[1]-g[1],p),p.apply,p,[f,r,i])}}return h.filter=function(n){return arguments.length?(i=\"function\"==typeof n?n:_n(!!n),h):i},h.container=function(n){return arguments.length?(u=\"function\"==typeof n?n:_n(n),h):u},h.subject=function(n){return arguments.length?(o=\"function\"==typeof n?n:_n(n),h):o},h.touchable=function(n){return arguments.length?(a=\"function\"==typeof n?n:_n(!!n),h):a},h.on=function(){var n=f.on.apply(f,arguments);return n===f?h:n},h.clickDistance=function(n){return arguments.length?(l=(n=+n)*n,h):Math.sqrt(l)},h},Tn=function(n,t,e){n.prototype=t.prototype=e,e.constructor=n};function Sn(n,t){var e=Object.create(n.prototype);for(var r in t)e[r]=t[r];return e}function kn(){}var En=\"\\\\s*([+-]?\\\\d+)\\\\s*\",Cn=\"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",Pn=\"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",zn=/^#([0-9a-f]{3})$/,On=/^#([0-9a-f]{6})$/,Rn=new RegExp(\"^rgb\\\\(\"+[En,En,En]+\"\\\\)$\"),Dn=new RegExp(\"^rgb\\\\(\"+[Pn,Pn,Pn]+\"\\\\)$\"),Ln=new RegExp(\"^rgba\\\\(\"+[En,En,En,Cn]+\"\\\\)$\"),qn=new RegExp(\"^rgba\\\\(\"+[Pn,Pn,Pn,Cn]+\"\\\\)$\"),Un=new RegExp(\"^hsl\\\\(\"+[Cn,Pn,Pn]+\"\\\\)$\"),jn=new RegExp(\"^hsla\\\\(\"+[Cn,Pn,Pn,Cn]+\"\\\\)$\"),Bn={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};function Yn(n){var t;return n=(n+\"\").trim().toLowerCase(),(t=zn.exec(n))?new Gn((t=parseInt(t[1],16))>>8&15|t>>4&240,t>>4&15|240&t,(15&t)<<4|15&t,1):(t=On.exec(n))?Fn(parseInt(t[1],16)):(t=Rn.exec(n))?new Gn(t[1],t[2],t[3],1):(t=Dn.exec(n))?new Gn(255*t[1]/100,255*t[2]/100,255*t[3]/100,1):(t=Ln.exec(n))?In(t[1],t[2],t[3],t[4]):(t=qn.exec(n))?In(255*t[1]/100,255*t[2]/100,255*t[3]/100,t[4]):(t=Un.exec(n))?$n(t[1],t[2]/100,t[3]/100,1):(t=jn.exec(n))?$n(t[1],t[2]/100,t[3]/100,t[4]):Bn.hasOwnProperty(n)?Fn(Bn[n]):\"transparent\"===n?new Gn(NaN,NaN,NaN,0):null}function Fn(n){return new Gn(n>>16&255,n>>8&255,255&n,1)}function In(n,t,e,r){return r<=0&&(n=t=e=NaN),new Gn(n,t,e,r)}function Hn(n){return n instanceof kn||(n=Yn(n)),n?new Gn((n=n.rgb()).r,n.g,n.b,n.opacity):new Gn}function Xn(n,t,e,r){return 1===arguments.length?Hn(n):new Gn(n,t,e,null==r?1:r)}function Gn(n,t,e,r){this.r=+n,this.g=+t,this.b=+e,this.opacity=+r}function Vn(n){return((n=Math.max(0,Math.min(255,Math.round(n)||0)))<16?\"0\":\"\")+n.toString(16)}function $n(n,t,e,r){return r<=0?n=t=e=NaN:e<=0||e>=1?n=t=NaN:t<=0&&(n=NaN),new Zn(n,t,e,r)}function Wn(n,t,e,r){return 1===arguments.length?function(n){if(n instanceof Zn)return new Zn(n.h,n.s,n.l,n.opacity);if(n instanceof kn||(n=Yn(n)),!n)return new Zn;if(n instanceof Zn)return n;var t=(n=n.rgb()).r/255,e=n.g/255,r=n.b/255,i=Math.min(t,e,r),u=Math.max(t,e,r),o=NaN,a=u-i,c=(u+i)/2;return a?(o=t===u?(e-r)/a+6*(e<r):e===u?(r-t)/a+2:(t-e)/a+4,a/=c<.5?u+i:2-u-i,o*=60):a=c>0&&c<1?0:o,new Zn(o,a,c,n.opacity)}(n):new Zn(n,t,e,null==r?1:r)}function Zn(n,t,e,r){this.h=+n,this.s=+t,this.l=+e,this.opacity=+r}function Qn(n,t,e){return 255*(n<60?t+(e-t)*n/60:n<180?e:n<240?t+(e-t)*(240-n)/60:t)}Tn(kn,Yn,{displayable:function(){return this.rgb().displayable()},hex:function(){return this.rgb().hex()},toString:function(){return this.rgb()+\"\"}}),Tn(Gn,Xn,Sn(kn,{brighter:function(n){return n=null==n?1/.7:Math.pow(1/.7,n),new Gn(this.r*n,this.g*n,this.b*n,this.opacity)},darker:function(n){return n=null==n?.7:Math.pow(.7,n),new Gn(this.r*n,this.g*n,this.b*n,this.opacity)},rgb:function(){return this},displayable:function(){return 0<=this.r&&this.r<=255&&0<=this.g&&this.g<=255&&0<=this.b&&this.b<=255&&0<=this.opacity&&this.opacity<=1},hex:function(){return\"#\"+Vn(this.r)+Vn(this.g)+Vn(this.b)},toString:function(){var n=this.opacity;return(1===(n=isNaN(n)?1:Math.max(0,Math.min(1,n)))?\"rgb(\":\"rgba(\")+Math.max(0,Math.min(255,Math.round(this.r)||0))+\", \"+Math.max(0,Math.min(255,Math.round(this.g)||0))+\", \"+Math.max(0,Math.min(255,Math.round(this.b)||0))+(1===n?\")\":\", \"+n+\")\")}})),Tn(Zn,Wn,Sn(kn,{brighter:function(n){return n=null==n?1/.7:Math.pow(1/.7,n),new Zn(this.h,this.s,this.l*n,this.opacity)},darker:function(n){return n=null==n?.7:Math.pow(.7,n),new Zn(this.h,this.s,this.l*n,this.opacity)},rgb:function(){var n=this.h%360+360*(this.h<0),t=isNaN(n)||isNaN(this.s)?0:this.s,e=this.l,r=e+(e<.5?e:1-e)*t,i=2*e-r;return new Gn(Qn(n>=240?n-240:n+120,i,r),Qn(n,i,r),Qn(n<120?n+240:n-120,i,r),this.opacity)},displayable:function(){return(0<=this.s&&this.s<=1||isNaN(this.s))&&0<=this.l&&this.l<=1&&0<=this.opacity&&this.opacity<=1}}));var Jn=Math.PI/180,Kn=180/Math.PI,nt=.96422,tt=1,et=.82521,rt=4/29,it=6/29,ut=3*it*it,ot=it*it*it;function at(n){if(n instanceof st)return new st(n.l,n.a,n.b,n.opacity);if(n instanceof bt){if(isNaN(n.h))return new st(n.l,0,0,n.opacity);var t=n.h*Jn;return new st(n.l,Math.cos(t)*n.c,Math.sin(t)*n.c,n.opacity)}n instanceof Gn||(n=Hn(n));var e,r,i=pt(n.r),u=pt(n.g),o=pt(n.b),a=lt((.2225045*i+.7168786*u+.0606169*o)/tt);return i===u&&u===o?e=r=a:(e=lt((.4360747*i+.3850649*u+.1430804*o)/nt),r=lt((.0139322*i+.0971045*u+.7141733*o)/et)),new st(116*a-16,500*(e-a),200*(a-r),n.opacity)}function ct(n,t){return new st(n,0,0,null==t?1:t)}function ft(n,t,e,r){return 1===arguments.length?at(n):new st(n,t,e,null==r?1:r)}function st(n,t,e,r){this.l=+n,this.a=+t,this.b=+e,this.opacity=+r}function lt(n){return n>ot?Math.pow(n,1/3):n/ut+rt}function ht(n){return n>it?n*n*n:ut*(n-rt)}function dt(n){return 255*(n<=.0031308?12.92*n:1.055*Math.pow(n,1/2.4)-.055)}function pt(n){return(n/=255)<=.04045?n/12.92:Math.pow((n+.055)/1.055,2.4)}function vt(n){if(n instanceof bt)return new bt(n.h,n.c,n.l,n.opacity);if(n instanceof st||(n=at(n)),0===n.a&&0===n.b)return new bt(NaN,0,n.l,n.opacity);var t=Math.atan2(n.b,n.a)*Kn;return new bt(t<0?t+360:t,Math.sqrt(n.a*n.a+n.b*n.b),n.l,n.opacity)}function gt(n,t,e,r){return 1===arguments.length?vt(n):new bt(e,t,n,null==r?1:r)}function yt(n,t,e,r){return 1===arguments.length?vt(n):new bt(n,t,e,null==r?1:r)}function bt(n,t,e,r){this.h=+n,this.c=+t,this.l=+e,this.opacity=+r}Tn(st,ft,Sn(kn,{brighter:function(n){return new st(this.l+18*(null==n?1:n),this.a,this.b,this.opacity)},darker:function(n){return new st(this.l-18*(null==n?1:n),this.a,this.b,this.opacity)},rgb:function(){var n=(this.l+16)/116,t=isNaN(this.a)?n:n+this.a/500,e=isNaN(this.b)?n:n-this.b/200;return new Gn(dt(3.1338561*(t=nt*ht(t))-1.6168667*(n=tt*ht(n))-.4906146*(e=et*ht(e))),dt(-.9787684*t+1.9161415*n+.033454*e),dt(.0719453*t-.2289914*n+1.4052427*e),this.opacity)}})),Tn(bt,yt,Sn(kn,{brighter:function(n){return new bt(this.h,this.c,this.l+18*(null==n?1:n),this.opacity)},darker:function(n){return new bt(this.h,this.c,this.l-18*(null==n?1:n),this.opacity)},rgb:function(){return at(this).rgb()}}));var _t=-.29227,mt=-.90649,xt=1.97294,wt=xt*mt,Mt=1.78277*xt,Nt=1.78277*_t- -.14861*mt;function At(n,t,e,r){return 1===arguments.length?function(n){if(n instanceof Tt)return new Tt(n.h,n.s,n.l,n.opacity);n instanceof Gn||(n=Hn(n));var t=n.r/255,e=n.g/255,r=n.b/255,i=(Nt*r+wt*t-Mt*e)/(Nt+wt-Mt),u=r-i,o=(xt*(e-i)-_t*u)/mt,a=Math.sqrt(o*o+u*u)/(xt*i*(1-i)),c=a?Math.atan2(o,u)*Kn-120:NaN;return new Tt(c<0?c+360:c,a,i,n.opacity)}(n):new Tt(n,t,e,null==r?1:r)}function Tt(n,t,e,r){this.h=+n,this.s=+t,this.l=+e,this.opacity=+r}function St(n,t,e,r,i){var u=n*n,o=u*n;return((1-3*n+3*u-o)*t+(4-6*u+3*o)*e+(1+3*n+3*u-3*o)*r+o*i)/6}Tn(Tt,At,Sn(kn,{brighter:function(n){return n=null==n?1/.7:Math.pow(1/.7,n),new Tt(this.h,this.s,this.l*n,this.opacity)},darker:function(n){return n=null==n?.7:Math.pow(.7,n),new Tt(this.h,this.s,this.l*n,this.opacity)},rgb:function(){var n=isNaN(this.h)?0:(this.h+120)*Jn,t=+this.l,e=isNaN(this.s)?0:this.s*t*(1-t),r=Math.cos(n),i=Math.sin(n);return new Gn(255*(t+e*(-.14861*r+1.78277*i)),255*(t+e*(_t*r+mt*i)),255*(t+e*(xt*r)),this.opacity)}}));var kt=function(n){var t=n.length-1;return function(e){var r=e<=0?e=0:e>=1?(e=1,t-1):Math.floor(e*t),i=n[r],u=n[r+1],o=r>0?n[r-1]:2*i-u,a=r<t-1?n[r+2]:2*u-i;return St((e-r/t)*t,o,i,u,a)}},Et=function(n){var t=n.length;return function(e){var r=Math.floor(((e%=1)<0?++e:e)*t),i=n[(r+t-1)%t],u=n[r%t],o=n[(r+1)%t],a=n[(r+2)%t];return St((e-r/t)*t,i,u,o,a)}},Ct=function(n){return function(){return n}};function Pt(n,t){return function(e){return n+e*t}}function zt(n,t){var e=t-n;return e?Pt(n,e>180||e<-180?e-360*Math.round(e/360):e):Ct(isNaN(n)?t:n)}function Ot(n){return 1==(n=+n)?Rt:function(t,e){return e-t?function(n,t,e){return n=Math.pow(n,e),t=Math.pow(t,e)-n,e=1/e,function(r){return Math.pow(n+r*t,e)}}(t,e,n):Ct(isNaN(t)?e:t)}}function Rt(n,t){var e=t-n;return e?Pt(n,e):Ct(isNaN(n)?t:n)}var Dt=function n(t){var e=Ot(t);function r(n,t){var r=e((n=Xn(n)).r,(t=Xn(t)).r),i=e(n.g,t.g),u=e(n.b,t.b),o=Rt(n.opacity,t.opacity);return function(t){return n.r=r(t),n.g=i(t),n.b=u(t),n.opacity=o(t),n+\"\"}}return r.gamma=n,r}(1);function Lt(n){return function(t){var e,r,i=t.length,u=new Array(i),o=new Array(i),a=new Array(i);for(e=0;e<i;++e)r=Xn(t[e]),u[e]=r.r||0,o[e]=r.g||0,a[e]=r.b||0;return u=n(u),o=n(o),a=n(a),r.opacity=1,function(n){return r.r=u(n),r.g=o(n),r.b=a(n),r+\"\"}}}var qt=Lt(kt),Ut=Lt(Et),jt=function(n,t){var e,r=t?t.length:0,i=n?Math.min(r,n.length):0,u=new Array(i),o=new Array(r);for(e=0;e<i;++e)u[e]=Zt(n[e],t[e]);for(;e<r;++e)o[e]=t[e];return function(n){for(e=0;e<i;++e)o[e]=u[e](n);return o}},Bt=function(n,t){var e=new Date;return t-=n=+n,function(r){return e.setTime(n+t*r),e}},Yt=function(n,t){return t-=n=+n,function(e){return n+t*e}},Ft=function(n,t){var e,r={},i={};for(e in null!==n&&\"object\"==typeof n||(n={}),null!==t&&\"object\"==typeof t||(t={}),t)e in n?r[e]=Zt(n[e],t[e]):i[e]=t[e];return function(n){for(e in r)i[e]=r[e](n);return i}},It=/[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,Ht=new RegExp(It.source,\"g\");var Xt,Gt,Vt,$t,Wt=function(n,t){var e,r,i,u=It.lastIndex=Ht.lastIndex=0,o=-1,a=[],c=[];for(n+=\"\",t+=\"\";(e=It.exec(n))&&(r=Ht.exec(t));)(i=r.index)>u&&(i=t.slice(u,i),a[o]?a[o]+=i:a[++o]=i),(e=e[0])===(r=r[0])?a[o]?a[o]+=r:a[++o]=r:(a[++o]=null,c.push({i:o,x:Yt(e,r)})),u=Ht.lastIndex;return u<t.length&&(i=t.slice(u),a[o]?a[o]+=i:a[++o]=i),a.length<2?c[0]?function(n){return function(t){return n(t)+\"\"}}(c[0].x):function(n){return function(){return n}}(t):(t=c.length,function(n){for(var e,r=0;r<t;++r)a[(e=c[r]).i]=e.x(n);return a.join(\"\")})},Zt=function(n,t){var e,r=typeof t;return null==t||\"boolean\"===r?Ct(t):(\"number\"===r?Yt:\"string\"===r?(e=Yn(t))?(t=e,Dt):Wt:t instanceof Yn?Dt:t instanceof Date?Bt:Array.isArray(t)?jt:\"function\"!=typeof t.valueOf&&\"function\"!=typeof t.toString||isNaN(t)?Ft:Yt)(n,t)},Qt=function(n){var t=n.length;return function(e){return n[Math.max(0,Math.min(t-1,Math.floor(e*t)))]}},Jt=function(n,t){var e=zt(+n,+t);return function(n){var t=e(n);return t-360*Math.floor(t/360)}},Kt=function(n,t){return t-=n=+n,function(e){return Math.round(n+t*e)}},ne=180/Math.PI,te={translateX:0,translateY:0,rotate:0,skewX:0,scaleX:1,scaleY:1},ee=function(n,t,e,r,i,u){var o,a,c;return(o=Math.sqrt(n*n+t*t))&&(n/=o,t/=o),(c=n*e+t*r)&&(e-=n*c,r-=t*c),(a=Math.sqrt(e*e+r*r))&&(e/=a,r/=a,c/=a),n*r<t*e&&(n=-n,t=-t,c=-c,o=-o),{translateX:i,translateY:u,rotate:Math.atan2(t,n)*ne,skewX:Math.atan(c)*ne,scaleX:o,scaleY:a}};function re(n,t,e,r){function i(n){return n.length?n.pop()+\" \":\"\"}return function(u,o){var a=[],c=[];return u=n(u),o=n(o),function(n,r,i,u,o,a){if(n!==i||r!==u){var c=o.push(\"translate(\",null,t,null,e);a.push({i:c-4,x:Yt(n,i)},{i:c-2,x:Yt(r,u)})}else(i||u)&&o.push(\"translate(\"+i+t+u+e)}(u.translateX,u.translateY,o.translateX,o.translateY,a,c),function(n,t,e,u){n!==t?(n-t>180?t+=360:t-n>180&&(n+=360),u.push({i:e.push(i(e)+\"rotate(\",null,r)-2,x:Yt(n,t)})):t&&e.push(i(e)+\"rotate(\"+t+r)}(u.rotate,o.rotate,a,c),function(n,t,e,u){n!==t?u.push({i:e.push(i(e)+\"skewX(\",null,r)-2,x:Yt(n,t)}):t&&e.push(i(e)+\"skewX(\"+t+r)}(u.skewX,o.skewX,a,c),function(n,t,e,r,u,o){if(n!==e||t!==r){var a=u.push(i(u)+\"scale(\",null,\",\",null,\")\");o.push({i:a-4,x:Yt(n,e)},{i:a-2,x:Yt(t,r)})}else 1===e&&1===r||u.push(i(u)+\"scale(\"+e+\",\"+r+\")\")}(u.scaleX,u.scaleY,o.scaleX,o.scaleY,a,c),u=o=null,function(n){for(var t,e=-1,r=c.length;++e<r;)a[(t=c[e]).i]=t.x(n);return a.join(\"\")}}}var ie=re(function(n){return\"none\"===n?te:(Xt||(Xt=document.createElement(\"DIV\"),Gt=document.documentElement,Vt=document.defaultView),Xt.style.transform=n,n=Vt.getComputedStyle(Gt.appendChild(Xt),null).getPropertyValue(\"transform\"),Gt.removeChild(Xt),n=n.slice(7,-1).split(\",\"),ee(+n[0],+n[1],+n[2],+n[3],+n[4],+n[5]))},\"px, \",\"px)\",\"deg)\"),ue=re(function(n){return null==n?te:($t||($t=document.createElementNS(\"http://www.w3.org/2000/svg\",\"g\")),$t.setAttribute(\"transform\",n),(n=$t.transform.baseVal.consolidate())?(n=n.matrix,ee(n.a,n.b,n.c,n.d,n.e,n.f)):te)},\", \",\")\",\")\"),oe=Math.SQRT2;function ae(n){return((n=Math.exp(n))+1/n)/2}var ce=function(n,t){var e,r,i=n[0],u=n[1],o=n[2],a=t[0],c=t[1],f=t[2],s=a-i,l=c-u,h=s*s+l*l;if(h<1e-12)r=Math.log(f/o)/oe,e=function(n){return[i+n*s,u+n*l,o*Math.exp(oe*n*r)]};else{var d=Math.sqrt(h),p=(f*f-o*o+4*h)/(2*o*2*d),v=(f*f-o*o-4*h)/(2*f*2*d),g=Math.log(Math.sqrt(p*p+1)-p),y=Math.log(Math.sqrt(v*v+1)-v);r=(y-g)/oe,e=function(n){var t,e=n*r,a=ae(g),c=o/(2*d)*(a*(t=oe*e+g,((t=Math.exp(2*t))-1)/(t+1))-function(n){return((n=Math.exp(n))-1/n)/2}(g));return[i+c*s,u+c*l,o*a/ae(oe*e+g)]}}return e.duration=1e3*r,e};function fe(n){return function(t,e){var r=n((t=Wn(t)).h,(e=Wn(e)).h),i=Rt(t.s,e.s),u=Rt(t.l,e.l),o=Rt(t.opacity,e.opacity);return function(n){return t.h=r(n),t.s=i(n),t.l=u(n),t.opacity=o(n),t+\"\"}}}var se=fe(zt),le=fe(Rt);function he(n,t){var e=Rt((n=ft(n)).l,(t=ft(t)).l),r=Rt(n.a,t.a),i=Rt(n.b,t.b),u=Rt(n.opacity,t.opacity);return function(t){return n.l=e(t),n.a=r(t),n.b=i(t),n.opacity=u(t),n+\"\"}}function de(n){return function(t,e){var r=n((t=yt(t)).h,(e=yt(e)).h),i=Rt(t.c,e.c),u=Rt(t.l,e.l),o=Rt(t.opacity,e.opacity);return function(n){return t.h=r(n),t.c=i(n),t.l=u(n),t.opacity=o(n),t+\"\"}}}var pe=de(zt),ve=de(Rt);function ge(n){return function t(e){function r(t,r){var i=n((t=At(t)).h,(r=At(r)).h),u=Rt(t.s,r.s),o=Rt(t.l,r.l),a=Rt(t.opacity,r.opacity);return function(n){return t.h=i(n),t.s=u(n),t.l=o(Math.pow(n,e)),t.opacity=a(n),t+\"\"}}return e=+e,r.gamma=t,r}(1)}var ye=ge(zt),be=ge(Rt);function _e(n,t){for(var e=0,r=t.length-1,i=t[0],u=new Array(r<0?0:r);e<r;)u[e]=n(i,i=t[++e]);return function(n){var t=Math.max(0,Math.min(r-1,Math.floor(n*=r)));return u[t](n-t)}}var me,xe,we=function(n,t){for(var e=new Array(t),r=0;r<t;++r)e[r]=n(r/(t-1));return e},Me=0,Ne=0,Ae=0,Te=1e3,Se=0,ke=0,Ee=0,Ce=\"object\"==typeof performance&&performance.now?performance:Date,Pe=\"object\"==typeof window&&window.requestAnimationFrame?window.requestAnimationFrame.bind(window):function(n){setTimeout(n,17)};function ze(){return ke||(Pe(Oe),ke=Ce.now()+Ee)}function Oe(){ke=0}function Re(){this._call=this._time=this._next=null}function De(n,t,e){var r=new Re;return r.restart(n,t,e),r}function Le(){ze(),++Me;for(var n,t=me;t;)(n=ke-t._time)>=0&&t._call.call(null,n),t=t._next;--Me}function qe(){ke=(Se=Ce.now())+Ee,Me=Ne=0;try{Le()}finally{Me=0,function(){var n,t,e=me,r=1/0;for(;e;)e._call?(r>e._time&&(r=e._time),n=e,e=e._next):(t=e._next,e._next=null,e=n?n._next=t:me=t);xe=n,je(r)}(),ke=0}}function Ue(){var n=Ce.now(),t=n-Se;t>Te&&(Ee-=t,Se=n)}function je(n){Me||(Ne&&(Ne=clearTimeout(Ne)),n-ke>24?(n<1/0&&(Ne=setTimeout(qe,n-Ce.now()-Ee)),Ae&&(Ae=clearInterval(Ae))):(Ae||(Se=Ce.now(),Ae=setInterval(Ue,Te)),Me=1,Pe(qe)))}Re.prototype=De.prototype={constructor:Re,restart:function(n,t,e){if(\"function\"!=typeof n)throw new TypeError(\"callback is not a function\");e=(null==e?ze():+e)+(null==t?0:+t),this._next||xe===this||(xe?xe._next=this:me=this,xe=this),this._call=n,this._time=e,je()},stop:function(){this._call&&(this._call=null,this._time=1/0,je())}};var Be=function(n,t,e){var r=new Re;return t=null==t?0:+t,r.restart(function(e){r.stop(),n(e+t)},t,e),r},Ye=function(n,t,e){var r=new Re,i=t;return null==t?(r.restart(n,t,e),r):(t=+t,e=null==e?ze():+e,r.restart(function u(o){o+=i,r.restart(u,i+=t,e),n(o)},t,e),r)},Fe=dn(\"start\",\"end\",\"cancel\",\"interrupt\"),Ie=[],He=0,Xe=1,Ge=2,Ve=3,$e=4,We=5,Ze=6,Qe=function(n,t,e,r,i,u){var o=n.__transition;if(o){if(e in o)return}else n.__transition={};!function(n,t,e){var r,i=n.__transition;function u(c){var f,s,l,h;if(e.state!==Xe)return a();for(f in i)if((h=i[f]).name===e.name){if(h.state===Ve)return Be(u);h.state===$e?(h.state=Ze,h.timer.stop(),h.on.call(\"interrupt\",n,n.__data__,h.index,h.group),delete i[f]):+f<t&&(h.state=Ze,h.timer.stop(),h.on.call(\"cancel\",n,n.__data__,h.index,h.group),delete i[f])}if(Be(function(){e.state===Ve&&(e.state=$e,e.timer.restart(o,e.delay,e.time),o(c))}),e.state=Ge,e.on.call(\"start\",n,n.__data__,e.index,e.group),e.state===Ge){for(e.state=Ve,r=new Array(l=e.tween.length),f=0,s=-1;f<l;++f)(h=e.tween[f].value.call(n,n.__data__,e.index,e.group))&&(r[++s]=h);r.length=s+1}}function o(t){for(var i=t<e.duration?e.ease.call(null,t/e.duration):(e.timer.restart(a),e.state=We,1),u=-1,o=r.length;++u<o;)r[u].call(n,i);e.state===We&&(e.on.call(\"end\",n,n.__data__,e.index,e.group),a())}function a(){for(var r in e.state=Ze,e.timer.stop(),delete i[t],i)return;delete n.__transition}i[t]=e,e.timer=De(function(n){e.state=Xe,e.timer.restart(u,e.delay,e.time),e.delay<=n&&u(n-e.delay)},0,e.time)}(n,e,{name:t,index:r,group:i,on:Fe,tween:Ie,time:u.time,delay:u.delay,duration:u.duration,ease:u.ease,timer:null,state:He})};function Je(n,t){var e=nr(n,t);if(e.state>He)throw new Error(\"too late; already scheduled\");return e}function Ke(n,t){var e=nr(n,t);if(e.state>Ve)throw new Error(\"too late; already running\");return e}function nr(n,t){var e=n.__transition;if(!e||!(e=e[t]))throw new Error(\"transition not found\");return e}var tr=function(n,t){var e,r,i,u=n.__transition,o=!0;if(u){for(i in t=null==t?null:t+\"\",u)(e=u[i]).name===t?(r=e.state>Ge&&e.state<We,e.state=Ze,e.timer.stop(),e.on.call(r?\"interrupt\":\"cancel\",n,n.__data__,e.index,e.group),delete u[i]):o=!1;o&&delete n.__transition}};function er(n,t,e){var r=n._id;return n.each(function(){var n=Ke(this,r);(n.value||(n.value={}))[t]=e.apply(this,arguments)}),function(n){return nr(n,r).value[t]}}var rr=function(n,t){var e;return(\"number\"==typeof t?Yt:t instanceof Yn?Dt:(e=Yn(t))?(t=e,Dt):Wt)(n,t)};var ir=pn.selection.prototype.constructor;function ur(n){return function(){this.style.removeProperty(n)}}var or=0;function ar(n,t,e,r){this._groups=n,this._parents=t,this._name=e,this._id=r}function cr(n){return Object(pn.selection)().transition(n)}function fr(){return++or}var sr=pn.selection.prototype;function lr(n){return+n}function hr(n){return n*n}function dr(n){return n*(2-n)}function pr(n){return((n*=2)<=1?n*n:--n*(2-n)+1)/2}function vr(n){return n*n*n}function gr(n){return--n*n*n+1}function yr(n){return((n*=2)<=1?n*n*n:(n-=2)*n*n+2)/2}ar.prototype=cr.prototype={constructor:ar,select:function(n){var t=this._name,e=this._id;\"function\"!=typeof n&&(n=Object(pn.selector)(n));for(var r=this._groups,i=r.length,u=new Array(i),o=0;o<i;++o)for(var a,c,f=r[o],s=f.length,l=u[o]=new Array(s),h=0;h<s;++h)(a=f[h])&&(c=n.call(a,a.__data__,h,f))&&(\"__data__\"in a&&(c.__data__=a.__data__),l[h]=c,Qe(l[h],t,e,h,l,nr(a,e)));return new ar(u,this._parents,t,e)},selectAll:function(n){var t=this._name,e=this._id;\"function\"!=typeof n&&(n=Object(pn.selectorAll)(n));for(var r=this._groups,i=r.length,u=[],o=[],a=0;a<i;++a)for(var c,f=r[a],s=f.length,l=0;l<s;++l)if(c=f[l]){for(var h,d=n.call(c,c.__data__,l,f),p=nr(c,e),v=0,g=d.length;v<g;++v)(h=d[v])&&Qe(h,t,e,v,d,p);u.push(d),o.push(c)}return new ar(u,o,t,e)},filter:function(n){\"function\"!=typeof n&&(n=Object(pn.matcher)(n));for(var t=this._groups,e=t.length,r=new Array(e),i=0;i<e;++i)for(var u,o=t[i],a=o.length,c=r[i]=[],f=0;f<a;++f)(u=o[f])&&n.call(u,u.__data__,f,o)&&c.push(u);return new ar(r,this._parents,this._name,this._id)},merge:function(n){if(n._id!==this._id)throw new Error;for(var t=this._groups,e=n._groups,r=t.length,i=e.length,u=Math.min(r,i),o=new Array(r),a=0;a<u;++a)for(var c,f=t[a],s=e[a],l=f.length,h=o[a]=new Array(l),d=0;d<l;++d)(c=f[d]||s[d])&&(h[d]=c);for(;a<r;++a)o[a]=t[a];return new ar(o,this._parents,this._name,this._id)},selection:function(){return new ir(this._groups,this._parents)},transition:function(){for(var n=this._name,t=this._id,e=fr(),r=this._groups,i=r.length,u=0;u<i;++u)for(var o,a=r[u],c=a.length,f=0;f<c;++f)if(o=a[f]){var s=nr(o,t);Qe(o,n,e,f,a,{time:s.time+s.delay+s.duration,delay:0,duration:s.duration,ease:s.ease})}return new ar(r,this._parents,n,e)},call:sr.call,nodes:sr.nodes,node:sr.node,size:sr.size,empty:sr.empty,each:sr.each,on:function(n,t){var e=this._id;return arguments.length<2?nr(this.node(),e).on.on(n):this.each(function(n,t,e){var r,i,u=function(n){return(n+\"\").trim().split(/^|\\s+/).every(function(n){var t=n.indexOf(\".\");return t>=0&&(n=n.slice(0,t)),!n||\"start\"===n})}(t)?Je:Ke;return function(){var o=u(this,n),a=o.on;a!==r&&(i=(r=a).copy()).on(t,e),o.on=i}}(e,n,t))},attr:function(n,t){var e=Object(pn.namespace)(n),r=\"transform\"===e?ue:rr;return this.attrTween(n,\"function\"==typeof t?(e.local?function(n,t,e){var r,i,u;return function(){var o,a,c=e(this);if(null!=c)return(o=this.getAttributeNS(n.space,n.local))===(a=c+\"\")?null:o===r&&a===i?u:(i=a,u=t(r=o,c));this.removeAttributeNS(n.space,n.local)}}:function(n,t,e){var r,i,u;return function(){var o,a,c=e(this);if(null!=c)return(o=this.getAttribute(n))===(a=c+\"\")?null:o===r&&a===i?u:(i=a,u=t(r=o,c));this.removeAttribute(n)}})(e,r,er(this,\"attr.\"+n,t)):null==t?(e.local?function(n){return function(){this.removeAttributeNS(n.space,n.local)}}:function(n){return function(){this.removeAttribute(n)}})(e):(e.local?function(n,t,e){var r,i,u=e+\"\";return function(){var o=this.getAttributeNS(n.space,n.local);return o===u?null:o===r?i:i=t(r=o,e)}}:function(n,t,e){var r,i,u=e+\"\";return function(){var o=this.getAttribute(n);return o===u?null:o===r?i:i=t(r=o,e)}})(e,r,t))},attrTween:function(n,t){var e=\"attr.\"+n;if(arguments.length<2)return(e=this.tween(e))&&e._value;if(null==t)return this.tween(e,null);if(\"function\"!=typeof t)throw new Error;var r=Object(pn.namespace)(n);return this.tween(e,(r.local?function(n,t){var e,r;function i(){var i=t.apply(this,arguments);return i!==r&&(e=(r=i)&&function(n,t){return function(e){this.setAttributeNS(n.space,n.local,t(e))}}(n,i)),e}return i._value=t,i}:function(n,t){var e,r;function i(){var i=t.apply(this,arguments);return i!==r&&(e=(r=i)&&function(n,t){return function(e){this.setAttribute(n,t(e))}}(n,i)),e}return i._value=t,i})(r,t))},style:function(n,t,e){var r=\"transform\"==(n+=\"\")?ie:rr;return null==t?this.styleTween(n,function(n,t){var e,r,i;return function(){var u=Object(pn.style)(this,n),o=(this.style.removeProperty(n),Object(pn.style)(this,n));return u===o?null:u===e&&o===r?i:i=t(e=u,r=o)}}(n,r)).on(\"end.style.\"+n,ur(n)):\"function\"==typeof t?this.styleTween(n,function(n,t,e){var r,i,u;return function(){var o=Object(pn.style)(this,n),a=e(this),c=a+\"\";return null==a&&(this.style.removeProperty(n),c=a=Object(pn.style)(this,n)),o===c?null:o===r&&c===i?u:(i=c,u=t(r=o,a))}}(n,r,er(this,\"style.\"+n,t))).each(function(n,t){var e,r,i,u,o=\"style.\"+t,a=\"end.\"+o;return function(){var c=Ke(this,n),f=c.on,s=null==c.value[o]?u||(u=ur(t)):void 0;f===e&&i===s||(r=(e=f).copy()).on(a,i=s),c.on=r}}(this._id,n)):this.styleTween(n,function(n,t,e){var r,i,u=e+\"\";return function(){var o=Object(pn.style)(this,n);return o===u?null:o===r?i:i=t(r=o,e)}}(n,r,t),e).on(\"end.style.\"+n,null)},styleTween:function(n,t,e){var r=\"style.\"+(n+=\"\");if(arguments.length<2)return(r=this.tween(r))&&r._value;if(null==t)return this.tween(r,null);if(\"function\"!=typeof t)throw new Error;return this.tween(r,function(n,t,e){var r,i;function u(){var u=t.apply(this,arguments);return u!==i&&(r=(i=u)&&function(n,t,e){return function(r){this.style.setProperty(n,t(r),e)}}(n,u,e)),r}return u._value=t,u}(n,t,null==e?\"\":e))},text:function(n){return this.tween(\"text\",\"function\"==typeof n?function(n){return function(){var t=n(this);this.textContent=null==t?\"\":t}}(er(this,\"text\",n)):function(n){return function(){this.textContent=n}}(null==n?\"\":n+\"\"))},remove:function(){return this.on(\"end.remove\",(n=this._id,function(){var t=this.parentNode;for(var e in this.__transition)if(+e!==n)return;t&&t.removeChild(this)}));var n},tween:function(n,t){var e=this._id;if(n+=\"\",arguments.length<2){for(var r,i=nr(this.node(),e).tween,u=0,o=i.length;u<o;++u)if((r=i[u]).name===n)return r.value;return null}return this.each((null==t?function(n,t){var e,r;return function(){var i=Ke(this,n),u=i.tween;if(u!==e)for(var o=0,a=(r=e=u).length;o<a;++o)if(r[o].name===t){(r=r.slice()).splice(o,1);break}i.tween=r}}:function(n,t,e){var r,i;if(\"function\"!=typeof e)throw new Error;return function(){var u=Ke(this,n),o=u.tween;if(o!==r){i=(r=o).slice();for(var a={name:t,value:e},c=0,f=i.length;c<f;++c)if(i[c].name===t){i[c]=a;break}c===f&&i.push(a)}u.tween=i}})(e,n,t))},delay:function(n){var t=this._id;return arguments.length?this.each((\"function\"==typeof n?function(n,t){return function(){Je(this,n).delay=+t.apply(this,arguments)}}:function(n,t){return t=+t,function(){Je(this,n).delay=t}})(t,n)):nr(this.node(),t).delay},duration:function(n){var t=this._id;return arguments.length?this.each((\"function\"==typeof n?function(n,t){return function(){Ke(this,n).duration=+t.apply(this,arguments)}}:function(n,t){return t=+t,function(){Ke(this,n).duration=t}})(t,n)):nr(this.node(),t).duration},ease:function(n){var t=this._id;return arguments.length?this.each(function(n,t){if(\"function\"!=typeof t)throw new Error;return function(){Ke(this,n).ease=t}}(t,n)):nr(this.node(),t).ease},end:function(){var n,t,e=this,r=e._id,i=e.size();return new Promise(function(u,o){var a={value:o},c={value:function(){0==--i&&u()}};e.each(function(){var e=Ke(this,r),i=e.on;i!==n&&((t=(n=i).copy())._.cancel.push(a),t._.interrupt.push(a),t._.end.push(c)),e.on=t})})}};var br=function n(t){function e(n){return Math.pow(n,t)}return t=+t,e.exponent=n,e}(3),_r=function n(t){function e(n){return 1-Math.pow(1-n,t)}return t=+t,e.exponent=n,e}(3),mr=function n(t){function e(n){return((n*=2)<=1?Math.pow(n,t):2-Math.pow(2-n,t))/2}return t=+t,e.exponent=n,e}(3),xr=Math.PI,wr=xr/2;function Mr(n){return 1-Math.cos(n*wr)}function Nr(n){return Math.sin(n*wr)}function Ar(n){return(1-Math.cos(xr*n))/2}function Tr(n){return Math.pow(2,10*n-10)}function Sr(n){return 1-Math.pow(2,-10*n)}function kr(n){return((n*=2)<=1?Math.pow(2,10*n-10):2-Math.pow(2,10-10*n))/2}function Er(n){return 1-Math.sqrt(1-n*n)}function Cr(n){return Math.sqrt(1- --n*n)}function Pr(n){return((n*=2)<=1?1-Math.sqrt(1-n*n):Math.sqrt(1-(n-=2)*n)+1)/2}var zr=4/11,Or=6/11,Rr=8/11,Dr=.75,Lr=9/11,qr=10/11,Ur=.9375,jr=21/22,Br=63/64,Yr=1/zr/zr;function Fr(n){return 1-Ir(1-n)}function Ir(n){return(n=+n)<zr?Yr*n*n:n<Rr?Yr*(n-=Or)*n+Dr:n<qr?Yr*(n-=Lr)*n+Ur:Yr*(n-=jr)*n+Br}function Hr(n){return((n*=2)<=1?1-Ir(1-n):Ir(n-1)+1)/2}var Xr=function n(t){function e(n){return n*n*((t+1)*n-t)}return t=+t,e.overshoot=n,e}(1.70158),Gr=function n(t){function e(n){return--n*n*((t+1)*n+t)+1}return t=+t,e.overshoot=n,e}(1.70158),Vr=function n(t){function e(n){return((n*=2)<1?n*n*((t+1)*n-t):(n-=2)*n*((t+1)*n+t)+2)/2}return t=+t,e.overshoot=n,e}(1.70158),$r=2*Math.PI,Wr=function n(t,e){var r=Math.asin(1/(t=Math.max(1,t)))*(e/=$r);function i(n){return t*Math.pow(2,10*--n)*Math.sin((r-n)/e)}return i.amplitude=function(t){return n(t,e*$r)},i.period=function(e){return n(t,e)},i}(1,.3),Zr=function n(t,e){var r=Math.asin(1/(t=Math.max(1,t)))*(e/=$r);function i(n){return 1-t*Math.pow(2,-10*(n=+n))*Math.sin((n+r)/e)}return i.amplitude=function(t){return n(t,e*$r)},i.period=function(e){return n(t,e)},i}(1,.3),Qr=function n(t,e){var r=Math.asin(1/(t=Math.max(1,t)))*(e/=$r);function i(n){return((n=2*n-1)<0?t*Math.pow(2,10*n)*Math.sin((r-n)/e):2-t*Math.pow(2,-10*n)*Math.sin((r+n)/e))/2}return i.amplitude=function(t){return n(t,e*$r)},i.period=function(e){return n(t,e)},i}(1,.3),Jr={time:null,delay:0,duration:250,ease:yr};function Kr(n,t){for(var e;!(e=n.__transition)||!(e=e[t]);)if(!(n=n.parentNode))return Jr.time=ze(),Jr;return e}pn.selection.prototype.interrupt=function(n){return this.each(function(){tr(this,n)})},pn.selection.prototype.transition=function(n){var t,e;n instanceof ar?(t=n._id,n=n._name):(t=fr(),(e=Jr).time=ze(),n=null==n?null:n+\"\");for(var r=this._groups,i=r.length,u=0;u<i;++u)for(var o,a=r[u],c=a.length,f=0;f<c;++f)(o=a[f])&&Qe(o,n,t,f,a,e||Kr(o,t));return new ar(r,this._parents,n,t)};var ni=[null],ti=function(n,t){var e,r,i=n.__transition;if(i)for(r in t=null==t?null:t+\"\",i)if((e=i[r]).state>Xe&&e.name===t)return new ar([[n]],ni,t,+r);return null},ei=function(n){return function(){return n}},ri=function(n,t,e){this.target=n,this.type=t,this.selection=e};function ii(){pn.event.stopImmediatePropagation()}var ui=function(){pn.event.preventDefault(),pn.event.stopImmediatePropagation()},oi={name:\"drag\"},ai={name:\"space\"},ci={name:\"handle\"},fi={name:\"center\"},si={name:\"x\",handles:[\"e\",\"w\"].map(bi),input:function(n,t){return n&&[[n[0],t[0][1]],[n[1],t[1][1]]]},output:function(n){return n&&[n[0][0],n[1][0]]}},li={name:\"y\",handles:[\"n\",\"s\"].map(bi),input:function(n,t){return n&&[[t[0][0],n[0]],[t[1][0],n[1]]]},output:function(n){return n&&[n[0][1],n[1][1]]}},hi={name:\"xy\",handles:[\"n\",\"e\",\"s\",\"w\",\"nw\",\"ne\",\"se\",\"sw\"].map(bi),input:function(n){return n},output:function(n){return n}},di={overlay:\"crosshair\",selection:\"move\",n:\"ns-resize\",e:\"ew-resize\",s:\"ns-resize\",w:\"ew-resize\",nw:\"nwse-resize\",ne:\"nesw-resize\",se:\"nwse-resize\",sw:\"nesw-resize\"},pi={e:\"w\",w:\"e\",nw:\"ne\",ne:\"nw\",se:\"sw\",sw:\"se\"},vi={n:\"s\",s:\"n\",nw:\"sw\",ne:\"se\",se:\"ne\",sw:\"nw\"},gi={overlay:1,selection:1,n:null,e:1,s:null,w:-1,nw:-1,ne:1,se:1,sw:-1},yi={overlay:1,selection:1,n:-1,e:null,s:1,w:null,nw:-1,ne:-1,se:1,sw:1};function bi(n){return{type:n}}function _i(){return!pn.event.button}function mi(){var n=this.ownerSVGElement||this;return[[0,0],[n.width.baseVal.value,n.height.baseVal.value]]}function xi(n){for(;!n.__brush;)if(!(n=n.parentNode))return;return n.__brush}function wi(n){return n[0][0]===n[1][0]||n[0][1]===n[1][1]}function Mi(n){var t=n.__brush;return t?t.dim.output(t.selection):null}function Ni(){return Si(si)}function Ai(){return Si(li)}var Ti=function(){return Si(hi)};function Si(n){var t,e=mi,r=_i,i=dn(o,\"start\",\"brush\",\"end\"),u=6;function o(t){var e=t.property(\"__brush\",l).selectAll(\".overlay\").data([bi(\"overlay\")]);e.enter().append(\"rect\").attr(\"class\",\"overlay\").attr(\"pointer-events\",\"all\").attr(\"cursor\",di.overlay).merge(e).each(function(){var n=xi(this).extent;Object(pn.select)(this).attr(\"x\",n[0][0]).attr(\"y\",n[0][1]).attr(\"width\",n[1][0]-n[0][0]).attr(\"height\",n[1][1]-n[0][1])}),t.selectAll(\".selection\").data([bi(\"selection\")]).enter().append(\"rect\").attr(\"class\",\"selection\").attr(\"cursor\",di.selection).attr(\"fill\",\"#777\").attr(\"fill-opacity\",.3).attr(\"stroke\",\"#fff\").attr(\"shape-rendering\",\"crispEdges\");var r=t.selectAll(\".handle\").data(n.handles,function(n){return n.type});r.exit().remove(),r.enter().append(\"rect\").attr(\"class\",function(n){return\"handle handle--\"+n.type}).attr(\"cursor\",function(n){return di[n.type]}),t.each(a).attr(\"fill\",\"none\").attr(\"pointer-events\",\"all\").style(\"-webkit-tap-highlight-color\",\"rgba(0,0,0,0)\").on(\"mousedown.brush touchstart.brush\",s)}function a(){var n=Object(pn.select)(this),t=xi(this).selection;t?(n.selectAll(\".selection\").style(\"display\",null).attr(\"x\",t[0][0]).attr(\"y\",t[0][1]).attr(\"width\",t[1][0]-t[0][0]).attr(\"height\",t[1][1]-t[0][1]),n.selectAll(\".handle\").style(\"display\",null).attr(\"x\",function(n){return\"e\"===n.type[n.type.length-1]?t[1][0]-u/2:t[0][0]-u/2}).attr(\"y\",function(n){return\"s\"===n.type[0]?t[1][1]-u/2:t[0][1]-u/2}).attr(\"width\",function(n){return\"n\"===n.type||\"s\"===n.type?t[1][0]-t[0][0]+u:u}).attr(\"height\",function(n){return\"e\"===n.type||\"w\"===n.type?t[1][1]-t[0][1]+u:u})):n.selectAll(\".selection,.handle\").style(\"display\",\"none\").attr(\"x\",null).attr(\"y\",null).attr(\"width\",null).attr(\"height\",null)}function c(n,t){return n.__brush.emitter||new f(n,t)}function f(n,t){this.that=n,this.args=t,this.state=n.__brush,this.active=0}function s(){if(pn.event.touches){if(pn.event.changedTouches.length<pn.event.touches.length)return ui()}else if(t)return;if(r.apply(this,arguments)){var e,i,u,o,f,s,l,h,d,p,v,g,y,b=this,_=pn.event.target.__data__.type,m=\"selection\"===(pn.event.metaKey?_=\"overlay\":_)?oi:pn.event.altKey?fi:ci,x=n===li?null:gi[_],w=n===si?null:yi[_],M=xi(b),N=M.extent,A=M.selection,T=N[0][0],S=N[0][1],k=N[1][0],E=N[1][1],C=x&&w&&pn.event.shiftKey,P=Object(pn.mouse)(b),z=P,O=c(b,arguments).beforestart();\"overlay\"===_?M.selection=A=[[e=n===li?T:P[0],u=n===si?S:P[1]],[f=n===li?k:e,l=n===si?E:u]]:(e=A[0][0],u=A[0][1],f=A[1][0],l=A[1][1]),i=e,o=u,s=f,h=l;var R=Object(pn.select)(b).attr(\"pointer-events\",\"none\"),D=R.selectAll(\".overlay\").attr(\"cursor\",di[_]);if(pn.event.touches)R.on(\"touchmove.brush\",q,!0).on(\"touchend.brush touchcancel.brush\",j,!0);else{var L=Object(pn.select)(pn.event.view).on(\"keydown.brush\",function(){switch(pn.event.keyCode){case 16:C=x&&w;break;case 18:m===ci&&(x&&(f=s-d*x,e=i+d*x),w&&(l=h-p*w,u=o+p*w),m=fi,U());break;case 32:m!==ci&&m!==fi||(x<0?f=s-d:x>0&&(e=i-d),w<0?l=h-p:w>0&&(u=o-p),m=ai,D.attr(\"cursor\",di.selection),U());break;default:return}ui()},!0).on(\"keyup.brush\",function(){switch(pn.event.keyCode){case 16:C&&(g=y=C=!1,U());break;case 18:m===fi&&(x<0?f=s:x>0&&(e=i),w<0?l=h:w>0&&(u=o),m=ci,U());break;case 32:m===ai&&(pn.event.altKey?(x&&(f=s-d*x,e=i+d*x),w&&(l=h-p*w,u=o+p*w),m=fi):(x<0?f=s:x>0&&(e=i),w<0?l=h:w>0&&(u=o),m=ci),D.attr(\"cursor\",di[_]),U());break;default:return}ui()},!0).on(\"mousemove.brush\",q,!0).on(\"mouseup.brush\",j,!0);yn(pn.event.view)}ii(),tr(b),a.call(b),O.start()}function q(){var n=Object(pn.mouse)(b);!C||g||y||(Math.abs(n[0]-z[0])>Math.abs(n[1]-z[1])?y=!0:g=!0),z=n,v=!0,ui(),U()}function U(){var n;switch(d=z[0]-P[0],p=z[1]-P[1],m){case ai:case oi:x&&(d=Math.max(T-e,Math.min(k-f,d)),i=e+d,s=f+d),w&&(p=Math.max(S-u,Math.min(E-l,p)),o=u+p,h=l+p);break;case ci:x<0?(d=Math.max(T-e,Math.min(k-e,d)),i=e+d,s=f):x>0&&(d=Math.max(T-f,Math.min(k-f,d)),i=e,s=f+d),w<0?(p=Math.max(S-u,Math.min(E-u,p)),o=u+p,h=l):w>0&&(p=Math.max(S-l,Math.min(E-l,p)),o=u,h=l+p);break;case fi:x&&(i=Math.max(T,Math.min(k,e-d*x)),s=Math.max(T,Math.min(k,f+d*x))),w&&(o=Math.max(S,Math.min(E,u-p*w)),h=Math.max(S,Math.min(E,l+p*w)))}s<i&&(x*=-1,n=e,e=f,f=n,n=i,i=s,s=n,_ in pi&&D.attr(\"cursor\",di[_=pi[_]])),h<o&&(w*=-1,n=u,u=l,l=n,n=o,o=h,h=n,_ in vi&&D.attr(\"cursor\",di[_=vi[_]])),M.selection&&(A=M.selection),g&&(i=A[0][0],s=A[1][0]),y&&(o=A[0][1],h=A[1][1]),A[0][0]===i&&A[0][1]===o&&A[1][0]===s&&A[1][1]===h||(M.selection=[[i,o],[s,h]],a.call(b),O.brush())}function j(){if(ii(),pn.event.touches){if(pn.event.touches.length)return;t&&clearTimeout(t),t=setTimeout(function(){t=null},500),R.on(\"touchmove.brush touchend.brush touchcancel.brush\",null)}else bn(pn.event.view,v),L.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\",null);R.attr(\"pointer-events\",\"all\"),D.attr(\"cursor\",di.overlay),M.selection&&(A=M.selection),wi(A)&&(M.selection=null,a.call(b)),O.end()}}function l(){var t=this.__brush||{selection:null};return t.extent=e.apply(this,arguments),t.dim=n,t}return o.move=function(t,e){t.selection?t.on(\"start.brush\",function(){c(this,arguments).beforestart().start()}).on(\"interrupt.brush end.brush\",function(){c(this,arguments).end()}).tween(\"brush\",function(){var t=this,r=t.__brush,i=c(t,arguments),u=r.selection,o=n.input(\"function\"==typeof e?e.apply(this,arguments):e,r.extent),f=Zt(u,o);function s(n){r.selection=1===n&&wi(o)?null:f(n),a.call(t),i.brush()}return u&&o?s:s(1)}):t.each(function(){var t=arguments,r=this.__brush,i=n.input(\"function\"==typeof e?e.apply(this,t):e,r.extent),u=c(this,t).beforestart();tr(this),r.selection=null==i||wi(i)?null:i,a.call(this),u.start().brush().end()})},f.prototype={beforestart:function(){return 1==++this.active&&(this.state.emitter=this,this.starting=!0),this},start:function(){return this.starting&&(this.starting=!1,this.emit(\"start\")),this},brush:function(){return this.emit(\"brush\"),this},end:function(){return 0==--this.active&&(delete this.state.emitter,this.emit(\"end\")),this},emit:function(t){Object(pn.customEvent)(new ri(o,t,n.output(this.state.selection)),i.apply,i,[t,this.that,this.args])}},o.extent=function(n){return arguments.length?(e=\"function\"==typeof n?n:ei([[+n[0][0],+n[0][1]],[+n[1][0],+n[1][1]]]),o):e},o.filter=function(n){return arguments.length?(r=\"function\"==typeof n?n:ei(!!n),o):r},o.handleSize=function(n){return arguments.length?(u=+n,o):u},o.on=function(){var n=i.on.apply(i,arguments);return n===i?o:n},o}var ki=Math.cos,Ei=Math.sin,Ci=Math.PI,Pi=Ci/2,zi=2*Ci,Oi=Math.max;var Ri=function(){var n=0,t=null,e=null,r=null;function i(i){var u,o,a,c,f,s,l=i.length,h=[],d=w(l),p=[],v=[],g=v.groups=new Array(l),y=new Array(l*l);for(u=0,f=-1;++f<l;){for(o=0,s=-1;++s<l;)o+=i[f][s];h.push(o),p.push(w(l)),u+=o}for(t&&d.sort(function(n,e){return t(h[n],h[e])}),e&&p.forEach(function(n,t){n.sort(function(n,r){return e(i[t][n],i[t][r])})}),c=(u=Oi(0,zi-n*l)/u)?n:zi/l,o=0,f=-1;++f<l;){for(a=o,s=-1;++s<l;){var b=d[f],_=p[b][s],m=i[b][_],x=o,M=o+=m*u;y[_*l+b]={index:b,subindex:_,startAngle:x,endAngle:M,value:m}}g[b]={index:b,startAngle:a,endAngle:o,value:h[b]},o+=c}for(f=-1;++f<l;)for(s=f-1;++s<l;){var N=y[s*l+f],A=y[f*l+s];(N.value||A.value)&&v.push(N.value<A.value?{source:A,target:N}:{source:N,target:A})}return r?v.sort(r):v}return i.padAngle=function(t){return arguments.length?(n=Oi(0,t),i):n},i.sortGroups=function(n){return arguments.length?(t=n,i):t},i.sortSubgroups=function(n){return arguments.length?(e=n,i):e},i.sortChords=function(n){return arguments.length?(null==n?r=null:(t=n,r=function(n,e){return t(n.source.value+n.target.value,e.source.value+e.target.value)})._=n,i):r&&r._;var t},i},Di=Array.prototype.slice,Li=function(n){return function(){return n}},qi=Math.PI,Ui=2*qi,ji=Ui-1e-6;function Bi(){this._x0=this._y0=this._x1=this._y1=null,this._=\"\"}function Yi(){return new Bi}Bi.prototype=Yi.prototype={constructor:Bi,moveTo:function(n,t){this._+=\"M\"+(this._x0=this._x1=+n)+\",\"+(this._y0=this._y1=+t)},closePath:function(){null!==this._x1&&(this._x1=this._x0,this._y1=this._y0,this._+=\"Z\")},lineTo:function(n,t){this._+=\"L\"+(this._x1=+n)+\",\"+(this._y1=+t)},quadraticCurveTo:function(n,t,e,r){this._+=\"Q\"+ +n+\",\"+ +t+\",\"+(this._x1=+e)+\",\"+(this._y1=+r)},bezierCurveTo:function(n,t,e,r,i,u){this._+=\"C\"+ +n+\",\"+ +t+\",\"+ +e+\",\"+ +r+\",\"+(this._x1=+i)+\",\"+(this._y1=+u)},arcTo:function(n,t,e,r,i){n=+n,t=+t,e=+e,r=+r,i=+i;var u=this._x1,o=this._y1,a=e-n,c=r-t,f=u-n,s=o-t,l=f*f+s*s;if(i<0)throw new Error(\"negative radius: \"+i);if(null===this._x1)this._+=\"M\"+(this._x1=n)+\",\"+(this._y1=t);else if(l>1e-6)if(Math.abs(s*a-c*f)>1e-6&&i){var h=e-u,d=r-o,p=a*a+c*c,v=h*h+d*d,g=Math.sqrt(p),y=Math.sqrt(l),b=i*Math.tan((qi-Math.acos((p+l-v)/(2*g*y)))/2),_=b/y,m=b/g;Math.abs(_-1)>1e-6&&(this._+=\"L\"+(n+_*f)+\",\"+(t+_*s)),this._+=\"A\"+i+\",\"+i+\",0,0,\"+ +(s*h>f*d)+\",\"+(this._x1=n+m*a)+\",\"+(this._y1=t+m*c)}else this._+=\"L\"+(this._x1=n)+\",\"+(this._y1=t);else;},arc:function(n,t,e,r,i,u){n=+n,t=+t;var o=(e=+e)*Math.cos(r),a=e*Math.sin(r),c=n+o,f=t+a,s=1^u,l=u?r-i:i-r;if(e<0)throw new Error(\"negative radius: \"+e);null===this._x1?this._+=\"M\"+c+\",\"+f:(Math.abs(this._x1-c)>1e-6||Math.abs(this._y1-f)>1e-6)&&(this._+=\"L\"+c+\",\"+f),e&&(l<0&&(l=l%Ui+Ui),l>ji?this._+=\"A\"+e+\",\"+e+\",0,1,\"+s+\",\"+(n-o)+\",\"+(t-a)+\"A\"+e+\",\"+e+\",0,1,\"+s+\",\"+(this._x1=c)+\",\"+(this._y1=f):l>1e-6&&(this._+=\"A\"+e+\",\"+e+\",0,\"+ +(l>=qi)+\",\"+s+\",\"+(this._x1=n+e*Math.cos(i))+\",\"+(this._y1=t+e*Math.sin(i))))},rect:function(n,t,e,r){this._+=\"M\"+(this._x0=this._x1=+n)+\",\"+(this._y0=this._y1=+t)+\"h\"+ +e+\"v\"+ +r+\"h\"+-e+\"Z\"},toString:function(){return this._}};var Fi=Yi;function Ii(n){return n.source}function Hi(n){return n.target}function Xi(n){return n.radius}function Gi(n){return n.startAngle}function Vi(n){return n.endAngle}var $i=function(){var n=Ii,t=Hi,e=Xi,r=Gi,i=Vi,u=null;function o(){var o,a=Di.call(arguments),c=n.apply(this,a),f=t.apply(this,a),s=+e.apply(this,(a[0]=c,a)),l=r.apply(this,a)-Pi,h=i.apply(this,a)-Pi,d=s*ki(l),p=s*Ei(l),v=+e.apply(this,(a[0]=f,a)),g=r.apply(this,a)-Pi,y=i.apply(this,a)-Pi;if(u||(u=o=Fi()),u.moveTo(d,p),u.arc(0,0,s,l,h),l===g&&h===y||(u.quadraticCurveTo(0,0,v*ki(g),v*Ei(g)),u.arc(0,0,v,g,y)),u.quadraticCurveTo(0,0,d,p),u.closePath(),o)return u=null,o+\"\"||null}return o.radius=function(n){return arguments.length?(e=\"function\"==typeof n?n:Li(+n),o):e},o.startAngle=function(n){return arguments.length?(r=\"function\"==typeof n?n:Li(+n),o):r},o.endAngle=function(n){return arguments.length?(i=\"function\"==typeof n?n:Li(+n),o):i},o.source=function(t){return arguments.length?(n=t,o):n},o.target=function(n){return arguments.length?(t=n,o):t},o.context=function(n){return arguments.length?(u=null==n?null:n,o):u},o};function Wi(){}function Zi(n,t){var e=new Wi;if(n instanceof Wi)n.each(function(n,t){e.set(t,n)});else if(Array.isArray(n)){var r,i=-1,u=n.length;if(null==t)for(;++i<u;)e.set(i,n[i]);else for(;++i<u;)e.set(t(r=n[i],i,n),r)}else if(n)for(var o in n)e.set(o,n[o]);return e}Wi.prototype=Zi.prototype={constructor:Wi,has:function(n){return\"$\"+n in this},get:function(n){return this[\"$\"+n]},set:function(n,t){return this[\"$\"+n]=t,this},remove:function(n){var t=\"$\"+n;return t in this&&delete this[t]},clear:function(){for(var n in this)\"$\"===n[0]&&delete this[n]},keys:function(){var n=[];for(var t in this)\"$\"===t[0]&&n.push(t.slice(1));return n},values:function(){var n=[];for(var t in this)\"$\"===t[0]&&n.push(this[t]);return n},entries:function(){var n=[];for(var t in this)\"$\"===t[0]&&n.push({key:t.slice(1),value:this[t]});return n},size:function(){var n=0;for(var t in this)\"$\"===t[0]&&++n;return n},empty:function(){for(var n in this)if(\"$\"===n[0])return!1;return!0},each:function(n){for(var t in this)\"$\"===t[0]&&n(this[t],t.slice(1),this)}};var Qi=Zi,Ji=function(){var n,t,e,r=[],i=[];function u(e,i,o,a){if(i>=r.length)return null!=n&&e.sort(n),null!=t?t(e):e;for(var c,f,s,l=-1,h=e.length,d=r[i++],p=Qi(),v=o();++l<h;)(s=p.get(c=d(f=e[l])+\"\"))?s.push(f):p.set(c,[f]);return p.each(function(n,t){a(v,t,u(n,i,o,a))}),v}return e={object:function(n){return u(n,0,Ki,nu)},map:function(n){return u(n,0,tu,eu)},entries:function(n){return function n(e,u){if(++u>r.length)return e;var o,a=i[u-1];return null!=t&&u>=r.length?o=e.entries():(o=[],e.each(function(t,e){o.push({key:e,values:n(t,u)})})),null!=a?o.sort(function(n,t){return a(n.key,t.key)}):o}(u(n,0,tu,eu),0)},key:function(n){return r.push(n),e},sortKeys:function(n){return i[r.length-1]=n,e},sortValues:function(t){return n=t,e},rollup:function(n){return t=n,e}}};function Ki(){return{}}function nu(n,t,e){n[t]=e}function tu(){return Qi()}function eu(n,t,e){n.set(t,e)}function ru(){}var iu=Qi.prototype;function uu(n,t){var e=new ru;if(n instanceof ru)n.each(function(n){e.add(n)});else if(n){var r=-1,i=n.length;if(null==t)for(;++r<i;)e.add(n[r]);else for(;++r<i;)e.add(t(n[r],r,n))}return e}ru.prototype=uu.prototype={constructor:ru,has:iu.has,add:function(n){return this[\"$\"+(n+=\"\")]=n,this},remove:iu.remove,clear:iu.clear,values:iu.keys,size:iu.size,empty:iu.empty,each:iu.each};var ou=uu,au=function(n){var t=[];for(var e in n)t.push(e);return t},cu=function(n){var t=[];for(var e in n)t.push(n[e]);return t},fu=function(n){var t=[];for(var e in n)t.push({key:e,value:n[e]});return t},su=Array.prototype.slice,lu=function(n,t){return n-t},hu=function(n){for(var t=0,e=n.length,r=n[e-1][1]*n[0][0]-n[e-1][0]*n[0][1];++t<e;)r+=n[t-1][1]*n[t][0]-n[t-1][0]*n[t][1];return r},du=function(n){return function(){return n}},pu=function(n,t){for(var e,r=-1,i=t.length;++r<i;)if(e=vu(n,t[r]))return e;return 0};function vu(n,t){for(var e=t[0],r=t[1],i=-1,u=0,o=n.length,a=o-1;u<o;a=u++){var c=n[u],f=c[0],s=c[1],l=n[a],h=l[0],d=l[1];if(gu(c,l,t))return 0;s>r!=d>r&&e<(h-f)*(r-s)/(d-s)+f&&(i=-i)}return i}function gu(n,t,e){var r,i,u,o;return function(n,t,e){return(t[0]-n[0])*(e[1]-n[1])==(e[0]-n[0])*(t[1]-n[1])}(n,t,e)&&(i=n[r=+(n[0]===t[0])],u=e[r],o=t[r],i<=u&&u<=o||o<=u&&u<=i)}var yu=function(){},bu=[[],[[[1,1.5],[.5,1]]],[[[1.5,1],[1,1.5]]],[[[1.5,1],[.5,1]]],[[[1,.5],[1.5,1]]],[[[1,1.5],[.5,1]],[[1,.5],[1.5,1]]],[[[1,.5],[1,1.5]]],[[[1,.5],[.5,1]]],[[[.5,1],[1,.5]]],[[[1,1.5],[1,.5]]],[[[.5,1],[1,.5]],[[1.5,1],[1,1.5]]],[[[1.5,1],[1,.5]]],[[[.5,1],[1.5,1]]],[[[1,1.5],[1.5,1]]],[[[.5,1],[1,1.5]]],[]],_u=function(){var n=1,t=1,e=E,r=a;function i(n){var t=e(n);if(Array.isArray(t))t=t.slice().sort(lu);else{var r=g(n),i=r[0],o=r[1];t=k(i,o,t),t=w(Math.floor(i/t)*t,Math.floor(o/t)*t,t)}return t.map(function(t){return u(n,t)})}function u(e,i){var u=[],a=[];return function(e,r,i){var u,a,c,f,s,l,h=new Array,d=new Array;u=a=-1,f=e[0]>=r,bu[f<<1].forEach(p);for(;++u<n-1;)c=f,f=e[u+1]>=r,bu[c|f<<1].forEach(p);bu[f<<0].forEach(p);for(;++a<t-1;){for(u=-1,f=e[a*n+n]>=r,s=e[a*n]>=r,bu[f<<1|s<<2].forEach(p);++u<n-1;)c=f,f=e[a*n+n+u+1]>=r,l=s,s=e[a*n+u+1]>=r,bu[c|f<<1|s<<2|l<<3].forEach(p);bu[f|s<<3].forEach(p)}u=-1,s=e[a*n]>=r,bu[s<<2].forEach(p);for(;++u<n-1;)l=s,s=e[a*n+u+1]>=r,bu[s<<2|l<<3].forEach(p);function p(n){var t,e,r=[n[0][0]+u,n[0][1]+a],c=[n[1][0]+u,n[1][1]+a],f=o(r),s=o(c);(t=d[f])?(e=h[s])?(delete d[t.end],delete h[e.start],t===e?(t.ring.push(c),i(t.ring)):h[t.start]=d[e.end]={start:t.start,end:e.end,ring:t.ring.concat(e.ring)}):(delete d[t.end],t.ring.push(c),d[t.end=s]=t):(t=h[s])?(e=d[f])?(delete h[t.start],delete d[e.end],t===e?(t.ring.push(c),i(t.ring)):h[e.start]=d[t.end]={start:e.start,end:t.end,ring:e.ring.concat(t.ring)}):(delete h[t.start],t.ring.unshift(r),h[t.start=f]=t):h[f]=d[s]={start:f,end:s,ring:[r,c]}}bu[s<<3].forEach(p)}(e,i,function(n){r(n,e,i),hu(n)>0?u.push([n]):a.push(n)}),a.forEach(function(n){for(var t,e=0,r=u.length;e<r;++e)if(-1!==pu((t=u[e])[0],n))return void t.push(n)}),{type:\"MultiPolygon\",value:i,coordinates:u}}function o(t){return 2*t[0]+t[1]*(n+1)*4}function a(e,r,i){e.forEach(function(e){var u,o=e[0],a=e[1],c=0|o,f=0|a,s=r[f*n+c];o>0&&o<n&&c===o&&(u=r[f*n+c-1],e[0]=o+(i-u)/(s-u)-.5),a>0&&a<t&&f===a&&(u=r[(f-1)*n+c],e[1]=a+(i-u)/(s-u)-.5)})}return i.contour=u,i.size=function(e){if(!arguments.length)return[n,t];var r=Math.ceil(e[0]),u=Math.ceil(e[1]);if(!(r>0&&u>0))throw new Error(\"invalid size\");return n=r,t=u,i},i.thresholds=function(n){return arguments.length?(e=\"function\"==typeof n?n:Array.isArray(n)?du(su.call(n)):du(n),i):e},i.smooth=function(n){return arguments.length?(r=n?a:yu,i):r===a},i};function mu(n,t,e){for(var r=n.width,i=n.height,u=1+(e<<1),o=0;o<i;++o)for(var a=0,c=0;a<r+e;++a)a<r&&(c+=n.data[a+o*r]),a>=e&&(a>=u&&(c-=n.data[a-u+o*r]),t.data[a-e+o*r]=c/Math.min(a+1,r-1+u-a,u))}function xu(n,t,e){for(var r=n.width,i=n.height,u=1+(e<<1),o=0;o<r;++o)for(var a=0,c=0;a<i+e;++a)a<i&&(c+=n.data[o+a*r]),a>=e&&(a>=u&&(c-=n.data[o+(a-u)*r]),t.data[o+(a-e)*r]=c/Math.min(a+1,i-1+u-a,u))}function wu(n){return n[0]}function Mu(n){return n[1]}function Nu(){return 1}var Au=function(){var n=wu,t=Mu,e=Nu,r=960,i=500,u=20,o=2,a=3*u,c=r+2*a>>o,f=i+2*a>>o,s=du(20);function l(r){var i=new Float32Array(c*f),l=new Float32Array(c*f);r.forEach(function(r,u,s){var l=+n(r,u,s)+a>>o,h=+t(r,u,s)+a>>o,d=+e(r,u,s);l>=0&&l<c&&h>=0&&h<f&&(i[l+h*c]+=d)}),mu({width:c,height:f,data:i},{width:c,height:f,data:l},u>>o),xu({width:c,height:f,data:l},{width:c,height:f,data:i},u>>o),mu({width:c,height:f,data:i},{width:c,height:f,data:l},u>>o),xu({width:c,height:f,data:l},{width:c,height:f,data:i},u>>o),mu({width:c,height:f,data:i},{width:c,height:f,data:l},u>>o),xu({width:c,height:f,data:l},{width:c,height:f,data:i},u>>o);var d=s(i);if(!Array.isArray(d)){var p=R(i);d=k(0,p,d),(d=w(0,Math.floor(p/d)*d,d)).shift()}return _u().thresholds(d).size([c,f])(i).map(h)}function h(n){return n.value*=Math.pow(2,-2*o),n.coordinates.forEach(d),n}function d(n){n.forEach(p)}function p(n){n.forEach(v)}function v(n){n[0]=n[0]*Math.pow(2,o)-a,n[1]=n[1]*Math.pow(2,o)-a}function g(){return c=r+2*(a=3*u)>>o,f=i+2*a>>o,l}return l.x=function(t){return arguments.length?(n=\"function\"==typeof t?t:du(+t),l):n},l.y=function(n){return arguments.length?(t=\"function\"==typeof n?n:du(+n),l):t},l.weight=function(n){return arguments.length?(e=\"function\"==typeof n?n:du(+n),l):e},l.size=function(n){if(!arguments.length)return[r,i];var t=Math.ceil(n[0]),e=Math.ceil(n[1]);if(!(t>=0||t>=0))throw new Error(\"invalid size\");return r=t,i=e,g()},l.cellSize=function(n){if(!arguments.length)return 1<<o;if(!((n=+n)>=1))throw new Error(\"invalid cell size\");return o=Math.floor(Math.log(n)/Math.LN2),g()},l.thresholds=function(n){return arguments.length?(s=\"function\"==typeof n?n:Array.isArray(n)?du(su.call(n)):du(n),l):s},l.bandwidth=function(n){if(!arguments.length)return Math.sqrt(u*(u+1));if(!((n=+n)>=0))throw new Error(\"invalid bandwidth\");return u=Math.round((Math.sqrt(4*n*n+1)-1)/2),g()},l},Tu={},Su={},ku=34,Eu=10,Cu=13;function Pu(n){return new Function(\"d\",\"return {\"+n.map(function(n,t){return JSON.stringify(n)+\": d[\"+t+\"]\"}).join(\",\")+\"}\")}function zu(n){var t=Object.create(null),e=[];return n.forEach(function(n){for(var r in n)r in t||e.push(t[r]=r)}),e}function Ou(n,t){var e=n+\"\",r=e.length;return r<t?new Array(t-r+1).join(0)+e:e}function Ru(n){var t,e=n.getUTCHours(),r=n.getUTCMinutes(),i=n.getUTCSeconds(),u=n.getUTCMilliseconds();return isNaN(n)?\"Invalid Date\":((t=n.getUTCFullYear())<0?\"-\"+Ou(-t,6):t>9999?\"+\"+Ou(t,6):Ou(t,4))+\"-\"+Ou(n.getUTCMonth()+1,2)+\"-\"+Ou(n.getUTCDate(),2)+(u?\"T\"+Ou(e,2)+\":\"+Ou(r,2)+\":\"+Ou(i,2)+\".\"+Ou(u,3)+\"Z\":i?\"T\"+Ou(e,2)+\":\"+Ou(r,2)+\":\"+Ou(i,2)+\"Z\":r||e?\"T\"+Ou(e,2)+\":\"+Ou(r,2)+\"Z\":\"\")}var Du=function(n){var t=new RegExp('[\"'+n+\"\\n\\r]\"),e=n.charCodeAt(0);function r(n,t){var r,i=[],u=n.length,o=0,a=0,c=u<=0,f=!1;function s(){if(c)return Su;if(f)return f=!1,Tu;var t,r,i=o;if(n.charCodeAt(i)===ku){for(;o++<u&&n.charCodeAt(o)!==ku||n.charCodeAt(++o)===ku;);return(t=o)>=u?c=!0:(r=n.charCodeAt(o++))===Eu?f=!0:r===Cu&&(f=!0,n.charCodeAt(o)===Eu&&++o),n.slice(i+1,t-1).replace(/\"\"/g,'\"')}for(;o<u;){if((r=n.charCodeAt(t=o++))===Eu)f=!0;else if(r===Cu)f=!0,n.charCodeAt(o)===Eu&&++o;else if(r!==e)continue;return n.slice(i,t)}return c=!0,n.slice(i,u)}for(n.charCodeAt(u-1)===Eu&&--u,n.charCodeAt(u-1)===Cu&&--u;(r=s())!==Su;){for(var l=[];r!==Tu&&r!==Su;)l.push(r),r=s();t&&null==(l=t(l,a++))||i.push(l)}return i}function i(t,e){return t.map(function(t){return e.map(function(n){return o(t[n])}).join(n)})}function u(t){return t.map(o).join(n)}function o(n){return null==n?\"\":n instanceof Date?Ru(n):t.test(n+=\"\")?'\"'+n.replace(/\"/g,'\"\"')+'\"':n}return{parse:function(n,t){var e,i,u=r(n,function(n,r){if(e)return e(n,r-1);i=n,e=t?function(n,t){var e=Pu(n);return function(r,i){return t(e(r),i,n)}}(n,t):Pu(n)});return u.columns=i||[],u},parseRows:r,format:function(t,e){return null==e&&(e=zu(t)),[e.map(o).join(n)].concat(i(t,e)).join(\"\\n\")},formatBody:function(n,t){return null==t&&(t=zu(n)),i(n,t).join(\"\\n\")},formatRows:function(n){return n.map(u).join(\"\\n\")}}},Lu=Du(\",\"),qu=Lu.parse,Uu=Lu.parseRows,ju=Lu.format,Bu=Lu.formatBody,Yu=Lu.formatRows,Fu=Du(\"\\t\"),Iu=Fu.parse,Hu=Fu.parseRows,Xu=Fu.format,Gu=Fu.formatBody,Vu=Fu.formatRows;function $u(n){for(var t in n){var e,r=n[t].trim();if(r)if(\"true\"===r)r=!0;else if(\"false\"===r)r=!1;else if(\"NaN\"===r)r=NaN;else if(isNaN(e=+r)){if(!/^([-+]\\d{2})?\\d{4}(-\\d{2}(-\\d{2})?)?(T\\d{2}:\\d{2}(:\\d{2}(\\.\\d{3})?)?(Z|[-+]\\d{2}:\\d{2})?)?$/.test(r))continue;r=new Date(r)}else r=e;else r=null;n[t]=r}return n}function Wu(n){if(!n.ok)throw new Error(n.status+\" \"+n.statusText);return n.blob()}var Zu=function(n,t){return fetch(n,t).then(Wu)};function Qu(n){if(!n.ok)throw new Error(n.status+\" \"+n.statusText);return n.arrayBuffer()}var Ju=function(n,t){return fetch(n,t).then(Qu)};function Ku(n){if(!n.ok)throw new Error(n.status+\" \"+n.statusText);return n.text()}var no=function(n,t){return fetch(n,t).then(Ku)};function to(n){return function(t,e,r){return 2===arguments.length&&\"function\"==typeof e&&(r=e,e=void 0),no(t,e).then(function(t){return n(t,r)})}}function eo(n,t,e,r){3===arguments.length&&\"function\"==typeof e&&(r=e,e=void 0);var i=Du(n);return no(t,e).then(function(n){return i.parse(n,r)})}var ro=to(qu),io=to(Iu),uo=function(n,t){return new Promise(function(e,r){var i=new Image;for(var u in t)i[u]=t[u];i.onerror=r,i.onload=function(){e(i)},i.src=n})};function oo(n){if(!n.ok)throw new Error(n.status+\" \"+n.statusText);return n.json()}var ao=function(n,t){return fetch(n,t).then(oo)};function co(n){return function(t,e){return no(t,e).then(function(t){return(new DOMParser).parseFromString(t,n)})}}var fo=co(\"application/xml\"),so=co(\"text/html\"),lo=co(\"image/svg+xml\"),ho=function(n,t){var e;function r(){var r,i,u=e.length,o=0,a=0;for(r=0;r<u;++r)o+=(i=e[r]).x,a+=i.y;for(o=o/u-n,a=a/u-t,r=0;r<u;++r)(i=e[r]).x-=o,i.y-=a}return null==n&&(n=0),null==t&&(t=0),r.initialize=function(n){e=n},r.x=function(t){return arguments.length?(n=+t,r):n},r.y=function(n){return arguments.length?(t=+n,r):t},r},po=function(n){return function(){return n}},vo=function(){return 1e-6*(Math.random()-.5)};function go(n,t,e,r){if(isNaN(t)||isNaN(e))return n;var i,u,o,a,c,f,s,l,h,d=n._root,p={data:r},v=n._x0,g=n._y0,y=n._x1,b=n._y1;if(!d)return n._root=p,n;for(;d.length;)if((f=t>=(u=(v+y)/2))?v=u:y=u,(s=e>=(o=(g+b)/2))?g=o:b=o,i=d,!(d=d[l=s<<1|f]))return i[l]=p,n;if(a=+n._x.call(null,d.data),c=+n._y.call(null,d.data),t===a&&e===c)return p.next=d,i?i[l]=p:n._root=p,n;do{i=i?i[l]=new Array(4):n._root=new Array(4),(f=t>=(u=(v+y)/2))?v=u:y=u,(s=e>=(o=(g+b)/2))?g=o:b=o}while((l=s<<1|f)==(h=(c>=o)<<1|a>=u));return i[h]=d,i[l]=p,n}var yo=function(n,t,e,r,i){this.node=n,this.x0=t,this.y0=e,this.x1=r,this.y1=i};function bo(n){return n[0]}function _o(n){return n[1]}function mo(n,t,e){var r=new xo(null==t?bo:t,null==e?_o:e,NaN,NaN,NaN,NaN);return null==n?r:r.addAll(n)}function xo(n,t,e,r,i,u){this._x=n,this._y=t,this._x0=e,this._y0=r,this._x1=i,this._y1=u,this._root=void 0}function wo(n){for(var t={data:n.data},e=t;n=n.next;)e=e.next={data:n.data};return t}var Mo=mo.prototype=xo.prototype;function No(n){return n.x+n.vx}function Ao(n){return n.y+n.vy}Mo.copy=function(){var n,t,e=new xo(this._x,this._y,this._x0,this._y0,this._x1,this._y1),r=this._root;if(!r)return e;if(!r.length)return e._root=wo(r),e;for(n=[{source:r,target:e._root=new Array(4)}];r=n.pop();)for(var i=0;i<4;++i)(t=r.source[i])&&(t.length?n.push({source:t,target:r.target[i]=new Array(4)}):r.target[i]=wo(t));return e},Mo.add=function(n){var t=+this._x.call(null,n),e=+this._y.call(null,n);return go(this.cover(t,e),t,e,n)},Mo.addAll=function(n){var t,e,r,i,u=n.length,o=new Array(u),a=new Array(u),c=1/0,f=1/0,s=-1/0,l=-1/0;for(e=0;e<u;++e)isNaN(r=+this._x.call(null,t=n[e]))||isNaN(i=+this._y.call(null,t))||(o[e]=r,a[e]=i,r<c&&(c=r),r>s&&(s=r),i<f&&(f=i),i>l&&(l=i));if(c>s||f>l)return this;for(this.cover(c,f).cover(s,l),e=0;e<u;++e)go(this,o[e],a[e],n[e]);return this},Mo.cover=function(n,t){if(isNaN(n=+n)||isNaN(t=+t))return this;var e=this._x0,r=this._y0,i=this._x1,u=this._y1;if(isNaN(e))i=(e=Math.floor(n))+1,u=(r=Math.floor(t))+1;else{for(var o,a,c=i-e,f=this._root;e>n||n>=i||r>t||t>=u;)switch(a=(t<r)<<1|n<e,(o=new Array(4))[a]=f,f=o,c*=2,a){case 0:i=e+c,u=r+c;break;case 1:e=i-c,u=r+c;break;case 2:i=e+c,r=u-c;break;case 3:e=i-c,r=u-c}this._root&&this._root.length&&(this._root=f)}return this._x0=e,this._y0=r,this._x1=i,this._y1=u,this},Mo.data=function(){var n=[];return this.visit(function(t){if(!t.length)do{n.push(t.data)}while(t=t.next)}),n},Mo.extent=function(n){return arguments.length?this.cover(+n[0][0],+n[0][1]).cover(+n[1][0],+n[1][1]):isNaN(this._x0)?void 0:[[this._x0,this._y0],[this._x1,this._y1]]},Mo.find=function(n,t,e){var r,i,u,o,a,c,f,s=this._x0,l=this._y0,h=this._x1,d=this._y1,p=[],v=this._root;for(v&&p.push(new yo(v,s,l,h,d)),null==e?e=1/0:(s=n-e,l=t-e,h=n+e,d=t+e,e*=e);c=p.pop();)if(!(!(v=c.node)||(i=c.x0)>h||(u=c.y0)>d||(o=c.x1)<s||(a=c.y1)<l))if(v.length){var g=(i+o)/2,y=(u+a)/2;p.push(new yo(v[3],g,y,o,a),new yo(v[2],i,y,g,a),new yo(v[1],g,u,o,y),new yo(v[0],i,u,g,y)),(f=(t>=y)<<1|n>=g)&&(c=p[p.length-1],p[p.length-1]=p[p.length-1-f],p[p.length-1-f]=c)}else{var b=n-+this._x.call(null,v.data),_=t-+this._y.call(null,v.data),m=b*b+_*_;if(m<e){var x=Math.sqrt(e=m);s=n-x,l=t-x,h=n+x,d=t+x,r=v.data}}return r},Mo.remove=function(n){if(isNaN(u=+this._x.call(null,n))||isNaN(o=+this._y.call(null,n)))return this;var t,e,r,i,u,o,a,c,f,s,l,h,d=this._root,p=this._x0,v=this._y0,g=this._x1,y=this._y1;if(!d)return this;if(d.length)for(;;){if((f=u>=(a=(p+g)/2))?p=a:g=a,(s=o>=(c=(v+y)/2))?v=c:y=c,t=d,!(d=d[l=s<<1|f]))return this;if(!d.length)break;(t[l+1&3]||t[l+2&3]||t[l+3&3])&&(e=t,h=l)}for(;d.data!==n;)if(r=d,!(d=d.next))return this;return(i=d.next)&&delete d.next,r?(i?r.next=i:delete r.next,this):t?(i?t[l]=i:delete t[l],(d=t[0]||t[1]||t[2]||t[3])&&d===(t[3]||t[2]||t[1]||t[0])&&!d.length&&(e?e[h]=d:this._root=d),this):(this._root=i,this)},Mo.removeAll=function(n){for(var t=0,e=n.length;t<e;++t)this.remove(n[t]);return this},Mo.root=function(){return this._root},Mo.size=function(){var n=0;return this.visit(function(t){if(!t.length)do{++n}while(t=t.next)}),n},Mo.visit=function(n){var t,e,r,i,u,o,a=[],c=this._root;for(c&&a.push(new yo(c,this._x0,this._y0,this._x1,this._y1));t=a.pop();)if(!n(c=t.node,r=t.x0,i=t.y0,u=t.x1,o=t.y1)&&c.length){var f=(r+u)/2,s=(i+o)/2;(e=c[3])&&a.push(new yo(e,f,s,u,o)),(e=c[2])&&a.push(new yo(e,r,s,f,o)),(e=c[1])&&a.push(new yo(e,f,i,u,s)),(e=c[0])&&a.push(new yo(e,r,i,f,s))}return this},Mo.visitAfter=function(n){var t,e=[],r=[];for(this._root&&e.push(new yo(this._root,this._x0,this._y0,this._x1,this._y1));t=e.pop();){var i=t.node;if(i.length){var u,o=t.x0,a=t.y0,c=t.x1,f=t.y1,s=(o+c)/2,l=(a+f)/2;(u=i[0])&&e.push(new yo(u,o,a,s,l)),(u=i[1])&&e.push(new yo(u,s,a,c,l)),(u=i[2])&&e.push(new yo(u,o,l,s,f)),(u=i[3])&&e.push(new yo(u,s,l,c,f))}r.push(t)}for(;t=r.pop();)n(t.node,t.x0,t.y0,t.x1,t.y1);return this},Mo.x=function(n){return arguments.length?(this._x=n,this):this._x},Mo.y=function(n){return arguments.length?(this._y=n,this):this._y};var To=function(n){var t,e,r=1,i=1;function u(){for(var n,u,a,c,f,s,l,h=t.length,d=0;d<i;++d)for(u=mo(t,No,Ao).visitAfter(o),n=0;n<h;++n)a=t[n],s=e[a.index],l=s*s,c=a.x+a.vx,f=a.y+a.vy,u.visit(p);function p(n,t,e,i,u){var o=n.data,h=n.r,d=s+h;if(!o)return t>c+d||i<c-d||e>f+d||u<f-d;if(o.index>a.index){var p=c-o.x-o.vx,v=f-o.y-o.vy,g=p*p+v*v;g<d*d&&(0===p&&(g+=(p=vo())*p),0===v&&(g+=(v=vo())*v),g=(d-(g=Math.sqrt(g)))/g*r,a.vx+=(p*=g)*(d=(h*=h)/(l+h)),a.vy+=(v*=g)*d,o.vx-=p*(d=1-d),o.vy-=v*d)}}}function o(n){if(n.data)return n.r=e[n.data.index];for(var t=n.r=0;t<4;++t)n[t]&&n[t].r>n.r&&(n.r=n[t].r)}function a(){if(t){var r,i,u=t.length;for(e=new Array(u),r=0;r<u;++r)i=t[r],e[i.index]=+n(i,r,t)}}return\"function\"!=typeof n&&(n=po(null==n?1:+n)),u.initialize=function(n){t=n,a()},u.iterations=function(n){return arguments.length?(i=+n,u):i},u.strength=function(n){return arguments.length?(r=+n,u):r},u.radius=function(t){return arguments.length?(n=\"function\"==typeof t?t:po(+t),a(),u):n},u};function So(n){return n.index}function ko(n,t){var e=n.get(t);if(!e)throw new Error(\"missing: \"+t);return e}var Eo=function(n){var t,e,r,i,u,o=So,a=function(n){return 1/Math.min(i[n.source.index],i[n.target.index])},c=po(30),f=1;function s(r){for(var i=0,o=n.length;i<f;++i)for(var a,c,s,l,h,d,p,v=0;v<o;++v)c=(a=n[v]).source,l=(s=a.target).x+s.vx-c.x-c.vx||vo(),h=s.y+s.vy-c.y-c.vy||vo(),l*=d=((d=Math.sqrt(l*l+h*h))-e[v])/d*r*t[v],h*=d,s.vx-=l*(p=u[v]),s.vy-=h*p,c.vx+=l*(p=1-p),c.vy+=h*p}function l(){if(r){var a,c,f=r.length,s=n.length,l=Qi(r,o);for(a=0,i=new Array(f);a<s;++a)(c=n[a]).index=a,\"object\"!=typeof c.source&&(c.source=ko(l,c.source)),\"object\"!=typeof c.target&&(c.target=ko(l,c.target)),i[c.source.index]=(i[c.source.index]||0)+1,i[c.target.index]=(i[c.target.index]||0)+1;for(a=0,u=new Array(s);a<s;++a)c=n[a],u[a]=i[c.source.index]/(i[c.source.index]+i[c.target.index]);t=new Array(s),h(),e=new Array(s),d()}}function h(){if(r)for(var e=0,i=n.length;e<i;++e)t[e]=+a(n[e],e,n)}function d(){if(r)for(var t=0,i=n.length;t<i;++t)e[t]=+c(n[t],t,n)}return null==n&&(n=[]),s.initialize=function(n){r=n,l()},s.links=function(t){return arguments.length?(n=t,l(),s):n},s.id=function(n){return arguments.length?(o=n,s):o},s.iterations=function(n){return arguments.length?(f=+n,s):f},s.strength=function(n){return arguments.length?(a=\"function\"==typeof n?n:po(+n),h(),s):a},s.distance=function(n){return arguments.length?(c=\"function\"==typeof n?n:po(+n),d(),s):c},s};function Co(n){return n.x}function Po(n){return n.y}var zo=10,Oo=Math.PI*(3-Math.sqrt(5)),Ro=function(n){var t,e=1,r=.001,i=1-Math.pow(r,1/300),u=0,o=.6,a=Qi(),c=De(s),f=dn(\"tick\",\"end\");function s(){l(),f.call(\"tick\",t),e<r&&(c.stop(),f.call(\"end\",t))}function l(r){var c,f,s=n.length;void 0===r&&(r=1);for(var l=0;l<r;++l)for(e+=(u-e)*i,a.each(function(n){n(e)}),c=0;c<s;++c)null==(f=n[c]).fx?f.x+=f.vx*=o:(f.x=f.fx,f.vx=0),null==f.fy?f.y+=f.vy*=o:(f.y=f.fy,f.vy=0);return t}function h(){for(var t,e=0,r=n.length;e<r;++e){if((t=n[e]).index=e,isNaN(t.fx)||(t.x=t.fx),isNaN(t.fy)||(t.y=t.fy),isNaN(t.x)||isNaN(t.y)){var i=zo*Math.sqrt(e),u=e*Oo;t.x=i*Math.cos(u),t.y=i*Math.sin(u)}(isNaN(t.vx)||isNaN(t.vy))&&(t.vx=t.vy=0)}}function d(t){return t.initialize&&t.initialize(n),t}return null==n&&(n=[]),h(),t={tick:l,restart:function(){return c.restart(s),t},stop:function(){return c.stop(),t},nodes:function(e){return arguments.length?(n=e,h(),a.each(d),t):n},alpha:function(n){return arguments.length?(e=+n,t):e},alphaMin:function(n){return arguments.length?(r=+n,t):r},alphaDecay:function(n){return arguments.length?(i=+n,t):+i},alphaTarget:function(n){return arguments.length?(u=+n,t):u},velocityDecay:function(n){return arguments.length?(o=1-n,t):1-o},force:function(n,e){return arguments.length>1?(null==e?a.remove(n):a.set(n,d(e)),t):a.get(n)},find:function(t,e,r){var i,u,o,a,c,f=0,s=n.length;for(null==r?r=1/0:r*=r,f=0;f<s;++f)(o=(i=t-(a=n[f]).x)*i+(u=e-a.y)*u)<r&&(c=a,r=o);return c},on:function(n,e){return arguments.length>1?(f.on(n,e),t):f.on(n)}}},Do=function(){var n,t,e,r,i=po(-30),u=1,o=1/0,a=.81;function c(r){var i,u=n.length,o=mo(n,Co,Po).visitAfter(s);for(e=r,i=0;i<u;++i)t=n[i],o.visit(l)}function f(){if(n){var t,e,u=n.length;for(r=new Array(u),t=0;t<u;++t)e=n[t],r[e.index]=+i(e,t,n)}}function s(n){var t,e,i,u,o,a=0,c=0;if(n.length){for(i=u=o=0;o<4;++o)(t=n[o])&&(e=Math.abs(t.value))&&(a+=t.value,c+=e,i+=e*t.x,u+=e*t.y);n.x=i/c,n.y=u/c}else{(t=n).x=t.data.x,t.y=t.data.y;do{a+=r[t.data.index]}while(t=t.next)}n.value=a}function l(n,i,c,f){if(!n.value)return!0;var s=n.x-t.x,l=n.y-t.y,h=f-i,d=s*s+l*l;if(h*h/a<d)return d<o&&(0===s&&(d+=(s=vo())*s),0===l&&(d+=(l=vo())*l),d<u&&(d=Math.sqrt(u*d)),t.vx+=s*n.value*e/d,t.vy+=l*n.value*e/d),!0;if(!(n.length||d>=o)){(n.data!==t||n.next)&&(0===s&&(d+=(s=vo())*s),0===l&&(d+=(l=vo())*l),d<u&&(d=Math.sqrt(u*d)));do{n.data!==t&&(h=r[n.data.index]*e/d,t.vx+=s*h,t.vy+=l*h)}while(n=n.next)}}return c.initialize=function(t){n=t,f()},c.strength=function(n){return arguments.length?(i=\"function\"==typeof n?n:po(+n),f(),c):i},c.distanceMin=function(n){return arguments.length?(u=n*n,c):Math.sqrt(u)},c.distanceMax=function(n){return arguments.length?(o=n*n,c):Math.sqrt(o)},c.theta=function(n){return arguments.length?(a=n*n,c):Math.sqrt(a)},c},Lo=function(n,t,e){var r,i,u,o=po(.1);function a(n){for(var o=0,a=r.length;o<a;++o){var c=r[o],f=c.x-t||1e-6,s=c.y-e||1e-6,l=Math.sqrt(f*f+s*s),h=(u[o]-l)*i[o]*n/l;c.vx+=f*h,c.vy+=s*h}}function c(){if(r){var t,e=r.length;for(i=new Array(e),u=new Array(e),t=0;t<e;++t)u[t]=+n(r[t],t,r),i[t]=isNaN(u[t])?0:+o(r[t],t,r)}}return\"function\"!=typeof n&&(n=po(+n)),null==t&&(t=0),null==e&&(e=0),a.initialize=function(n){r=n,c()},a.strength=function(n){return arguments.length?(o=\"function\"==typeof n?n:po(+n),c(),a):o},a.radius=function(t){return arguments.length?(n=\"function\"==typeof t?t:po(+t),c(),a):n},a.x=function(n){return arguments.length?(t=+n,a):t},a.y=function(n){return arguments.length?(e=+n,a):e},a},qo=function(n){var t,e,r,i=po(.1);function u(n){for(var i,u=0,o=t.length;u<o;++u)(i=t[u]).vx+=(r[u]-i.x)*e[u]*n}function o(){if(t){var u,o=t.length;for(e=new Array(o),r=new Array(o),u=0;u<o;++u)e[u]=isNaN(r[u]=+n(t[u],u,t))?0:+i(t[u],u,t)}}return\"function\"!=typeof n&&(n=po(null==n?0:+n)),u.initialize=function(n){t=n,o()},u.strength=function(n){return arguments.length?(i=\"function\"==typeof n?n:po(+n),o(),u):i},u.x=function(t){return arguments.length?(n=\"function\"==typeof t?t:po(+t),o(),u):n},u},Uo=function(n){var t,e,r,i=po(.1);function u(n){for(var i,u=0,o=t.length;u<o;++u)(i=t[u]).vy+=(r[u]-i.y)*e[u]*n}function o(){if(t){var u,o=t.length;for(e=new Array(o),r=new Array(o),u=0;u<o;++u)e[u]=isNaN(r[u]=+n(t[u],u,t))?0:+i(t[u],u,t)}}return\"function\"!=typeof n&&(n=po(null==n?0:+n)),u.initialize=function(n){t=n,o()},u.strength=function(n){return arguments.length?(i=\"function\"==typeof n?n:po(+n),o(),u):i},u.y=function(t){return arguments.length?(n=\"function\"==typeof t?t:po(+t),o(),u):n},u},jo=function(n,t){if((e=(n=t?n.toExponential(t-1):n.toExponential()).indexOf(\"e\"))<0)return null;var e,r=n.slice(0,e);return[r.length>1?r[0]+r.slice(2):r,+n.slice(e+1)]},Bo=function(n){return(n=jo(Math.abs(n)))?n[1]:NaN},Yo=/^(?:(.)?([<>=^]))?([+\\-( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;function Fo(n){return new Io(n)}function Io(n){if(!(t=Yo.exec(n)))throw new Error(\"invalid format: \"+n);var t;this.fill=t[1]||\" \",this.align=t[2]||\">\",this.sign=t[3]||\"-\",this.symbol=t[4]||\"\",this.zero=!!t[5],this.width=t[6]&&+t[6],this.comma=!!t[7],this.precision=t[8]&&+t[8].slice(1),this.trim=!!t[9],this.type=t[10]||\"\"}Fo.prototype=Io.prototype,Io.prototype.toString=function(){return this.fill+this.align+this.sign+this.symbol+(this.zero?\"0\":\"\")+(null==this.width?\"\":Math.max(1,0|this.width))+(this.comma?\",\":\"\")+(null==this.precision?\"\":\".\"+Math.max(0,0|this.precision))+(this.trim?\"~\":\"\")+this.type};var Ho,Xo,Go,Vo,$o=function(n){n:for(var t,e=n.length,r=1,i=-1;r<e;++r)switch(n[r]){case\".\":i=t=r;break;case\"0\":0===i&&(i=r),t=r;break;default:if(i>0){if(!+n[r])break n;i=0}}return i>0?n.slice(0,i)+n.slice(t+1):n},Wo=function(n,t){var e=jo(n,t);if(!e)return n+\"\";var r=e[0],i=e[1];return i<0?\"0.\"+new Array(-i).join(\"0\")+r:r.length>i+1?r.slice(0,i+1)+\".\"+r.slice(i+1):r+new Array(i-r.length+2).join(\"0\")},Zo={\"%\":function(n,t){return(100*n).toFixed(t)},b:function(n){return Math.round(n).toString(2)},c:function(n){return n+\"\"},d:function(n){return Math.round(n).toString(10)},e:function(n,t){return n.toExponential(t)},f:function(n,t){return n.toFixed(t)},g:function(n,t){return n.toPrecision(t)},o:function(n){return Math.round(n).toString(8)},p:function(n,t){return Wo(100*n,t)},r:Wo,s:function(n,t){var e=jo(n,t);if(!e)return n+\"\";var r=e[0],i=e[1],u=i-(Ho=3*Math.max(-8,Math.min(8,Math.floor(i/3))))+1,o=r.length;return u===o?r:u>o?r+new Array(u-o+1).join(\"0\"):u>0?r.slice(0,u)+\".\"+r.slice(u):\"0.\"+new Array(1-u).join(\"0\")+jo(n,Math.max(0,t+u-1))[0]},X:function(n){return Math.round(n).toString(16).toUpperCase()},x:function(n){return Math.round(n).toString(16)}},Qo=function(n){return n},Jo=[\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"],Ko=function(n){var t,e,r=n.grouping&&n.thousands?(t=n.grouping,e=n.thousands,function(n,r){for(var i=n.length,u=[],o=0,a=t[0],c=0;i>0&&a>0&&(c+a+1>r&&(a=Math.max(1,r-c)),u.push(n.substring(i-=a,i+a)),!((c+=a+1)>r));)a=t[o=(o+1)%t.length];return u.reverse().join(e)}):Qo,i=n.currency,u=n.decimal,o=n.numerals?function(n){return function(t){return t.replace(/[0-9]/g,function(t){return n[+t]})}}(n.numerals):Qo,a=n.percent||\"%\";function c(n){var t=(n=Fo(n)).fill,e=n.align,c=n.sign,f=n.symbol,s=n.zero,l=n.width,h=n.comma,d=n.precision,p=n.trim,v=n.type;\"n\"===v?(h=!0,v=\"g\"):Zo[v]||(null==d&&(d=12),p=!0,v=\"g\"),(s||\"0\"===t&&\"=\"===e)&&(s=!0,t=\"0\",e=\"=\");var g=\"$\"===f?i[0]:\"#\"===f&&/[boxX]/.test(v)?\"0\"+v.toLowerCase():\"\",y=\"$\"===f?i[1]:/[%p]/.test(v)?a:\"\",b=Zo[v],_=/[defgprs%]/.test(v);function m(n){var i,a,f,m=g,x=y;if(\"c\"===v)x=b(n)+x,n=\"\";else{var w=(n=+n)<0;if(n=b(Math.abs(n),d),p&&(n=$o(n)),w&&0==+n&&(w=!1),m=(w?\"(\"===c?c:\"-\":\"-\"===c||\"(\"===c?\"\":c)+m,x=(\"s\"===v?Jo[8+Ho/3]:\"\")+x+(w&&\"(\"===c?\")\":\"\"),_)for(i=-1,a=n.length;++i<a;)if(48>(f=n.charCodeAt(i))||f>57){x=(46===f?u+n.slice(i+1):n.slice(i))+x,n=n.slice(0,i);break}}h&&!s&&(n=r(n,1/0));var M=m.length+n.length+x.length,N=M<l?new Array(l-M+1).join(t):\"\";switch(h&&s&&(n=r(N+n,N.length?l-x.length:1/0),N=\"\"),e){case\"<\":n=m+n+x+N;break;case\"=\":n=m+N+n+x;break;case\"^\":n=N.slice(0,M=N.length>>1)+m+n+x+N.slice(M);break;default:n=N+m+n+x}return o(n)}return d=null==d?6:/[gprs]/.test(v)?Math.max(1,Math.min(21,d)):Math.max(0,Math.min(20,d)),m.toString=function(){return n+\"\"},m}return{format:c,formatPrefix:function(n,t){var e=c(((n=Fo(n)).type=\"f\",n)),r=3*Math.max(-8,Math.min(8,Math.floor(Bo(t)/3))),i=Math.pow(10,-r),u=Jo[8+r/3];return function(n){return e(i*n)+u}}}};function na(n){return Xo=Ko(n),Go=Xo.format,Vo=Xo.formatPrefix,Xo}na({decimal:\".\",thousands:\",\",grouping:[3],currency:[\"$\",\"\"]});var ta=function(n){return Math.max(0,-Bo(Math.abs(n)))},ea=function(n,t){return Math.max(0,3*Math.max(-8,Math.min(8,Math.floor(Bo(t)/3)))-Bo(Math.abs(n)))},ra=function(n,t){return n=Math.abs(n),t=Math.abs(t)-n,Math.max(0,Bo(t)-Bo(n))+1},ia=function(){return new ua};function ua(){this.reset()}ua.prototype={constructor:ua,reset:function(){this.s=this.t=0},add:function(n){aa(oa,n,this.t),aa(this,oa.s,this.s),this.s?this.t+=oa.t:this.s=oa.t},valueOf:function(){return this.s}};var oa=new ua;function aa(n,t,e){var r=n.s=t+e,i=r-t,u=r-i;n.t=t-u+(e-i)}var ca=1e-6,fa=Math.PI,sa=fa/2,la=fa/4,ha=2*fa,da=180/fa,pa=fa/180,va=Math.abs,ga=Math.atan,ya=Math.atan2,ba=Math.cos,_a=Math.ceil,ma=Math.exp,xa=(Math.floor,Math.log),wa=Math.pow,Ma=Math.sin,Na=Math.sign||function(n){return n>0?1:n<0?-1:0},Aa=Math.sqrt,Ta=Math.tan;function Sa(n){return n>1?0:n<-1?fa:Math.acos(n)}function ka(n){return n>1?sa:n<-1?-sa:Math.asin(n)}function Ea(n){return(n=Ma(n/2))*n}function Ca(){}function Pa(n,t){n&&Oa.hasOwnProperty(n.type)&&Oa[n.type](n,t)}var za={Feature:function(n,t){Pa(n.geometry,t)},FeatureCollection:function(n,t){for(var e=n.features,r=-1,i=e.length;++r<i;)Pa(e[r].geometry,t)}},Oa={Sphere:function(n,t){t.sphere()},Point:function(n,t){n=n.coordinates,t.point(n[0],n[1],n[2])},MultiPoint:function(n,t){for(var e=n.coordinates,r=-1,i=e.length;++r<i;)n=e[r],t.point(n[0],n[1],n[2])},LineString:function(n,t){Ra(n.coordinates,t,0)},MultiLineString:function(n,t){for(var e=n.coordinates,r=-1,i=e.length;++r<i;)Ra(e[r],t,0)},Polygon:function(n,t){Da(n.coordinates,t)},MultiPolygon:function(n,t){for(var e=n.coordinates,r=-1,i=e.length;++r<i;)Da(e[r],t)},GeometryCollection:function(n,t){for(var e=n.geometries,r=-1,i=e.length;++r<i;)Pa(e[r],t)}};function Ra(n,t,e){var r,i=-1,u=n.length-e;for(t.lineStart();++i<u;)r=n[i],t.point(r[0],r[1],r[2]);t.lineEnd()}function Da(n,t){var e=-1,r=n.length;for(t.polygonStart();++e<r;)Ra(n[e],t,1);t.polygonEnd()}var La,qa,Ua,ja,Ba,Ya=function(n,t){n&&za.hasOwnProperty(n.type)?za[n.type](n,t):Pa(n,t)},Fa=ia(),Ia=ia(),Ha={point:Ca,lineStart:Ca,lineEnd:Ca,polygonStart:function(){Fa.reset(),Ha.lineStart=Xa,Ha.lineEnd=Ga},polygonEnd:function(){var n=+Fa;Ia.add(n<0?ha+n:n),this.lineStart=this.lineEnd=this.point=Ca},sphere:function(){Ia.add(ha)}};function Xa(){Ha.point=Va}function Ga(){$a(La,qa)}function Va(n,t){Ha.point=$a,La=n,qa=t,Ua=n*=pa,ja=ba(t=(t*=pa)/2+la),Ba=Ma(t)}function $a(n,t){var e=(n*=pa)-Ua,r=e>=0?1:-1,i=r*e,u=ba(t=(t*=pa)/2+la),o=Ma(t),a=Ba*o,c=ja*u+a*ba(i),f=a*r*Ma(i);Fa.add(ya(f,c)),Ua=n,ja=u,Ba=o}var Wa=function(n){return Ia.reset(),Ya(n,Ha),2*Ia};function Za(n){return[ya(n[1],n[0]),ka(n[2])]}function Qa(n){var t=n[0],e=n[1],r=ba(e);return[r*ba(t),r*Ma(t),Ma(e)]}function Ja(n,t){return n[0]*t[0]+n[1]*t[1]+n[2]*t[2]}function Ka(n,t){return[n[1]*t[2]-n[2]*t[1],n[2]*t[0]-n[0]*t[2],n[0]*t[1]-n[1]*t[0]]}function nc(n,t){n[0]+=t[0],n[1]+=t[1],n[2]+=t[2]}function tc(n,t){return[n[0]*t,n[1]*t,n[2]*t]}function ec(n){var t=Aa(n[0]*n[0]+n[1]*n[1]+n[2]*n[2]);n[0]/=t,n[1]/=t,n[2]/=t}var rc,ic,uc,oc,ac,cc,fc,sc,lc,hc,dc=ia(),pc={point:vc,lineStart:yc,lineEnd:bc,polygonStart:function(){pc.point=_c,pc.lineStart=mc,pc.lineEnd=xc,dc.reset(),Ha.polygonStart()},polygonEnd:function(){Ha.polygonEnd(),pc.point=vc,pc.lineStart=yc,pc.lineEnd=bc,Fa<0?(rc=-(uc=180),ic=-(oc=90)):dc>ca?oc=90:dc<-ca&&(ic=-90),hc[0]=rc,hc[1]=uc}};function vc(n,t){lc.push(hc=[rc=n,uc=n]),t<ic&&(ic=t),t>oc&&(oc=t)}function gc(n,t){var e=Qa([n*pa,t*pa]);if(sc){var r=Ka(sc,e),i=Ka([r[1],-r[0],0],r);ec(i),i=Za(i);var u,o=n-ac,a=o>0?1:-1,c=i[0]*da*a,f=va(o)>180;f^(a*ac<c&&c<a*n)?(u=i[1]*da)>oc&&(oc=u):f^(a*ac<(c=(c+360)%360-180)&&c<a*n)?(u=-i[1]*da)<ic&&(ic=u):(t<ic&&(ic=t),t>oc&&(oc=t)),f?n<ac?wc(rc,n)>wc(rc,uc)&&(uc=n):wc(n,uc)>wc(rc,uc)&&(rc=n):uc>=rc?(n<rc&&(rc=n),n>uc&&(uc=n)):n>ac?wc(rc,n)>wc(rc,uc)&&(uc=n):wc(n,uc)>wc(rc,uc)&&(rc=n)}else lc.push(hc=[rc=n,uc=n]);t<ic&&(ic=t),t>oc&&(oc=t),sc=e,ac=n}function yc(){pc.point=gc}function bc(){hc[0]=rc,hc[1]=uc,pc.point=vc,sc=null}function _c(n,t){if(sc){var e=n-ac;dc.add(va(e)>180?e+(e>0?360:-360):e)}else cc=n,fc=t;Ha.point(n,t),gc(n,t)}function mc(){Ha.lineStart()}function xc(){_c(cc,fc),Ha.lineEnd(),va(dc)>ca&&(rc=-(uc=180)),hc[0]=rc,hc[1]=uc,sc=null}function wc(n,t){return(t-=n)<0?t+360:t}function Mc(n,t){return n[0]-t[0]}function Nc(n,t){return n[0]<=n[1]?n[0]<=t&&t<=n[1]:t<n[0]||n[1]<t}var Ac,Tc,Sc,kc,Ec,Cc,Pc,zc,Oc,Rc,Dc,Lc,qc,Uc,jc,Bc,Yc=function(n){var t,e,r,i,u,o,a;if(oc=uc=-(rc=ic=1/0),lc=[],Ya(n,pc),e=lc.length){for(lc.sort(Mc),t=1,u=[r=lc[0]];t<e;++t)Nc(r,(i=lc[t])[0])||Nc(r,i[1])?(wc(r[0],i[1])>wc(r[0],r[1])&&(r[1]=i[1]),wc(i[0],r[1])>wc(r[0],r[1])&&(r[0]=i[0])):u.push(r=i);for(o=-1/0,t=0,r=u[e=u.length-1];t<=e;r=i,++t)i=u[t],(a=wc(r[1],i[0]))>o&&(o=a,rc=i[0],uc=r[1])}return lc=hc=null,rc===1/0||ic===1/0?[[NaN,NaN],[NaN,NaN]]:[[rc,ic],[uc,oc]]},Fc={sphere:Ca,point:Ic,lineStart:Xc,lineEnd:$c,polygonStart:function(){Fc.lineStart=Wc,Fc.lineEnd=Zc},polygonEnd:function(){Fc.lineStart=Xc,Fc.lineEnd=$c}};function Ic(n,t){n*=pa;var e=ba(t*=pa);Hc(e*ba(n),e*Ma(n),Ma(t))}function Hc(n,t,e){Sc+=(n-Sc)/++Ac,kc+=(t-kc)/Ac,Ec+=(e-Ec)/Ac}function Xc(){Fc.point=Gc}function Gc(n,t){n*=pa;var e=ba(t*=pa);Uc=e*ba(n),jc=e*Ma(n),Bc=Ma(t),Fc.point=Vc,Hc(Uc,jc,Bc)}function Vc(n,t){n*=pa;var e=ba(t*=pa),r=e*ba(n),i=e*Ma(n),u=Ma(t),o=ya(Aa((o=jc*u-Bc*i)*o+(o=Bc*r-Uc*u)*o+(o=Uc*i-jc*r)*o),Uc*r+jc*i+Bc*u);Tc+=o,Cc+=o*(Uc+(Uc=r)),Pc+=o*(jc+(jc=i)),zc+=o*(Bc+(Bc=u)),Hc(Uc,jc,Bc)}function $c(){Fc.point=Ic}function Wc(){Fc.point=Qc}function Zc(){Jc(Lc,qc),Fc.point=Ic}function Qc(n,t){Lc=n,qc=t,n*=pa,t*=pa,Fc.point=Jc;var e=ba(t);Uc=e*ba(n),jc=e*Ma(n),Bc=Ma(t),Hc(Uc,jc,Bc)}function Jc(n,t){n*=pa;var e=ba(t*=pa),r=e*ba(n),i=e*Ma(n),u=Ma(t),o=jc*u-Bc*i,a=Bc*r-Uc*u,c=Uc*i-jc*r,f=Aa(o*o+a*a+c*c),s=ka(f),l=f&&-s/f;Oc+=l*o,Rc+=l*a,Dc+=l*c,Tc+=s,Cc+=s*(Uc+(Uc=r)),Pc+=s*(jc+(jc=i)),zc+=s*(Bc+(Bc=u)),Hc(Uc,jc,Bc)}var Kc=function(n){Ac=Tc=Sc=kc=Ec=Cc=Pc=zc=Oc=Rc=Dc=0,Ya(n,Fc);var t=Oc,e=Rc,r=Dc,i=t*t+e*e+r*r;return i<1e-12&&(t=Cc,e=Pc,r=zc,Tc<ca&&(t=Sc,e=kc,r=Ec),(i=t*t+e*e+r*r)<1e-12)?[NaN,NaN]:[ya(e,t)*da,ka(r/Aa(i))*da]},nf=function(n){return function(){return n}},tf=function(n,t){function e(e,r){return e=n(e,r),t(e[0],e[1])}return n.invert&&t.invert&&(e.invert=function(e,r){return(e=t.invert(e,r))&&n.invert(e[0],e[1])}),e};function ef(n,t){return[va(n)>fa?n+Math.round(-n/ha)*ha:n,t]}function rf(n,t,e){return(n%=ha)?t||e?tf(of(n),af(t,e)):of(n):t||e?af(t,e):ef}function uf(n){return function(t,e){return[(t+=n)>fa?t-ha:t<-fa?t+ha:t,e]}}function of(n){var t=uf(n);return t.invert=uf(-n),t}function af(n,t){var e=ba(n),r=Ma(n),i=ba(t),u=Ma(t);function o(n,t){var o=ba(t),a=ba(n)*o,c=Ma(n)*o,f=Ma(t),s=f*e+a*r;return[ya(c*i-s*u,a*e-f*r),ka(s*i+c*u)]}return o.invert=function(n,t){var o=ba(t),a=ba(n)*o,c=Ma(n)*o,f=Ma(t),s=f*i-c*u;return[ya(c*i+f*u,a*e+s*r),ka(s*e-a*r)]},o}ef.invert=ef;var cf=function(n){function t(t){return(t=n(t[0]*pa,t[1]*pa))[0]*=da,t[1]*=da,t}return n=rf(n[0]*pa,n[1]*pa,n.length>2?n[2]*pa:0),t.invert=function(t){return(t=n.invert(t[0]*pa,t[1]*pa))[0]*=da,t[1]*=da,t},t};function ff(n,t,e,r,i,u){if(e){var o=ba(t),a=Ma(t),c=r*e;null==i?(i=t+r*ha,u=t-c/2):(i=sf(o,i),u=sf(o,u),(r>0?i<u:i>u)&&(i+=r*ha));for(var f,s=i;r>0?s>u:s<u;s-=c)f=Za([o,-a*ba(s),-a*Ma(s)]),n.point(f[0],f[1])}}function sf(n,t){(t=Qa(t))[0]-=n,ec(t);var e=Sa(-t[1]);return((-t[2]<0?-e:e)+ha-ca)%ha}var lf=function(){var n,t,e=nf([0,0]),r=nf(90),i=nf(6),u={point:function(e,r){n.push(e=t(e,r)),e[0]*=da,e[1]*=da}};function o(){var o=e.apply(this,arguments),a=r.apply(this,arguments)*pa,c=i.apply(this,arguments)*pa;return n=[],t=rf(-o[0]*pa,-o[1]*pa,0).invert,ff(u,a,c,1),o={type:\"Polygon\",coordinates:[n]},n=t=null,o}return o.center=function(n){return arguments.length?(e=\"function\"==typeof n?n:nf([+n[0],+n[1]]),o):e},o.radius=function(n){return arguments.length?(r=\"function\"==typeof n?n:nf(+n),o):r},o.precision=function(n){return arguments.length?(i=\"function\"==typeof n?n:nf(+n),o):i},o},hf=function(){var n,t=[];return{point:function(t,e){n.push([t,e])},lineStart:function(){t.push(n=[])},lineEnd:Ca,rejoin:function(){t.length>1&&t.push(t.pop().concat(t.shift()))},result:function(){var e=t;return t=[],n=null,e}}},df=function(n,t){return va(n[0]-t[0])<ca&&va(n[1]-t[1])<ca};function pf(n,t,e,r){this.x=n,this.z=t,this.o=e,this.e=r,this.v=!1,this.n=this.p=null}var vf=function(n,t,e,r,i){var u,o,a=[],c=[];if(n.forEach(function(n){if(!((t=n.length-1)<=0)){var t,e,r=n[0],o=n[t];if(df(r,o)){for(i.lineStart(),u=0;u<t;++u)i.point((r=n[u])[0],r[1]);i.lineEnd()}else a.push(e=new pf(r,n,null,!0)),c.push(e.o=new pf(r,null,e,!1)),a.push(e=new pf(o,n,null,!1)),c.push(e.o=new pf(o,null,e,!0))}}),a.length){for(c.sort(t),gf(a),gf(c),u=0,o=c.length;u<o;++u)c[u].e=e=!e;for(var f,s,l=a[0];;){for(var h=l,d=!0;h.v;)if((h=h.n)===l)return;f=h.z,i.lineStart();do{if(h.v=h.o.v=!0,h.e){if(d)for(u=0,o=f.length;u<o;++u)i.point((s=f[u])[0],s[1]);else r(h.x,h.n.x,1,i);h=h.n}else{if(d)for(f=h.p.z,u=f.length-1;u>=0;--u)i.point((s=f[u])[0],s[1]);else r(h.x,h.p.x,-1,i);h=h.p}f=(h=h.o).z,d=!d}while(!h.v);i.lineEnd()}}};function gf(n){if(t=n.length){for(var t,e,r=0,i=n[0];++r<t;)i.n=e=n[r],e.p=i,i=e;i.n=e=n[0],e.p=i}}var yf=ia(),bf=function(n,t){var e=t[0],r=t[1],i=Ma(r),u=[Ma(e),-ba(e),0],o=0,a=0;yf.reset(),1===i?r=sa+ca:-1===i&&(r=-sa-ca);for(var c=0,f=n.length;c<f;++c)if(l=(s=n[c]).length)for(var s,l,h=s[l-1],d=h[0],p=h[1]/2+la,v=Ma(p),g=ba(p),y=0;y<l;++y,d=_,v=x,g=w,h=b){var b=s[y],_=b[0],m=b[1]/2+la,x=Ma(m),w=ba(m),M=_-d,N=M>=0?1:-1,A=N*M,T=A>fa,S=v*x;if(yf.add(ya(S*N*Ma(A),g*w+S*ba(A))),o+=T?M+N*ha:M,T^d>=e^_>=e){var k=Ka(Qa(h),Qa(b));ec(k);var E=Ka(u,k);ec(E);var C=(T^M>=0?-1:1)*ka(E[2]);(r>C||r===C&&(k[0]||k[1]))&&(a+=T^M>=0?1:-1)}}return(o<-ca||o<ca&&yf<-ca)^1&a},_f=function(n,t,e,r){return function(i){var u,o,a,c=t(i),f=hf(),s=t(f),l=!1,h={point:d,lineStart:v,lineEnd:g,polygonStart:function(){h.point=y,h.lineStart=b,h.lineEnd=_,o=[],u=[]},polygonEnd:function(){h.point=d,h.lineStart=v,h.lineEnd=g,o=q(o);var n=bf(u,r);o.length?(l||(i.polygonStart(),l=!0),vf(o,xf,n,e,i)):n&&(l||(i.polygonStart(),l=!0),i.lineStart(),e(null,null,1,i),i.lineEnd()),l&&(i.polygonEnd(),l=!1),o=u=null},sphere:function(){i.polygonStart(),i.lineStart(),e(null,null,1,i),i.lineEnd(),i.polygonEnd()}};function d(t,e){n(t,e)&&i.point(t,e)}function p(n,t){c.point(n,t)}function v(){h.point=p,c.lineStart()}function g(){h.point=d,c.lineEnd()}function y(n,t){a.push([n,t]),s.point(n,t)}function b(){s.lineStart(),a=[]}function _(){y(a[0][0],a[0][1]),s.lineEnd();var n,t,e,r,c=s.clean(),h=f.result(),d=h.length;if(a.pop(),u.push(a),a=null,d)if(1&c){if((t=(e=h[0]).length-1)>0){for(l||(i.polygonStart(),l=!0),i.lineStart(),n=0;n<t;++n)i.point((r=e[n])[0],r[1]);i.lineEnd()}}else d>1&&2&c&&h.push(h.pop().concat(h.shift())),o.push(h.filter(mf))}return h}};function mf(n){return n.length>1}function xf(n,t){return((n=n.x)[0]<0?n[1]-sa-ca:sa-n[1])-((t=t.x)[0]<0?t[1]-sa-ca:sa-t[1])}var wf=_f(function(){return!0},function(n){var t,e=NaN,r=NaN,i=NaN;return{lineStart:function(){n.lineStart(),t=1},point:function(u,o){var a=u>0?fa:-fa,c=va(u-e);va(c-fa)<ca?(n.point(e,r=(r+o)/2>0?sa:-sa),n.point(i,r),n.lineEnd(),n.lineStart(),n.point(a,r),n.point(u,r),t=0):i!==a&&c>=fa&&(va(e-i)<ca&&(e-=i*ca),va(u-a)<ca&&(u-=a*ca),r=function(n,t,e,r){var i,u,o=Ma(n-e);return va(o)>ca?ga((Ma(t)*(u=ba(r))*Ma(e)-Ma(r)*(i=ba(t))*Ma(n))/(i*u*o)):(t+r)/2}(e,r,u,o),n.point(i,r),n.lineEnd(),n.lineStart(),n.point(a,r),t=0),n.point(e=u,r=o),i=a},lineEnd:function(){n.lineEnd(),e=r=NaN},clean:function(){return 2-t}}},function(n,t,e,r){var i;if(null==n)i=e*sa,r.point(-fa,i),r.point(0,i),r.point(fa,i),r.point(fa,0),r.point(fa,-i),r.point(0,-i),r.point(-fa,-i),r.point(-fa,0),r.point(-fa,i);else if(va(n[0]-t[0])>ca){var u=n[0]<t[0]?fa:-fa;i=e*u/2,r.point(-u,i),r.point(0,i),r.point(u,i)}else r.point(t[0],t[1])},[-fa,-sa]);var Mf=function(n){var t=ba(n),e=6*pa,r=t>0,i=va(t)>ca;function u(n,e){return ba(n)*ba(e)>t}function o(n,e,r){var i=[1,0,0],u=Ka(Qa(n),Qa(e)),o=Ja(u,u),a=u[0],c=o-a*a;if(!c)return!r&&n;var f=t*o/c,s=-t*a/c,l=Ka(i,u),h=tc(i,f);nc(h,tc(u,s));var d=l,p=Ja(h,d),v=Ja(d,d),g=p*p-v*(Ja(h,h)-1);if(!(g<0)){var y=Aa(g),b=tc(d,(-p-y)/v);if(nc(b,h),b=Za(b),!r)return b;var _,m=n[0],x=e[0],w=n[1],M=e[1];x<m&&(_=m,m=x,x=_);var N=x-m,A=va(N-fa)<ca;if(!A&&M<w&&(_=w,w=M,M=_),A||N<ca?A?w+M>0^b[1]<(va(b[0]-m)<ca?w:M):w<=b[1]&&b[1]<=M:N>fa^(m<=b[0]&&b[0]<=x)){var T=tc(d,(-p+y)/v);return nc(T,h),[b,Za(T)]}}}function a(t,e){var i=r?n:fa-n,u=0;return t<-i?u|=1:t>i&&(u|=2),e<-i?u|=4:e>i&&(u|=8),u}return _f(u,function(n){var t,e,c,f,s;return{lineStart:function(){f=c=!1,s=1},point:function(l,h){var d,p=[l,h],v=u(l,h),g=r?v?0:a(l,h):v?a(l+(l<0?fa:-fa),h):0;if(!t&&(f=c=v)&&n.lineStart(),v!==c&&(!(d=o(t,p))||df(t,d)||df(p,d))&&(p[0]+=ca,p[1]+=ca,v=u(p[0],p[1])),v!==c)s=0,v?(n.lineStart(),d=o(p,t),n.point(d[0],d[1])):(d=o(t,p),n.point(d[0],d[1]),n.lineEnd()),t=d;else if(i&&t&&r^v){var y;g&e||!(y=o(p,t,!0))||(s=0,r?(n.lineStart(),n.point(y[0][0],y[0][1]),n.point(y[1][0],y[1][1]),n.lineEnd()):(n.point(y[1][0],y[1][1]),n.lineEnd(),n.lineStart(),n.point(y[0][0],y[0][1])))}!v||t&&df(t,p)||n.point(p[0],p[1]),t=p,c=v,e=g},lineEnd:function(){c&&n.lineEnd(),t=null},clean:function(){return s|(f&&c)<<1}}},function(t,r,i,u){ff(u,n,e,i,t,r)},r?[0,-n]:[-fa,n-fa])},Nf=function(n,t,e,r,i,u){var o,a=n[0],c=n[1],f=0,s=1,l=t[0]-a,h=t[1]-c;if(o=e-a,l||!(o>0)){if(o/=l,l<0){if(o<f)return;o<s&&(s=o)}else if(l>0){if(o>s)return;o>f&&(f=o)}if(o=i-a,l||!(o<0)){if(o/=l,l<0){if(o>s)return;o>f&&(f=o)}else if(l>0){if(o<f)return;o<s&&(s=o)}if(o=r-c,h||!(o>0)){if(o/=h,h<0){if(o<f)return;o<s&&(s=o)}else if(h>0){if(o>s)return;o>f&&(f=o)}if(o=u-c,h||!(o<0)){if(o/=h,h<0){if(o>s)return;o>f&&(f=o)}else if(h>0){if(o<f)return;o<s&&(s=o)}return f>0&&(n[0]=a+f*l,n[1]=c+f*h),s<1&&(t[0]=a+s*l,t[1]=c+s*h),!0}}}}},Af=1e9,Tf=-Af;function Sf(n,t,e,r){function i(i,u){return n<=i&&i<=e&&t<=u&&u<=r}function u(i,u,a,f){var s=0,l=0;if(null==i||(s=o(i,a))!==(l=o(u,a))||c(i,u)<0^a>0)do{f.point(0===s||3===s?n:e,s>1?r:t)}while((s=(s+a+4)%4)!==l);else f.point(u[0],u[1])}function o(r,i){return va(r[0]-n)<ca?i>0?0:3:va(r[0]-e)<ca?i>0?2:1:va(r[1]-t)<ca?i>0?1:0:i>0?3:2}function a(n,t){return c(n.x,t.x)}function c(n,t){var e=o(n,1),r=o(t,1);return e!==r?e-r:0===e?t[1]-n[1]:1===e?n[0]-t[0]:2===e?n[1]-t[1]:t[0]-n[0]}return function(o){var c,f,s,l,h,d,p,v,g,y,b,_=o,m=hf(),x={point:w,lineStart:function(){x.point=M,f&&f.push(s=[]);y=!0,g=!1,p=v=NaN},lineEnd:function(){c&&(M(l,h),d&&g&&m.rejoin(),c.push(m.result()));x.point=w,g&&_.lineEnd()},polygonStart:function(){_=m,c=[],f=[],b=!0},polygonEnd:function(){var t=function(){for(var t=0,e=0,i=f.length;e<i;++e)for(var u,o,a=f[e],c=1,s=a.length,l=a[0],h=l[0],d=l[1];c<s;++c)u=h,o=d,l=a[c],h=l[0],d=l[1],o<=r?d>r&&(h-u)*(r-o)>(d-o)*(n-u)&&++t:d<=r&&(h-u)*(r-o)<(d-o)*(n-u)&&--t;return t}(),e=b&&t,i=(c=q(c)).length;(e||i)&&(o.polygonStart(),e&&(o.lineStart(),u(null,null,1,o),o.lineEnd()),i&&vf(c,a,t,u,o),o.polygonEnd());_=o,c=f=s=null}};function w(n,t){i(n,t)&&_.point(n,t)}function M(u,o){var a=i(u,o);if(f&&s.push([u,o]),y)l=u,h=o,d=a,y=!1,a&&(_.lineStart(),_.point(u,o));else if(a&&g)_.point(u,o);else{var c=[p=Math.max(Tf,Math.min(Af,p)),v=Math.max(Tf,Math.min(Af,v))],m=[u=Math.max(Tf,Math.min(Af,u)),o=Math.max(Tf,Math.min(Af,o))];Nf(c,m,n,t,e,r)?(g||(_.lineStart(),_.point(c[0],c[1])),_.point(m[0],m[1]),a||_.lineEnd(),b=!1):a&&(_.lineStart(),_.point(u,o),b=!1)}p=u,v=o,g=a}return x}}var kf,Ef,Cf,Pf=function(){var n,t,e,r=0,i=0,u=960,o=500;return e={stream:function(e){return n&&t===e?n:n=Sf(r,i,u,o)(t=e)},extent:function(a){return arguments.length?(r=+a[0][0],i=+a[0][1],u=+a[1][0],o=+a[1][1],n=t=null,e):[[r,i],[u,o]]}}},zf=ia(),Of={sphere:Ca,point:Ca,lineStart:function(){Of.point=Df,Of.lineEnd=Rf},lineEnd:Ca,polygonStart:Ca,polygonEnd:Ca};function Rf(){Of.point=Of.lineEnd=Ca}function Df(n,t){kf=n*=pa,Ef=Ma(t*=pa),Cf=ba(t),Of.point=Lf}function Lf(n,t){n*=pa;var e=Ma(t*=pa),r=ba(t),i=va(n-kf),u=ba(i),o=r*Ma(i),a=Cf*e-Ef*r*u,c=Ef*e+Cf*r*u;zf.add(ya(Aa(o*o+a*a),c)),kf=n,Ef=e,Cf=r}var qf=function(n){return zf.reset(),Ya(n,Of),+zf},Uf=[null,null],jf={type:\"LineString\",coordinates:Uf},Bf=function(n,t){return Uf[0]=n,Uf[1]=t,qf(jf)},Yf={Feature:function(n,t){return If(n.geometry,t)},FeatureCollection:function(n,t){for(var e=n.features,r=-1,i=e.length;++r<i;)if(If(e[r].geometry,t))return!0;return!1}},Ff={Sphere:function(){return!0},Point:function(n,t){return Hf(n.coordinates,t)},MultiPoint:function(n,t){for(var e=n.coordinates,r=-1,i=e.length;++r<i;)if(Hf(e[r],t))return!0;return!1},LineString:function(n,t){return Xf(n.coordinates,t)},MultiLineString:function(n,t){for(var e=n.coordinates,r=-1,i=e.length;++r<i;)if(Xf(e[r],t))return!0;return!1},Polygon:function(n,t){return Gf(n.coordinates,t)},MultiPolygon:function(n,t){for(var e=n.coordinates,r=-1,i=e.length;++r<i;)if(Gf(e[r],t))return!0;return!1},GeometryCollection:function(n,t){for(var e=n.geometries,r=-1,i=e.length;++r<i;)if(If(e[r],t))return!0;return!1}};function If(n,t){return!(!n||!Ff.hasOwnProperty(n.type))&&Ff[n.type](n,t)}function Hf(n,t){return 0===Bf(n,t)}function Xf(n,t){var e=Bf(n[0],n[1]);return Bf(n[0],t)+Bf(t,n[1])<=e+ca}function Gf(n,t){return!!bf(n.map(Vf),$f(t))}function Vf(n){return(n=n.map($f)).pop(),n}function $f(n){return[n[0]*pa,n[1]*pa]}var Wf=function(n,t){return(n&&Yf.hasOwnProperty(n.type)?Yf[n.type]:If)(n,t)};function Zf(n,t,e){var r=w(n,t-ca,e).concat(t);return function(n){return r.map(function(t){return[n,t]})}}function Qf(n,t,e){var r=w(n,t-ca,e).concat(t);return function(n){return r.map(function(t){return[t,n]})}}function Jf(){var n,t,e,r,i,u,o,a,c,f,s,l,h=10,d=h,p=90,v=360,g=2.5;function y(){return{type:\"MultiLineString\",coordinates:b()}}function b(){return w(_a(r/p)*p,e,p).map(s).concat(w(_a(a/v)*v,o,v).map(l)).concat(w(_a(t/h)*h,n,h).filter(function(n){return va(n%p)>ca}).map(c)).concat(w(_a(u/d)*d,i,d).filter(function(n){return va(n%v)>ca}).map(f))}return y.lines=function(){return b().map(function(n){return{type:\"LineString\",coordinates:n}})},y.outline=function(){return{type:\"Polygon\",coordinates:[s(r).concat(l(o).slice(1),s(e).reverse().slice(1),l(a).reverse().slice(1))]}},y.extent=function(n){return arguments.length?y.extentMajor(n).extentMinor(n):y.extentMinor()},y.extentMajor=function(n){return arguments.length?(r=+n[0][0],e=+n[1][0],a=+n[0][1],o=+n[1][1],r>e&&(n=r,r=e,e=n),a>o&&(n=a,a=o,o=n),y.precision(g)):[[r,a],[e,o]]},y.extentMinor=function(e){return arguments.length?(t=+e[0][0],n=+e[1][0],u=+e[0][1],i=+e[1][1],t>n&&(e=t,t=n,n=e),u>i&&(e=u,u=i,i=e),y.precision(g)):[[t,u],[n,i]]},y.step=function(n){return arguments.length?y.stepMajor(n).stepMinor(n):y.stepMinor()},y.stepMajor=function(n){return arguments.length?(p=+n[0],v=+n[1],y):[p,v]},y.stepMinor=function(n){return arguments.length?(h=+n[0],d=+n[1],y):[h,d]},y.precision=function(h){return arguments.length?(g=+h,c=Zf(u,i,90),f=Qf(t,n,g),s=Zf(a,o,90),l=Qf(r,e,g),y):g},y.extentMajor([[-180,-90+ca],[180,90-ca]]).extentMinor([[-180,-80-ca],[180,80+ca]])}function Kf(){return Jf()()}var ns,ts,es,rs,is=function(n,t){var e=n[0]*pa,r=n[1]*pa,i=t[0]*pa,u=t[1]*pa,o=ba(r),a=Ma(r),c=ba(u),f=Ma(u),s=o*ba(e),l=o*Ma(e),h=c*ba(i),d=c*Ma(i),p=2*ka(Aa(Ea(u-r)+o*c*Ea(i-e))),v=Ma(p),g=p?function(n){var t=Ma(n*=p)/v,e=Ma(p-n)/v,r=e*s+t*h,i=e*l+t*d,u=e*a+t*f;return[ya(i,r)*da,ya(u,Aa(r*r+i*i))*da]}:function(){return[e*da,r*da]};return g.distance=p,g},us=function(n){return n},os=ia(),as=ia(),cs={point:Ca,lineStart:Ca,lineEnd:Ca,polygonStart:function(){cs.lineStart=fs,cs.lineEnd=hs},polygonEnd:function(){cs.lineStart=cs.lineEnd=cs.point=Ca,os.add(va(as)),as.reset()},result:function(){var n=os/2;return os.reset(),n}};function fs(){cs.point=ss}function ss(n,t){cs.point=ls,ns=es=n,ts=rs=t}function ls(n,t){as.add(rs*n-es*t),es=n,rs=t}function hs(){ls(ns,ts)}var ds=cs,ps=1/0,vs=ps,gs=-ps,ys=gs;var bs,_s,ms,xs,ws={point:function(n,t){n<ps&&(ps=n);n>gs&&(gs=n);t<vs&&(vs=t);t>ys&&(ys=t)},lineStart:Ca,lineEnd:Ca,polygonStart:Ca,polygonEnd:Ca,result:function(){var n=[[ps,vs],[gs,ys]];return gs=ys=-(vs=ps=1/0),n}},Ms=0,Ns=0,As=0,Ts=0,Ss=0,ks=0,Es=0,Cs=0,Ps=0,zs={point:Os,lineStart:Rs,lineEnd:qs,polygonStart:function(){zs.lineStart=Us,zs.lineEnd=js},polygonEnd:function(){zs.point=Os,zs.lineStart=Rs,zs.lineEnd=qs},result:function(){var n=Ps?[Es/Ps,Cs/Ps]:ks?[Ts/ks,Ss/ks]:As?[Ms/As,Ns/As]:[NaN,NaN];return Ms=Ns=As=Ts=Ss=ks=Es=Cs=Ps=0,n}};function Os(n,t){Ms+=n,Ns+=t,++As}function Rs(){zs.point=Ds}function Ds(n,t){zs.point=Ls,Os(ms=n,xs=t)}function Ls(n,t){var e=n-ms,r=t-xs,i=Aa(e*e+r*r);Ts+=i*(ms+n)/2,Ss+=i*(xs+t)/2,ks+=i,Os(ms=n,xs=t)}function qs(){zs.point=Os}function Us(){zs.point=Bs}function js(){Ys(bs,_s)}function Bs(n,t){zs.point=Ys,Os(bs=ms=n,_s=xs=t)}function Ys(n,t){var e=n-ms,r=t-xs,i=Aa(e*e+r*r);Ts+=i*(ms+n)/2,Ss+=i*(xs+t)/2,ks+=i,Es+=(i=xs*n-ms*t)*(ms+n),Cs+=i*(xs+t),Ps+=3*i,Os(ms=n,xs=t)}var Fs=zs;function Is(n){this._context=n}Is.prototype={_radius:4.5,pointRadius:function(n){return this._radius=n,this},polygonStart:function(){this._line=0},polygonEnd:function(){this._line=NaN},lineStart:function(){this._point=0},lineEnd:function(){0===this._line&&this._context.closePath(),this._point=NaN},point:function(n,t){switch(this._point){case 0:this._context.moveTo(n,t),this._point=1;break;case 1:this._context.lineTo(n,t);break;default:this._context.moveTo(n+this._radius,t),this._context.arc(n,t,this._radius,0,ha)}},result:Ca};var Hs,Xs,Gs,Vs,$s,Ws=ia(),Zs={point:Ca,lineStart:function(){Zs.point=Qs},lineEnd:function(){Hs&&Js(Xs,Gs),Zs.point=Ca},polygonStart:function(){Hs=!0},polygonEnd:function(){Hs=null},result:function(){var n=+Ws;return Ws.reset(),n}};function Qs(n,t){Zs.point=Js,Xs=Vs=n,Gs=$s=t}function Js(n,t){Vs-=n,$s-=t,Ws.add(Aa(Vs*Vs+$s*$s)),Vs=n,$s=t}var Ks=Zs;function nl(){this._string=[]}function tl(n){return\"m0,\"+n+\"a\"+n+\",\"+n+\" 0 1,1 0,\"+-2*n+\"a\"+n+\",\"+n+\" 0 1,1 0,\"+2*n+\"z\"}nl.prototype={_radius:4.5,_circle:tl(4.5),pointRadius:function(n){return(n=+n)!==this._radius&&(this._radius=n,this._circle=null),this},polygonStart:function(){this._line=0},polygonEnd:function(){this._line=NaN},lineStart:function(){this._point=0},lineEnd:function(){0===this._line&&this._string.push(\"Z\"),this._point=NaN},point:function(n,t){switch(this._point){case 0:this._string.push(\"M\",n,\",\",t),this._point=1;break;case 1:this._string.push(\"L\",n,\",\",t);break;default:null==this._circle&&(this._circle=tl(this._radius)),this._string.push(\"M\",n,\",\",t,this._circle)}},result:function(){if(this._string.length){var n=this._string.join(\"\");return this._string=[],n}return null}};var el=function(n,t){var e,r,i=4.5;function u(n){return n&&(\"function\"==typeof i&&r.pointRadius(+i.apply(this,arguments)),Ya(n,e(r))),r.result()}return u.area=function(n){return Ya(n,e(ds)),ds.result()},u.measure=function(n){return Ya(n,e(Ks)),Ks.result()},u.bounds=function(n){return Ya(n,e(ws)),ws.result()},u.centroid=function(n){return Ya(n,e(Fs)),Fs.result()},u.projection=function(t){return arguments.length?(e=null==t?(n=null,us):(n=t).stream,u):n},u.context=function(n){return arguments.length?(r=null==n?(t=null,new nl):new Is(t=n),\"function\"!=typeof i&&r.pointRadius(i),u):t},u.pointRadius=function(n){return arguments.length?(i=\"function\"==typeof n?n:(r.pointRadius(+n),+n),u):i},u.projection(n).context(t)},rl=function(n){return{stream:il(n)}};function il(n){return function(t){var e=new ul;for(var r in n)e[r]=n[r];return e.stream=t,e}}function ul(){}function ol(n,t,e){var r=n.clipExtent&&n.clipExtent();return n.scale(150).translate([0,0]),null!=r&&n.clipExtent(null),Ya(e,n.stream(ws)),t(ws.result()),null!=r&&n.clipExtent(r),n}function al(n,t,e){return ol(n,function(e){var r=t[1][0]-t[0][0],i=t[1][1]-t[0][1],u=Math.min(r/(e[1][0]-e[0][0]),i/(e[1][1]-e[0][1])),o=+t[0][0]+(r-u*(e[1][0]+e[0][0]))/2,a=+t[0][1]+(i-u*(e[1][1]+e[0][1]))/2;n.scale(150*u).translate([o,a])},e)}function cl(n,t,e){return al(n,[[0,0],t],e)}function fl(n,t,e){return ol(n,function(e){var r=+t,i=r/(e[1][0]-e[0][0]),u=(r-i*(e[1][0]+e[0][0]))/2,o=-i*e[0][1];n.scale(150*i).translate([u,o])},e)}function sl(n,t,e){return ol(n,function(e){var r=+t,i=r/(e[1][1]-e[0][1]),u=-i*e[0][0],o=(r-i*(e[1][1]+e[0][1]))/2;n.scale(150*i).translate([u,o])},e)}ul.prototype={constructor:ul,point:function(n,t){this.stream.point(n,t)},sphere:function(){this.stream.sphere()},lineStart:function(){this.stream.lineStart()},lineEnd:function(){this.stream.lineEnd()},polygonStart:function(){this.stream.polygonStart()},polygonEnd:function(){this.stream.polygonEnd()}};var ll=16,hl=ba(30*pa),dl=function(n,t){return+t?function(n,t){function e(r,i,u,o,a,c,f,s,l,h,d,p,v,g){var y=f-r,b=s-i,_=y*y+b*b;if(_>4*t&&v--){var m=o+h,x=a+d,w=c+p,M=Aa(m*m+x*x+w*w),N=ka(w/=M),A=va(va(w)-1)<ca||va(u-l)<ca?(u+l)/2:ya(x,m),T=n(A,N),S=T[0],k=T[1],E=S-r,C=k-i,P=b*E-y*C;(P*P/_>t||va((y*E+b*C)/_-.5)>.3||o*h+a*d+c*p<hl)&&(e(r,i,u,o,a,c,S,k,A,m/=M,x/=M,w,v,g),g.point(S,k),e(S,k,A,m,x,w,f,s,l,h,d,p,v,g))}}return function(t){var r,i,u,o,a,c,f,s,l,h,d,p,v={point:g,lineStart:y,lineEnd:_,polygonStart:function(){t.polygonStart(),v.lineStart=m},polygonEnd:function(){t.polygonEnd(),v.lineStart=y}};function g(e,r){e=n(e,r),t.point(e[0],e[1])}function y(){s=NaN,v.point=b,t.lineStart()}function b(r,i){var u=Qa([r,i]),o=n(r,i);e(s,l,f,h,d,p,s=o[0],l=o[1],f=r,h=u[0],d=u[1],p=u[2],ll,t),t.point(s,l)}function _(){v.point=g,t.lineEnd()}function m(){y(),v.point=x,v.lineEnd=w}function x(n,t){b(r=n,t),i=s,u=l,o=h,a=d,c=p,v.point=b}function w(){e(s,l,f,h,d,p,i,u,r,o,a,c,ll,t),v.lineEnd=_,_()}return v}}(n,t):function(n){return il({point:function(t,e){t=n(t,e),this.stream.point(t[0],t[1])}})}(n)};var pl=il({point:function(n,t){this.stream.point(n*pa,t*pa)}});function vl(n,t,e,r){var i=ba(r),u=Ma(r),o=i*n,a=u*n,c=i/n,f=u/n,s=(u*e-i*t)/n,l=(u*t+i*e)/n;function h(n,r){return[o*n-a*r+t,e-a*n-o*r]}return h.invert=function(n,t){return[c*n-f*t+s,l-f*n-c*t]},h}function gl(n){return yl(function(){return n})()}function yl(n){var t,e,r,i,u,o,a,c,f,s,l=150,h=480,d=250,p=0,v=0,g=0,y=0,b=0,_=0,m=null,x=wf,w=null,M=us,N=.5;function A(n){return c(n[0]*pa,n[1]*pa)}function T(n){return(n=c.invert(n[0],n[1]))&&[n[0]*da,n[1]*da]}function S(){var n=vl(l,0,0,_).apply(null,t(p,v)),r=(_?vl:function(n,t,e){function r(r,i){return[t+n*r,e-n*i]}return r.invert=function(r,i){return[(r-t)/n,(e-i)/n]},r})(l,h-n[0],d-n[1],_);return e=rf(g,y,b),a=tf(t,r),c=tf(e,a),o=dl(a,N),k()}function k(){return f=s=null,A}return A.stream=function(n){return f&&s===n?f:f=pl(function(n){return il({point:function(t,e){var r=n(t,e);return this.stream.point(r[0],r[1])}})}(e)(x(o(M(s=n)))))},A.preclip=function(n){return arguments.length?(x=n,m=void 0,k()):x},A.postclip=function(n){return arguments.length?(M=n,w=r=i=u=null,k()):M},A.clipAngle=function(n){return arguments.length?(x=+n?Mf(m=n*pa):(m=null,wf),k()):m*da},A.clipExtent=function(n){return arguments.length?(M=null==n?(w=r=i=u=null,us):Sf(w=+n[0][0],r=+n[0][1],i=+n[1][0],u=+n[1][1]),k()):null==w?null:[[w,r],[i,u]]},A.scale=function(n){return arguments.length?(l=+n,S()):l},A.translate=function(n){return arguments.length?(h=+n[0],d=+n[1],S()):[h,d]},A.center=function(n){return arguments.length?(p=n[0]%360*pa,v=n[1]%360*pa,S()):[p*da,v*da]},A.rotate=function(n){return arguments.length?(g=n[0]%360*pa,y=n[1]%360*pa,b=n.length>2?n[2]%360*pa:0,S()):[g*da,y*da,b*da]},A.angle=function(n){return arguments.length?(_=n%360*pa,S()):_*da},A.precision=function(n){return arguments.length?(o=dl(a,N=n*n),k()):Aa(N)},A.fitExtent=function(n,t){return al(A,n,t)},A.fitSize=function(n,t){return cl(A,n,t)},A.fitWidth=function(n,t){return fl(A,n,t)},A.fitHeight=function(n,t){return sl(A,n,t)},function(){return t=n.apply(this,arguments),A.invert=t.invert&&T,S()}}function bl(n){var t=0,e=fa/3,r=yl(n),i=r(t,e);return i.parallels=function(n){return arguments.length?r(t=n[0]*pa,e=n[1]*pa):[t*da,e*da]},i}function _l(n,t){var e=Ma(n),r=(e+Ma(t))/2;if(va(r)<ca)return function(n){var t=ba(n);function e(n,e){return[n*t,Ma(e)/t]}return e.invert=function(n,e){return[n/t,ka(e*t)]},e}(n);var i=1+e*(2*r-e),u=Aa(i)/r;function o(n,t){var e=Aa(i-2*r*Ma(t))/r;return[e*Ma(n*=r),u-e*ba(n)]}return o.invert=function(n,t){var e=u-t;return[ya(n,va(e))/r*Na(e),ka((i-(n*n+e*e)*r*r)/(2*r))]},o}var ml=function(){return bl(_l).scale(155.424).center([0,33.6442])},xl=function(){return ml().parallels([29.5,45.5]).scale(1070).translate([480,250]).rotate([96,0]).center([-.6,38.7])};var wl=function(){var n,t,e,r,i,u,o=xl(),a=ml().rotate([154,0]).center([-2,58.5]).parallels([55,65]),c=ml().rotate([157,0]).center([-3,19.9]).parallels([8,18]),f={point:function(n,t){u=[n,t]}};function s(n){var t=n[0],o=n[1];return u=null,e.point(t,o),u||(r.point(t,o),u)||(i.point(t,o),u)}function l(){return n=t=null,s}return s.invert=function(n){var t=o.scale(),e=o.translate(),r=(n[0]-e[0])/t,i=(n[1]-e[1])/t;return(i>=.12&&i<.234&&r>=-.425&&r<-.214?a:i>=.166&&i<.234&&r>=-.214&&r<-.115?c:o).invert(n)},s.stream=function(e){return n&&t===e?n:(r=[o.stream(t=e),a.stream(e),c.stream(e)],i=r.length,n={point:function(n,t){for(var e=-1;++e<i;)r[e].point(n,t)},sphere:function(){for(var n=-1;++n<i;)r[n].sphere()},lineStart:function(){for(var n=-1;++n<i;)r[n].lineStart()},lineEnd:function(){for(var n=-1;++n<i;)r[n].lineEnd()},polygonStart:function(){for(var n=-1;++n<i;)r[n].polygonStart()},polygonEnd:function(){for(var n=-1;++n<i;)r[n].polygonEnd()}});var r,i},s.precision=function(n){return arguments.length?(o.precision(n),a.precision(n),c.precision(n),l()):o.precision()},s.scale=function(n){return arguments.length?(o.scale(n),a.scale(.35*n),c.scale(n),s.translate(o.translate())):o.scale()},s.translate=function(n){if(!arguments.length)return o.translate();var t=o.scale(),u=+n[0],s=+n[1];return e=o.translate(n).clipExtent([[u-.455*t,s-.238*t],[u+.455*t,s+.238*t]]).stream(f),r=a.translate([u-.307*t,s+.201*t]).clipExtent([[u-.425*t+ca,s+.12*t+ca],[u-.214*t-ca,s+.234*t-ca]]).stream(f),i=c.translate([u-.205*t,s+.212*t]).clipExtent([[u-.214*t+ca,s+.166*t+ca],[u-.115*t-ca,s+.234*t-ca]]).stream(f),l()},s.fitExtent=function(n,t){return al(s,n,t)},s.fitSize=function(n,t){return cl(s,n,t)},s.fitWidth=function(n,t){return fl(s,n,t)},s.fitHeight=function(n,t){return sl(s,n,t)},s.scale(1070)};function Ml(n){return function(t,e){var r=ba(t),i=ba(e),u=n(r*i);return[u*i*Ma(t),u*Ma(e)]}}function Nl(n){return function(t,e){var r=Aa(t*t+e*e),i=n(r),u=Ma(i),o=ba(i);return[ya(t*u,r*o),ka(r&&e*u/r)]}}var Al=Ml(function(n){return Aa(2/(1+n))});Al.invert=Nl(function(n){return 2*ka(n/2)});var Tl=function(){return gl(Al).scale(124.75).clipAngle(179.999)},Sl=Ml(function(n){return(n=Sa(n))&&n/Ma(n)});Sl.invert=Nl(function(n){return n});var kl=function(){return gl(Sl).scale(79.4188).clipAngle(179.999)};function El(n,t){return[n,xa(Ta((sa+t)/2))]}El.invert=function(n,t){return[n,2*ga(ma(t))-sa]};var Cl=function(){return Pl(El).scale(961/ha)};function Pl(n){var t,e,r,i=gl(n),u=i.center,o=i.scale,a=i.translate,c=i.clipExtent,f=null;function s(){var u=fa*o(),a=i(cf(i.rotate()).invert([0,0]));return c(null==f?[[a[0]-u,a[1]-u],[a[0]+u,a[1]+u]]:n===El?[[Math.max(a[0]-u,f),t],[Math.min(a[0]+u,e),r]]:[[f,Math.max(a[1]-u,t)],[e,Math.min(a[1]+u,r)]])}return i.scale=function(n){return arguments.length?(o(n),s()):o()},i.translate=function(n){return arguments.length?(a(n),s()):a()},i.center=function(n){return arguments.length?(u(n),s()):u()},i.clipExtent=function(n){return arguments.length?(null==n?f=t=e=r=null:(f=+n[0][0],t=+n[0][1],e=+n[1][0],r=+n[1][1]),s()):null==f?null:[[f,t],[e,r]]},s()}function zl(n){return Ta((sa+n)/2)}function Ol(n,t){var e=ba(n),r=n===t?Ma(n):xa(e/ba(t))/xa(zl(t)/zl(n)),i=e*wa(zl(n),r)/r;if(!r)return El;function u(n,t){i>0?t<-sa+ca&&(t=-sa+ca):t>sa-ca&&(t=sa-ca);var e=i/wa(zl(t),r);return[e*Ma(r*n),i-e*ba(r*n)]}return u.invert=function(n,t){var e=i-t,u=Na(r)*Aa(n*n+e*e);return[ya(n,va(e))/r*Na(e),2*ga(wa(i/u,1/r))-sa]},u}var Rl=function(){return bl(Ol).scale(109.5).parallels([30,30])};function Dl(n,t){return[n,t]}Dl.invert=Dl;var Ll=function(){return gl(Dl).scale(152.63)};function ql(n,t){var e=ba(n),r=n===t?Ma(n):(e-ba(t))/(t-n),i=e/r+n;if(va(r)<ca)return Dl;function u(n,t){var e=i-t,u=r*n;return[e*Ma(u),i-e*ba(u)]}return u.invert=function(n,t){var e=i-t;return[ya(n,va(e))/r*Na(e),i-Na(r)*Aa(n*n+e*e)]},u}var Ul=function(){return bl(ql).scale(131.154).center([0,13.9389])},jl=1.340264,Bl=-.081106,Yl=893e-6,Fl=.003796,Il=Aa(3)/2;function Hl(n,t){var e=ka(Il*Ma(t)),r=e*e,i=r*r*r;return[n*ba(e)/(Il*(jl+3*Bl*r+i*(7*Yl+9*Fl*r))),e*(jl+Bl*r+i*(Yl+Fl*r))]}Hl.invert=function(n,t){for(var e,r=t,i=r*r,u=i*i*i,o=0;o<12&&(u=(i=(r-=e=(r*(jl+Bl*i+u*(Yl+Fl*i))-t)/(jl+3*Bl*i+u*(7*Yl+9*Fl*i)))*r)*i*i,!(va(e)<1e-12));++o);return[Il*n*(jl+3*Bl*i+u*(7*Yl+9*Fl*i))/ba(r),ka(Ma(r)/Il)]};var Xl=function(){return gl(Hl).scale(177.158)};function Gl(n,t){var e=ba(t),r=ba(n)*e;return[e*Ma(n)/r,Ma(t)/r]}Gl.invert=Nl(ga);var Vl=function(){return gl(Gl).scale(144.049).clipAngle(60)};function $l(n,t,e,r){return 1===n&&1===t&&0===e&&0===r?us:il({point:function(i,u){this.stream.point(i*n+e,u*t+r)}})}var Wl=function(){var n,t,e,r,i,u,o=1,a=0,c=0,f=1,s=1,l=us,h=null,d=us;function p(){return r=i=null,u}return u={stream:function(n){return r&&i===n?r:r=l(d(i=n))},postclip:function(r){return arguments.length?(d=r,h=n=t=e=null,p()):d},clipExtent:function(r){return arguments.length?(d=null==r?(h=n=t=e=null,us):Sf(h=+r[0][0],n=+r[0][1],t=+r[1][0],e=+r[1][1]),p()):null==h?null:[[h,n],[t,e]]},scale:function(n){return arguments.length?(l=$l((o=+n)*f,o*s,a,c),p()):o},translate:function(n){return arguments.length?(l=$l(o*f,o*s,a=+n[0],c=+n[1]),p()):[a,c]},reflectX:function(n){return arguments.length?(l=$l(o*(f=n?-1:1),o*s,a,c),p()):f<0},reflectY:function(n){return arguments.length?(l=$l(o*f,o*(s=n?-1:1),a,c),p()):s<0},fitExtent:function(n,t){return al(u,n,t)},fitSize:function(n,t){return cl(u,n,t)},fitWidth:function(n,t){return fl(u,n,t)},fitHeight:function(n,t){return sl(u,n,t)}}};function Zl(n,t){var e=t*t,r=e*e;return[n*(.8707-.131979*e+r*(r*(.003971*e-.001529*r)-.013791)),t*(1.007226+e*(.015085+r*(.028874*e-.044475-.005916*r)))]}Zl.invert=function(n,t){var e,r=t,i=25;do{var u=r*r,o=u*u;r-=e=(r*(1.007226+u*(.015085+o*(.028874*u-.044475-.005916*o)))-t)/(1.007226+u*(.045255+o*(.259866*u-.311325-.005916*11*o)))}while(va(e)>ca&&--i>0);return[n/(.8707+(u=r*r)*(u*(u*u*u*(.003971-.001529*u)-.013791)-.131979)),r]};var Ql=function(){return gl(Zl).scale(175.295)};function Jl(n,t){return[ba(t)*Ma(n),Ma(t)]}Jl.invert=Nl(ka);var Kl=function(){return gl(Jl).scale(249.5).clipAngle(90+ca)};function nh(n,t){var e=ba(t),r=1+ba(n)*e;return[e*Ma(n)/r,Ma(t)/r]}nh.invert=Nl(function(n){return 2*ga(n)});var th=function(){return gl(nh).scale(250).clipAngle(142)};function eh(n,t){return[xa(Ta((sa+t)/2)),-n]}eh.invert=function(n,t){return[-t,2*ga(ma(n))-sa]};var rh=function(){var n=Pl(eh),t=n.center,e=n.rotate;return n.center=function(n){return arguments.length?t([-n[1],n[0]]):[(n=t())[1],-n[0]]},n.rotate=function(n){return arguments.length?e([n[0],n[1],n.length>2?n[2]+90:90]):[(n=e())[0],n[1],n[2]-90]},e([0,0,90]).scale(159.155)};function ih(n,t){return n.parent===t.parent?1:2}function uh(n,t){return n+t.x}function oh(n,t){return Math.max(n,t.y)}var ah=function(){var n=ih,t=1,e=1,r=!1;function i(i){var u,o=0;i.eachAfter(function(t){var e=t.children;e?(t.x=function(n){return n.reduce(uh,0)/n.length}(e),t.y=function(n){return 1+n.reduce(oh,0)}(e)):(t.x=u?o+=n(t,u):0,t.y=0,u=t)});var a=function(n){for(var t;t=n.children;)n=t[0];return n}(i),c=function(n){for(var t;t=n.children;)n=t[t.length-1];return n}(i),f=a.x-n(a,c)/2,s=c.x+n(c,a)/2;return i.eachAfter(r?function(n){n.x=(n.x-i.x)*t,n.y=(i.y-n.y)*e}:function(n){n.x=(n.x-f)/(s-f)*t,n.y=(1-(i.y?n.y/i.y:1))*e})}return i.separation=function(t){return arguments.length?(n=t,i):n},i.size=function(n){return arguments.length?(r=!1,t=+n[0],e=+n[1],i):r?null:[t,e]},i.nodeSize=function(n){return arguments.length?(r=!0,t=+n[0],e=+n[1],i):r?[t,e]:null},i};function ch(n){var t=0,e=n.children,r=e&&e.length;if(r)for(;--r>=0;)t+=e[r].value;else t=1;n.value=t}function fh(n,t){var e,r,i,u,o,a=new dh(n),c=+n.value&&(a.value=n.value),f=[a];for(null==t&&(t=sh);e=f.pop();)if(c&&(e.value=+e.data.value),(i=t(e.data))&&(o=i.length))for(e.children=new Array(o),u=o-1;u>=0;--u)f.push(r=e.children[u]=new dh(i[u])),r.parent=e,r.depth=e.depth+1;return a.eachBefore(hh)}function sh(n){return n.children}function lh(n){n.data=n.data.data}function hh(n){var t=0;do{n.height=t}while((n=n.parent)&&n.height<++t)}function dh(n){this.data=n,this.depth=this.height=0,this.parent=null}dh.prototype=fh.prototype={constructor:dh,count:function(){return this.eachAfter(ch)},each:function(n){var t,e,r,i,u=this,o=[u];do{for(t=o.reverse(),o=[];u=t.pop();)if(n(u),e=u.children)for(r=0,i=e.length;r<i;++r)o.push(e[r])}while(o.length);return this},eachAfter:function(n){for(var t,e,r,i=this,u=[i],o=[];i=u.pop();)if(o.push(i),t=i.children)for(e=0,r=t.length;e<r;++e)u.push(t[e]);for(;i=o.pop();)n(i);return this},eachBefore:function(n){for(var t,e,r=this,i=[r];r=i.pop();)if(n(r),t=r.children)for(e=t.length-1;e>=0;--e)i.push(t[e]);return this},sum:function(n){return this.eachAfter(function(t){for(var e=+n(t.data)||0,r=t.children,i=r&&r.length;--i>=0;)e+=r[i].value;t.value=e})},sort:function(n){return this.eachBefore(function(t){t.children&&t.children.sort(n)})},path:function(n){for(var t=this,e=function(n,t){if(n===t)return n;var e=n.ancestors(),r=t.ancestors(),i=null;for(n=e.pop(),t=r.pop();n===t;)i=n,n=e.pop(),t=r.pop();return i}(t,n),r=[t];t!==e;)t=t.parent,r.push(t);for(var i=r.length;n!==e;)r.splice(i,0,n),n=n.parent;return r},ancestors:function(){for(var n=this,t=[n];n=n.parent;)t.push(n);return t},descendants:function(){var n=[];return this.each(function(t){n.push(t)}),n},leaves:function(){var n=[];return this.eachBefore(function(t){t.children||n.push(t)}),n},links:function(){var n=this,t=[];return n.each(function(e){e!==n&&t.push({source:e.parent,target:e})}),t},copy:function(){return fh(this).eachBefore(lh)}};var ph=Array.prototype.slice;var vh=function(n){for(var t,e,r=0,i=(n=function(n){for(var t,e,r=n.length;r;)e=Math.random()*r--|0,t=n[r],n[r]=n[e],n[e]=t;return n}(ph.call(n))).length,u=[];r<i;)t=n[r],e&&bh(e,t)?++r:(e=mh(u=gh(u,t)),r=0);return e};function gh(n,t){var e,r;if(_h(t,n))return[t];for(e=0;e<n.length;++e)if(yh(t,n[e])&&_h(xh(n[e],t),n))return[n[e],t];for(e=0;e<n.length-1;++e)for(r=e+1;r<n.length;++r)if(yh(xh(n[e],n[r]),t)&&yh(xh(n[e],t),n[r])&&yh(xh(n[r],t),n[e])&&_h(wh(n[e],n[r],t),n))return[n[e],n[r],t];throw new Error}function yh(n,t){var e=n.r-t.r,r=t.x-n.x,i=t.y-n.y;return e<0||e*e<r*r+i*i}function bh(n,t){var e=n.r-t.r+1e-6,r=t.x-n.x,i=t.y-n.y;return e>0&&e*e>r*r+i*i}function _h(n,t){for(var e=0;e<t.length;++e)if(!bh(n,t[e]))return!1;return!0}function mh(n){switch(n.length){case 1:return{x:(t=n[0]).x,y:t.y,r:t.r};case 2:return xh(n[0],n[1]);case 3:return wh(n[0],n[1],n[2])}var t}function xh(n,t){var e=n.x,r=n.y,i=n.r,u=t.x,o=t.y,a=t.r,c=u-e,f=o-r,s=a-i,l=Math.sqrt(c*c+f*f);return{x:(e+u+c/l*s)/2,y:(r+o+f/l*s)/2,r:(l+i+a)/2}}function wh(n,t,e){var r=n.x,i=n.y,u=n.r,o=t.x,a=t.y,c=t.r,f=e.x,s=e.y,l=e.r,h=r-o,d=r-f,p=i-a,v=i-s,g=c-u,y=l-u,b=r*r+i*i-u*u,_=b-o*o-a*a+c*c,m=b-f*f-s*s+l*l,x=d*p-h*v,w=(p*m-v*_)/(2*x)-r,M=(v*g-p*y)/x,N=(d*_-h*m)/(2*x)-i,A=(h*y-d*g)/x,T=M*M+A*A-1,S=2*(u+w*M+N*A),k=w*w+N*N-u*u,E=-(T?(S+Math.sqrt(S*S-4*T*k))/(2*T):k/S);return{x:r+w+M*E,y:i+N+A*E,r:E}}function Mh(n,t,e){var r,i,u,o,a=n.x-t.x,c=n.y-t.y,f=a*a+c*c;f?(i=t.r+e.r,i*=i,o=n.r+e.r,i>(o*=o)?(r=(f+o-i)/(2*f),u=Math.sqrt(Math.max(0,o/f-r*r)),e.x=n.x-r*a-u*c,e.y=n.y-r*c+u*a):(r=(f+i-o)/(2*f),u=Math.sqrt(Math.max(0,i/f-r*r)),e.x=t.x+r*a-u*c,e.y=t.y+r*c+u*a)):(e.x=t.x+e.r,e.y=t.y)}function Nh(n,t){var e=n.r+t.r-1e-6,r=t.x-n.x,i=t.y-n.y;return e>0&&e*e>r*r+i*i}function Ah(n){var t=n._,e=n.next._,r=t.r+e.r,i=(t.x*e.r+e.x*t.r)/r,u=(t.y*e.r+e.y*t.r)/r;return i*i+u*u}function Th(n){this._=n,this.next=null,this.previous=null}function Sh(n){if(!(i=n.length))return 0;var t,e,r,i,u,o,a,c,f,s,l;if((t=n[0]).x=0,t.y=0,!(i>1))return t.r;if(e=n[1],t.x=-e.r,e.x=t.r,e.y=0,!(i>2))return t.r+e.r;Mh(e,t,r=n[2]),t=new Th(t),e=new Th(e),r=new Th(r),t.next=r.previous=e,e.next=t.previous=r,r.next=e.previous=t;n:for(a=3;a<i;++a){Mh(t._,e._,r=n[a]),r=new Th(r),c=e.next,f=t.previous,s=e._.r,l=t._.r;do{if(s<=l){if(Nh(c._,r._)){e=c,t.next=e,e.previous=t,--a;continue n}s+=c._.r,c=c.next}else{if(Nh(f._,r._)){(t=f).next=e,e.previous=t,--a;continue n}l+=f._.r,f=f.previous}}while(c!==f.next);for(r.previous=t,r.next=e,t.next=e.previous=e=r,u=Ah(t);(r=r.next)!==e;)(o=Ah(r))<u&&(t=r,u=o);e=t.next}for(t=[e._],r=e;(r=r.next)!==e;)t.push(r._);for(r=vh(t),a=0;a<i;++a)(t=n[a]).x-=r.x,t.y-=r.y;return r.r}var kh=function(n){return Sh(n),n};function Eh(n){if(\"function\"!=typeof n)throw new Error;return n}function Ch(){return 0}var Ph=function(n){return function(){return n}};function zh(n){return Math.sqrt(n.value)}var Oh=function(){var n=null,t=1,e=1,r=Ch;function i(i){return i.x=t/2,i.y=e/2,n?i.eachBefore(Rh(n)).eachAfter(Dh(r,.5)).eachBefore(Lh(1)):i.eachBefore(Rh(zh)).eachAfter(Dh(Ch,1)).eachAfter(Dh(r,i.r/Math.min(t,e))).eachBefore(Lh(Math.min(t,e)/(2*i.r))),i}return i.radius=function(t){return arguments.length?(n=null==(e=t)?null:Eh(e),i):n;var e},i.size=function(n){return arguments.length?(t=+n[0],e=+n[1],i):[t,e]},i.padding=function(n){return arguments.length?(r=\"function\"==typeof n?n:Ph(+n),i):r},i};function Rh(n){return function(t){t.children||(t.r=Math.max(0,+n(t)||0))}}function Dh(n,t){return function(e){if(r=e.children){var r,i,u,o=r.length,a=n(e)*t||0;if(a)for(i=0;i<o;++i)r[i].r+=a;if(u=Sh(r),a)for(i=0;i<o;++i)r[i].r-=a;e.r=u+a}}}function Lh(n){return function(t){var e=t.parent;t.r*=n,e&&(t.x=e.x+n*t.x,t.y=e.y+n*t.y)}}var qh=function(n){n.x0=Math.round(n.x0),n.y0=Math.round(n.y0),n.x1=Math.round(n.x1),n.y1=Math.round(n.y1)},Uh=function(n,t,e,r,i){for(var u,o=n.children,a=-1,c=o.length,f=n.value&&(r-t)/n.value;++a<c;)(u=o[a]).y0=e,u.y1=i,u.x0=t,u.x1=t+=u.value*f},jh=function(){var n=1,t=1,e=0,r=!1;function i(i){var u=i.height+1;return i.x0=i.y0=e,i.x1=n,i.y1=t/u,i.eachBefore(function(n,t){return function(r){r.children&&Uh(r,r.x0,n*(r.depth+1)/t,r.x1,n*(r.depth+2)/t);var i=r.x0,u=r.y0,o=r.x1-e,a=r.y1-e;o<i&&(i=o=(i+o)/2),a<u&&(u=a=(u+a)/2),r.x0=i,r.y0=u,r.x1=o,r.y1=a}}(t,u)),r&&i.eachBefore(qh),i}return i.round=function(n){return arguments.length?(r=!!n,i):r},i.size=function(e){return arguments.length?(n=+e[0],t=+e[1],i):[n,t]},i.padding=function(n){return arguments.length?(e=+n,i):e},i},Bh=\"$\",Yh={depth:-1},Fh={};function Ih(n){return n.id}function Hh(n){return n.parentId}var Xh=function(){var n=Ih,t=Hh;function e(e){var r,i,u,o,a,c,f,s=e.length,l=new Array(s),h={};for(i=0;i<s;++i)r=e[i],a=l[i]=new dh(r),null!=(c=n(r,i,e))&&(c+=\"\")&&(h[f=Bh+(a.id=c)]=f in h?Fh:a);for(i=0;i<s;++i)if(a=l[i],null!=(c=t(e[i],i,e))&&(c+=\"\")){if(!(o=h[Bh+c]))throw new Error(\"missing: \"+c);if(o===Fh)throw new Error(\"ambiguous: \"+c);o.children?o.children.push(a):o.children=[a],a.parent=o}else{if(u)throw new Error(\"multiple roots\");u=a}if(!u)throw new Error(\"no root\");if(u.parent=Yh,u.eachBefore(function(n){n.depth=n.parent.depth+1,--s}).eachBefore(hh),u.parent=null,s>0)throw new Error(\"cycle\");return u}return e.id=function(t){return arguments.length?(n=Eh(t),e):n},e.parentId=function(n){return arguments.length?(t=Eh(n),e):t},e};function Gh(n,t){return n.parent===t.parent?1:2}function Vh(n){var t=n.children;return t?t[0]:n.t}function $h(n){var t=n.children;return t?t[t.length-1]:n.t}function Wh(n,t,e){var r=e/(t.i-n.i);t.c-=r,t.s+=e,n.c+=r,t.z+=e,t.m+=e}function Zh(n,t,e){return n.a.parent===t.parent?n.a:e}function Qh(n,t){this._=n,this.parent=null,this.children=null,this.A=null,this.a=this,this.z=0,this.m=0,this.c=0,this.s=0,this.t=null,this.i=t}Qh.prototype=Object.create(dh.prototype);var Jh=function(){var n=Gh,t=1,e=1,r=null;function i(i){var c=function(n){for(var t,e,r,i,u,o=new Qh(n,0),a=[o];t=a.pop();)if(r=t._.children)for(t.children=new Array(u=r.length),i=u-1;i>=0;--i)a.push(e=t.children[i]=new Qh(r[i],i)),e.parent=t;return(o.parent=new Qh(null,0)).children=[o],o}(i);if(c.eachAfter(u),c.parent.m=-c.z,c.eachBefore(o),r)i.eachBefore(a);else{var f=i,s=i,l=i;i.eachBefore(function(n){n.x<f.x&&(f=n),n.x>s.x&&(s=n),n.depth>l.depth&&(l=n)});var h=f===s?1:n(f,s)/2,d=h-f.x,p=t/(s.x+h+d),v=e/(l.depth||1);i.eachBefore(function(n){n.x=(n.x+d)*p,n.y=n.depth*v})}return i}function u(t){var e=t.children,r=t.parent.children,i=t.i?r[t.i-1]:null;if(e){!function(n){for(var t,e=0,r=0,i=n.children,u=i.length;--u>=0;)(t=i[u]).z+=e,t.m+=e,e+=t.s+(r+=t.c)}(t);var u=(e[0].z+e[e.length-1].z)/2;i?(t.z=i.z+n(t._,i._),t.m=t.z-u):t.z=u}else i&&(t.z=i.z+n(t._,i._));t.parent.A=function(t,e,r){if(e){for(var i,u=t,o=t,a=e,c=u.parent.children[0],f=u.m,s=o.m,l=a.m,h=c.m;a=$h(a),u=Vh(u),a&&u;)c=Vh(c),(o=$h(o)).a=t,(i=a.z+l-u.z-f+n(a._,u._))>0&&(Wh(Zh(a,t,r),t,i),f+=i,s+=i),l+=a.m,f+=u.m,h+=c.m,s+=o.m;a&&!$h(o)&&(o.t=a,o.m+=l-s),u&&!Vh(c)&&(c.t=u,c.m+=f-h,r=t)}return r}(t,i,t.parent.A||r[0])}function o(n){n._.x=n.z+n.parent.m,n.m+=n.parent.m}function a(n){n.x*=t,n.y=n.depth*e}return i.separation=function(t){return arguments.length?(n=t,i):n},i.size=function(n){return arguments.length?(r=!1,t=+n[0],e=+n[1],i):r?null:[t,e]},i.nodeSize=function(n){return arguments.length?(r=!0,t=+n[0],e=+n[1],i):r?[t,e]:null},i},Kh=function(n,t,e,r,i){for(var u,o=n.children,a=-1,c=o.length,f=n.value&&(i-e)/n.value;++a<c;)(u=o[a]).x0=t,u.x1=r,u.y0=e,u.y1=e+=u.value*f},nd=(1+Math.sqrt(5))/2;function td(n,t,e,r,i,u){for(var o,a,c,f,s,l,h,d,p,v,g,y=[],b=t.children,_=0,m=0,x=b.length,w=t.value;_<x;){c=i-e,f=u-r;do{s=b[m++].value}while(!s&&m<x);for(l=h=s,g=s*s*(v=Math.max(f/c,c/f)/(w*n)),p=Math.max(h/g,g/l);m<x;++m){if(s+=a=b[m].value,a<l&&(l=a),a>h&&(h=a),g=s*s*v,(d=Math.max(h/g,g/l))>p){s-=a;break}p=d}y.push(o={value:s,dice:c<f,children:b.slice(_,m)}),o.dice?Uh(o,e,r,i,w?r+=f*s/w:u):Kh(o,e,r,w?e+=c*s/w:i,u),w-=s,_=m}return y}var ed=function n(t){function e(n,e,r,i,u){td(t,n,e,r,i,u)}return e.ratio=function(t){return n((t=+t)>1?t:1)},e}(nd),rd=function(){var n=ed,t=!1,e=1,r=1,i=[0],u=Ch,o=Ch,a=Ch,c=Ch,f=Ch;function s(n){return n.x0=n.y0=0,n.x1=e,n.y1=r,n.eachBefore(l),i=[0],t&&n.eachBefore(qh),n}function l(t){var e=i[t.depth],r=t.x0+e,s=t.y0+e,l=t.x1-e,h=t.y1-e;l<r&&(r=l=(r+l)/2),h<s&&(s=h=(s+h)/2),t.x0=r,t.y0=s,t.x1=l,t.y1=h,t.children&&(e=i[t.depth+1]=u(t)/2,r+=f(t)-e,s+=o(t)-e,(l-=a(t)-e)<r&&(r=l=(r+l)/2),(h-=c(t)-e)<s&&(s=h=(s+h)/2),n(t,r,s,l,h))}return s.round=function(n){return arguments.length?(t=!!n,s):t},s.size=function(n){return arguments.length?(e=+n[0],r=+n[1],s):[e,r]},s.tile=function(t){return arguments.length?(n=Eh(t),s):n},s.padding=function(n){return arguments.length?s.paddingInner(n).paddingOuter(n):s.paddingInner()},s.paddingInner=function(n){return arguments.length?(u=\"function\"==typeof n?n:Ph(+n),s):u},s.paddingOuter=function(n){return arguments.length?s.paddingTop(n).paddingRight(n).paddingBottom(n).paddingLeft(n):s.paddingTop()},s.paddingTop=function(n){return arguments.length?(o=\"function\"==typeof n?n:Ph(+n),s):o},s.paddingRight=function(n){return arguments.length?(a=\"function\"==typeof n?n:Ph(+n),s):a},s.paddingBottom=function(n){return arguments.length?(c=\"function\"==typeof n?n:Ph(+n),s):c},s.paddingLeft=function(n){return arguments.length?(f=\"function\"==typeof n?n:Ph(+n),s):f},s},id=function(n,t,e,r,i){var u,o,a=n.children,c=a.length,f=new Array(c+1);for(f[0]=o=u=0;u<c;++u)f[u+1]=o+=a[u].value;!function n(t,e,r,i,u,o,c){if(t>=e-1){var s=a[t];return s.x0=i,s.y0=u,s.x1=o,void(s.y1=c)}var l=f[t],h=r/2+l,d=t+1,p=e-1;for(;d<p;){var v=d+p>>>1;f[v]<h?d=v+1:p=v}h-f[d-1]<f[d]-h&&t+1<d&&--d;var g=f[d]-l,y=r-g;if(o-i>c-u){var b=(i*y+o*g)/r;n(t,d,g,i,u,b,c),n(d,e,y,b,u,o,c)}else{var _=(u*y+c*g)/r;n(t,d,g,i,u,o,_),n(d,e,y,i,_,o,c)}}(0,c,n.value,t,e,r,i)},ud=function(n,t,e,r,i){(1&n.depth?Kh:Uh)(n,t,e,r,i)},od=function n(t){function e(n,e,r,i,u){if((o=n._squarify)&&o.ratio===t)for(var o,a,c,f,s,l=-1,h=o.length,d=n.value;++l<h;){for(c=(a=o[l]).children,f=a.value=0,s=c.length;f<s;++f)a.value+=c[f].value;a.dice?Uh(a,e,r,i,r+=(u-r)*a.value/d):Kh(a,e,r,e+=(i-e)*a.value/d,u),d-=a.value}else n._squarify=o=td(t,n,e,r,i,u),o.ratio=t}return e.ratio=function(t){return n((t=+t)>1?t:1)},e}(nd),ad=function(n){for(var t,e=-1,r=n.length,i=n[r-1],u=0;++e<r;)t=i,i=n[e],u+=t[1]*i[0]-t[0]*i[1];return u/2},cd=function(n){for(var t,e,r=-1,i=n.length,u=0,o=0,a=n[i-1],c=0;++r<i;)t=a,a=n[r],c+=e=t[0]*a[1]-a[0]*t[1],u+=(t[0]+a[0])*e,o+=(t[1]+a[1])*e;return[u/(c*=3),o/c]},fd=function(n,t,e){return(t[0]-n[0])*(e[1]-n[1])-(t[1]-n[1])*(e[0]-n[0])};function sd(n,t){return n[0]-t[0]||n[1]-t[1]}function ld(n){for(var t=n.length,e=[0,1],r=2,i=2;i<t;++i){for(;r>1&&fd(n[e[r-2]],n[e[r-1]],n[i])<=0;)--r;e[r++]=i}return e.slice(0,r)}var hd=function(n){if((e=n.length)<3)return null;var t,e,r=new Array(e),i=new Array(e);for(t=0;t<e;++t)r[t]=[+n[t][0],+n[t][1],t];for(r.sort(sd),t=0;t<e;++t)i[t]=[r[t][0],-r[t][1]];var u=ld(r),o=ld(i),a=o[0]===u[0],c=o[o.length-1]===u[u.length-1],f=[];for(t=u.length-1;t>=0;--t)f.push(n[r[u[t]][2]]);for(t=+a;t<o.length-c;++t)f.push(n[r[o[t]][2]]);return f},dd=function(n,t){for(var e,r,i=n.length,u=n[i-1],o=t[0],a=t[1],c=u[0],f=u[1],s=!1,l=0;l<i;++l)e=(u=n[l])[0],(r=u[1])>a!=f>a&&o<(c-e)*(a-r)/(f-r)+e&&(s=!s),c=e,f=r;return s},pd=function(n){for(var t,e,r=-1,i=n.length,u=n[i-1],o=u[0],a=u[1],c=0;++r<i;)t=o,e=a,t-=o=(u=n[r])[0],e-=a=u[1],c+=Math.sqrt(t*t+e*e);return c},vd=function(){return Math.random()},gd=function n(t){function e(n,e){return n=null==n?0:+n,e=null==e?1:+e,1===arguments.length?(e=n,n=0):e-=n,function(){return t()*e+n}}return e.source=n,e}(vd),yd=function n(t){function e(n,e){var r,i;return n=null==n?0:+n,e=null==e?1:+e,function(){var u;if(null!=r)u=r,r=null;else do{r=2*t()-1,u=2*t()-1,i=r*r+u*u}while(!i||i>1);return n+e*u*Math.sqrt(-2*Math.log(i)/i)}}return e.source=n,e}(vd),bd=function n(t){function e(){var n=yd.source(t).apply(this,arguments);return function(){return Math.exp(n())}}return e.source=n,e}(vd),_d=function n(t){function e(n){return function(){for(var e=0,r=0;r<n;++r)e+=t();return e}}return e.source=n,e}(vd),md=function n(t){function e(n){var e=_d.source(t)(n);return function(){return e()/n}}return e.source=n,e}(vd),xd=function n(t){function e(n){return function(){return-Math.log(1-t())/n}}return e.source=n,e}(vd);function wd(n,t){switch(arguments.length){case 0:break;case 1:this.range(n);break;default:this.range(t).domain(n)}return this}function Md(n,t){switch(arguments.length){case 0:break;case 1:this.interpolator(n);break;default:this.interpolator(t).domain(n)}return this}var Nd=Array.prototype,Ad=Nd.map,Td=Nd.slice,Sd={name:\"implicit\"};function kd(){var n=Qi(),t=[],e=[],r=Sd;function i(i){var u=i+\"\",o=n.get(u);if(!o){if(r!==Sd)return r;n.set(u,o=t.push(i))}return e[(o-1)%e.length]}return i.domain=function(e){if(!arguments.length)return t.slice();t=[],n=Qi();for(var r,u,o=-1,a=e.length;++o<a;)n.has(u=(r=e[o])+\"\")||n.set(u,t.push(r));return i},i.range=function(n){return arguments.length?(e=Td.call(n),i):e.slice()},i.unknown=function(n){return arguments.length?(r=n,i):r},i.copy=function(){return kd(t,e).unknown(r)},wd.apply(i,arguments),i}function Ed(){var n,t,e=kd().unknown(void 0),r=e.domain,i=e.range,u=[0,1],o=!1,a=0,c=0,f=.5;function s(){var e=r().length,s=u[1]<u[0],l=u[s-0],h=u[1-s];n=(h-l)/Math.max(1,e-a+2*c),o&&(n=Math.floor(n)),l+=(h-l-n*(e-a))*f,t=n*(1-a),o&&(l=Math.round(l),t=Math.round(t));var d=w(e).map(function(t){return l+n*t});return i(s?d.reverse():d)}return delete e.unknown,e.domain=function(n){return arguments.length?(r(n),s()):r()},e.range=function(n){return arguments.length?(u=[+n[0],+n[1]],s()):u.slice()},e.rangeRound=function(n){return u=[+n[0],+n[1]],o=!0,s()},e.bandwidth=function(){return t},e.step=function(){return n},e.round=function(n){return arguments.length?(o=!!n,s()):o},e.padding=function(n){return arguments.length?(a=Math.min(1,c=+n),s()):a},e.paddingInner=function(n){return arguments.length?(a=Math.min(1,n),s()):a},e.paddingOuter=function(n){return arguments.length?(c=+n,s()):c},e.align=function(n){return arguments.length?(f=Math.max(0,Math.min(1,n)),s()):f},e.copy=function(){return Ed(r(),u).round(o).paddingInner(a).paddingOuter(c).align(f)},wd.apply(s(),arguments)}function Cd(){return function n(t){var e=t.copy;return t.padding=t.paddingOuter,delete t.paddingInner,delete t.paddingOuter,t.copy=function(){return n(e())},t}(Ed.apply(null,arguments).paddingInner(1))}var Pd=function(n){return function(){return n}},zd=function(n){return+n},Od=[0,1];function Rd(n){return n}function Dd(n,t){return(t-=n=+n)?function(e){return(e-n)/t}:Pd(isNaN(t)?NaN:.5)}function Ld(n){var t,e=n[0],r=n[n.length-1];return e>r&&(t=e,e=r,r=t),function(n){return Math.max(e,Math.min(r,n))}}function qd(n,t,e){var r=n[0],i=n[1],u=t[0],o=t[1];return i<r?(r=Dd(i,r),u=e(o,u)):(r=Dd(r,i),u=e(u,o)),function(n){return u(r(n))}}function Ud(n,t,e){var r=Math.min(n.length,t.length)-1,i=new Array(r),u=new Array(r),o=-1;for(n[r]<n[0]&&(n=n.slice().reverse(),t=t.slice().reverse());++o<r;)i[o]=Dd(n[o],n[o+1]),u[o]=e(t[o],t[o+1]);return function(t){var e=c(n,t,1,r)-1;return u[e](i[e](t))}}function jd(n,t){return t.domain(n.domain()).range(n.range()).interpolate(n.interpolate()).clamp(n.clamp()).unknown(n.unknown())}function Bd(){var n,t,e,r,i,u,o=Od,a=Od,c=Zt,f=Rd;function s(){return r=Math.min(o.length,a.length)>2?Ud:qd,i=u=null,l}function l(t){return isNaN(t=+t)?e:(i||(i=r(o.map(n),a,c)))(n(f(t)))}return l.invert=function(e){return f(t((u||(u=r(a,o.map(n),Yt)))(e)))},l.domain=function(n){return arguments.length?(o=Ad.call(n,zd),f===Rd||(f=Ld(o)),s()):o.slice()},l.range=function(n){return arguments.length?(a=Td.call(n),s()):a.slice()},l.rangeRound=function(n){return a=Td.call(n),c=Kt,s()},l.clamp=function(n){return arguments.length?(f=n?Ld(o):Rd,l):f!==Rd},l.interpolate=function(n){return arguments.length?(c=n,s()):c},l.unknown=function(n){return arguments.length?(e=n,l):e},function(e,r){return n=e,t=r,s()}}function Yd(n,t){return Bd()(n,t)}var Fd=function(n,t,e,r){var i,u=k(n,t,e);switch((r=Fo(null==r?\",f\":r)).type){case\"s\":var o=Math.max(Math.abs(n),Math.abs(t));return null!=r.precision||isNaN(i=ea(u,o))||(r.precision=i),Vo(r,o);case\"\":case\"e\":case\"g\":case\"p\":case\"r\":null!=r.precision||isNaN(i=ra(u,Math.max(Math.abs(n),Math.abs(t))))||(r.precision=i-(\"e\"===r.type));break;case\"f\":case\"%\":null!=r.precision||isNaN(i=ta(u))||(r.precision=i-2*(\"%\"===r.type))}return Go(r)};function Id(n){var t=n.domain;return n.ticks=function(n){var e=t();return T(e[0],e[e.length-1],null==n?10:n)},n.tickFormat=function(n,e){var r=t();return Fd(r[0],r[r.length-1],null==n?10:n,e)},n.nice=function(e){null==e&&(e=10);var r,i=t(),u=0,o=i.length-1,a=i[u],c=i[o];return c<a&&(r=a,a=c,c=r,r=u,u=o,o=r),(r=S(a,c,e))>0?r=S(a=Math.floor(a/r)*r,c=Math.ceil(c/r)*r,e):r<0&&(r=S(a=Math.ceil(a*r)/r,c=Math.floor(c*r)/r,e)),r>0?(i[u]=Math.floor(a/r)*r,i[o]=Math.ceil(c/r)*r,t(i)):r<0&&(i[u]=Math.ceil(a*r)/r,i[o]=Math.floor(c*r)/r,t(i)),n},n}function Hd(){var n=Yd(Rd,Rd);return n.copy=function(){return jd(n,Hd())},wd.apply(n,arguments),Id(n)}function Xd(n){var t;function e(n){return isNaN(n=+n)?t:n}return e.invert=e,e.domain=e.range=function(t){return arguments.length?(n=Ad.call(t,zd),e):n.slice()},e.unknown=function(n){return arguments.length?(t=n,e):t},e.copy=function(){return Xd(n).unknown(t)},n=arguments.length?Ad.call(n,zd):[0,1],Id(e)}var Gd=function(n,t){var e,r=0,i=(n=n.slice()).length-1,u=n[r],o=n[i];return o<u&&(e=r,r=i,i=e,e=u,u=o,o=e),n[r]=t.floor(u),n[i]=t.ceil(o),n};function Vd(n){return Math.log(n)}function $d(n){return Math.exp(n)}function Wd(n){return-Math.log(-n)}function Zd(n){return-Math.exp(-n)}function Qd(n){return isFinite(n)?+(\"1e\"+n):n<0?0:n}function Jd(n){return function(t){return-n(-t)}}function Kd(n){var t,e,r=n(Vd,$d),i=r.domain,u=10;function o(){return t=function(n){return n===Math.E?Math.log:10===n&&Math.log10||2===n&&Math.log2||(n=Math.log(n),function(t){return Math.log(t)/n})}(u),e=function(n){return 10===n?Qd:n===Math.E?Math.exp:function(t){return Math.pow(n,t)}}(u),i()[0]<0?(t=Jd(t),e=Jd(e),n(Wd,Zd)):n(Vd,$d),r}return r.base=function(n){return arguments.length?(u=+n,o()):u},r.domain=function(n){return arguments.length?(i(n),o()):i()},r.ticks=function(n){var r,o=i(),a=o[0],c=o[o.length-1];(r=c<a)&&(h=a,a=c,c=h);var f,s,l,h=t(a),d=t(c),p=null==n?10:+n,v=[];if(!(u%1)&&d-h<p){if(h=Math.round(h)-1,d=Math.round(d)+1,a>0){for(;h<d;++h)for(s=1,f=e(h);s<u;++s)if(!((l=f*s)<a)){if(l>c)break;v.push(l)}}else for(;h<d;++h)for(s=u-1,f=e(h);s>=1;--s)if(!((l=f*s)<a)){if(l>c)break;v.push(l)}}else v=T(h,d,Math.min(d-h,p)).map(e);return r?v.reverse():v},r.tickFormat=function(n,i){if(null==i&&(i=10===u?\".0e\":\",\"),\"function\"!=typeof i&&(i=Go(i)),n===1/0)return i;null==n&&(n=10);var o=Math.max(1,u*n/r.ticks().length);return function(n){var r=n/e(Math.round(t(n)));return r*u<u-.5&&(r*=u),r<=o?i(n):\"\"}},r.nice=function(){return i(Gd(i(),{floor:function(n){return e(Math.floor(t(n)))},ceil:function(n){return e(Math.ceil(t(n)))}}))},r}function np(){var n=Kd(Bd()).domain([1,10]);return n.copy=function(){return jd(n,np()).base(n.base())},wd.apply(n,arguments),n}function tp(n){return function(t){return Math.sign(t)*Math.log1p(Math.abs(t/n))}}function ep(n){return function(t){return Math.sign(t)*Math.expm1(Math.abs(t))*n}}function rp(n){var t=1,e=n(tp(t),ep(t));return e.constant=function(e){return arguments.length?n(tp(t=+e),ep(t)):t},Id(e)}function ip(){var n=rp(Bd());return n.copy=function(){return jd(n,ip()).constant(n.constant())},wd.apply(n,arguments)}function up(n){return function(t){return t<0?-Math.pow(-t,n):Math.pow(t,n)}}function op(n){return n<0?-Math.sqrt(-n):Math.sqrt(n)}function ap(n){return n<0?-n*n:n*n}function cp(n){var t=n(Rd,Rd),e=1;return t.exponent=function(t){return arguments.length?1===(e=+t)?n(Rd,Rd):.5===e?n(op,ap):n(up(e),up(1/e)):e},Id(t)}function fp(){var n=cp(Bd());return n.copy=function(){return jd(n,fp()).exponent(n.exponent())},wd.apply(n,arguments),n}function sp(){return fp.apply(null,arguments).exponent(.5)}function lp(){var n,t=[],e=[],i=[];function u(){var n=0,r=Math.max(1,e.length);for(i=new Array(r-1);++n<r;)i[n-1]=P(t,n/r);return o}function o(t){return isNaN(t=+t)?n:e[c(i,t)]}return o.invertExtent=function(n){var r=e.indexOf(n);return r<0?[NaN,NaN]:[r>0?i[r-1]:t[0],r<i.length?i[r]:t[t.length-1]]},o.domain=function(n){if(!arguments.length)return t.slice();t=[];for(var e,i=0,o=n.length;i<o;++i)null==(e=n[i])||isNaN(e=+e)||t.push(e);return t.sort(r),u()},o.range=function(n){return arguments.length?(e=Td.call(n),u()):e.slice()},o.unknown=function(t){return arguments.length?(n=t,o):n},o.quantiles=function(){return i.slice()},o.copy=function(){return lp().domain(t).range(e).unknown(n)},wd.apply(o,arguments)}function hp(){var n,t=0,e=1,r=1,i=[.5],u=[0,1];function o(t){return t<=t?u[c(i,t,0,r)]:n}function a(){var n=-1;for(i=new Array(r);++n<r;)i[n]=((n+1)*e-(n-r)*t)/(r+1);return o}return o.domain=function(n){return arguments.length?(t=+n[0],e=+n[1],a()):[t,e]},o.range=function(n){return arguments.length?(r=(u=Td.call(n)).length-1,a()):u.slice()},o.invertExtent=function(n){var o=u.indexOf(n);return o<0?[NaN,NaN]:o<1?[t,i[0]]:o>=r?[i[r-1],e]:[i[o-1],i[o]]},o.unknown=function(t){return arguments.length?(n=t,o):o},o.thresholds=function(){return i.slice()},o.copy=function(){return hp().domain([t,e]).range(u).unknown(n)},wd.apply(Id(o),arguments)}function dp(){var n,t=[.5],e=[0,1],r=1;function i(i){return i<=i?e[c(t,i,0,r)]:n}return i.domain=function(n){return arguments.length?(t=Td.call(n),r=Math.min(t.length,e.length-1),i):t.slice()},i.range=function(n){return arguments.length?(e=Td.call(n),r=Math.min(t.length,e.length-1),i):e.slice()},i.invertExtent=function(n){var r=e.indexOf(n);return[t[r-1],t[r]]},i.unknown=function(t){return arguments.length?(n=t,i):n},i.copy=function(){return dp().domain(t).range(e).unknown(n)},wd.apply(i,arguments)}var pp=new Date,vp=new Date;function gp(n,t,e,r){function i(t){return n(t=new Date(+t)),t}return i.floor=i,i.ceil=function(e){return n(e=new Date(e-1)),t(e,1),n(e),e},i.round=function(n){var t=i(n),e=i.ceil(n);return n-t<e-n?t:e},i.offset=function(n,e){return t(n=new Date(+n),null==e?1:Math.floor(e)),n},i.range=function(e,r,u){var o,a=[];if(e=i.ceil(e),u=null==u?1:Math.floor(u),!(e<r&&u>0))return a;do{a.push(o=new Date(+e)),t(e,u),n(e)}while(o<e&&e<r);return a},i.filter=function(e){return gp(function(t){if(t>=t)for(;n(t),!e(t);)t.setTime(t-1)},function(n,r){if(n>=n)if(r<0)for(;++r<=0;)for(;t(n,-1),!e(n););else for(;--r>=0;)for(;t(n,1),!e(n););})},e&&(i.count=function(t,r){return pp.setTime(+t),vp.setTime(+r),n(pp),n(vp),Math.floor(e(pp,vp))},i.every=function(n){return n=Math.floor(n),isFinite(n)&&n>0?n>1?i.filter(r?function(t){return r(t)%n==0}:function(t){return i.count(0,t)%n==0}):i:null}),i}var yp=gp(function(){},function(n,t){n.setTime(+n+t)},function(n,t){return t-n});yp.every=function(n){return n=Math.floor(n),isFinite(n)&&n>0?n>1?gp(function(t){t.setTime(Math.floor(t/n)*n)},function(t,e){t.setTime(+t+e*n)},function(t,e){return(e-t)/n}):yp:null};var bp=yp,_p=yp.range,mp=6e4,xp=6048e5,wp=gp(function(n){n.setTime(n-n.getMilliseconds())},function(n,t){n.setTime(+n+1e3*t)},function(n,t){return(t-n)/1e3},function(n){return n.getUTCSeconds()}),Mp=wp,Np=wp.range,Ap=gp(function(n){n.setTime(n-n.getMilliseconds()-1e3*n.getSeconds())},function(n,t){n.setTime(+n+t*mp)},function(n,t){return(t-n)/mp},function(n){return n.getMinutes()}),Tp=Ap,Sp=Ap.range,kp=gp(function(n){n.setTime(n-n.getMilliseconds()-1e3*n.getSeconds()-n.getMinutes()*mp)},function(n,t){n.setTime(+n+36e5*t)},function(n,t){return(t-n)/36e5},function(n){return n.getHours()}),Ep=kp,Cp=kp.range,Pp=gp(function(n){n.setHours(0,0,0,0)},function(n,t){n.setDate(n.getDate()+t)},function(n,t){return(t-n-(t.getTimezoneOffset()-n.getTimezoneOffset())*mp)/864e5},function(n){return n.getDate()-1}),zp=Pp,Op=Pp.range;function Rp(n){return gp(function(t){t.setDate(t.getDate()-(t.getDay()+7-n)%7),t.setHours(0,0,0,0)},function(n,t){n.setDate(n.getDate()+7*t)},function(n,t){return(t-n-(t.getTimezoneOffset()-n.getTimezoneOffset())*mp)/xp})}var Dp=Rp(0),Lp=Rp(1),qp=Rp(2),Up=Rp(3),jp=Rp(4),Bp=Rp(5),Yp=Rp(6),Fp=Dp.range,Ip=Lp.range,Hp=qp.range,Xp=Up.range,Gp=jp.range,Vp=Bp.range,$p=Yp.range,Wp=gp(function(n){n.setDate(1),n.setHours(0,0,0,0)},function(n,t){n.setMonth(n.getMonth()+t)},function(n,t){return t.getMonth()-n.getMonth()+12*(t.getFullYear()-n.getFullYear())},function(n){return n.getMonth()}),Zp=Wp,Qp=Wp.range,Jp=gp(function(n){n.setMonth(0,1),n.setHours(0,0,0,0)},function(n,t){n.setFullYear(n.getFullYear()+t)},function(n,t){return t.getFullYear()-n.getFullYear()},function(n){return n.getFullYear()});Jp.every=function(n){return isFinite(n=Math.floor(n))&&n>0?gp(function(t){t.setFullYear(Math.floor(t.getFullYear()/n)*n),t.setMonth(0,1),t.setHours(0,0,0,0)},function(t,e){t.setFullYear(t.getFullYear()+e*n)}):null};var Kp=Jp,nv=Jp.range,tv=gp(function(n){n.setUTCSeconds(0,0)},function(n,t){n.setTime(+n+t*mp)},function(n,t){return(t-n)/mp},function(n){return n.getUTCMinutes()}),ev=tv,rv=tv.range,iv=gp(function(n){n.setUTCMinutes(0,0,0)},function(n,t){n.setTime(+n+36e5*t)},function(n,t){return(t-n)/36e5},function(n){return n.getUTCHours()}),uv=iv,ov=iv.range,av=gp(function(n){n.setUTCHours(0,0,0,0)},function(n,t){n.setUTCDate(n.getUTCDate()+t)},function(n,t){return(t-n)/864e5},function(n){return n.getUTCDate()-1}),cv=av,fv=av.range;function sv(n){return gp(function(t){t.setUTCDate(t.getUTCDate()-(t.getUTCDay()+7-n)%7),t.setUTCHours(0,0,0,0)},function(n,t){n.setUTCDate(n.getUTCDate()+7*t)},function(n,t){return(t-n)/xp})}var lv=sv(0),hv=sv(1),dv=sv(2),pv=sv(3),vv=sv(4),gv=sv(5),yv=sv(6),bv=lv.range,_v=hv.range,mv=dv.range,xv=pv.range,wv=vv.range,Mv=gv.range,Nv=yv.range,Av=gp(function(n){n.setUTCDate(1),n.setUTCHours(0,0,0,0)},function(n,t){n.setUTCMonth(n.getUTCMonth()+t)},function(n,t){return t.getUTCMonth()-n.getUTCMonth()+12*(t.getUTCFullYear()-n.getUTCFullYear())},function(n){return n.getUTCMonth()}),Tv=Av,Sv=Av.range,kv=gp(function(n){n.setUTCMonth(0,1),n.setUTCHours(0,0,0,0)},function(n,t){n.setUTCFullYear(n.getUTCFullYear()+t)},function(n,t){return t.getUTCFullYear()-n.getUTCFullYear()},function(n){return n.getUTCFullYear()});kv.every=function(n){return isFinite(n=Math.floor(n))&&n>0?gp(function(t){t.setUTCFullYear(Math.floor(t.getUTCFullYear()/n)*n),t.setUTCMonth(0,1),t.setUTCHours(0,0,0,0)},function(t,e){t.setUTCFullYear(t.getUTCFullYear()+e*n)}):null};var Ev=kv,Cv=kv.range;function Pv(n){if(0<=n.y&&n.y<100){var t=new Date(-1,n.m,n.d,n.H,n.M,n.S,n.L);return t.setFullYear(n.y),t}return new Date(n.y,n.m,n.d,n.H,n.M,n.S,n.L)}function zv(n){if(0<=n.y&&n.y<100){var t=new Date(Date.UTC(-1,n.m,n.d,n.H,n.M,n.S,n.L));return t.setUTCFullYear(n.y),t}return new Date(Date.UTC(n.y,n.m,n.d,n.H,n.M,n.S,n.L))}function Ov(n){return{y:n,m:0,d:1,H:0,M:0,S:0,L:0}}function Rv(n){var t=n.dateTime,e=n.date,r=n.time,i=n.periods,u=n.days,o=n.shortDays,a=n.months,c=n.shortMonths,f=Gv(i),s=Vv(i),l=Gv(u),h=Vv(u),d=Gv(o),p=Vv(o),v=Gv(a),g=Vv(a),y=Gv(c),b=Vv(c),_={a:function(n){return o[n.getDay()]},A:function(n){return u[n.getDay()]},b:function(n){return c[n.getMonth()]},B:function(n){return a[n.getMonth()]},c:null,d:dg,e:dg,f:bg,H:pg,I:vg,j:gg,L:yg,m:_g,M:mg,p:function(n){return i[+(n.getHours()>=12)]},Q:$g,s:Wg,S:xg,u:wg,U:Mg,V:Ng,w:Ag,W:Tg,x:null,X:null,y:Sg,Y:kg,Z:Eg,\"%\":Vg},m={a:function(n){return o[n.getUTCDay()]},A:function(n){return u[n.getUTCDay()]},b:function(n){return c[n.getUTCMonth()]},B:function(n){return a[n.getUTCMonth()]},c:null,d:Cg,e:Cg,f:Dg,H:Pg,I:zg,j:Og,L:Rg,m:Lg,M:qg,p:function(n){return i[+(n.getUTCHours()>=12)]},Q:$g,s:Wg,S:Ug,u:jg,U:Bg,V:Yg,w:Fg,W:Ig,x:null,X:null,y:Hg,Y:Xg,Z:Gg,\"%\":Vg},x={a:function(n,t,e){var r=d.exec(t.slice(e));return r?(n.w=p[r[0].toLowerCase()],e+r[0].length):-1},A:function(n,t,e){var r=l.exec(t.slice(e));return r?(n.w=h[r[0].toLowerCase()],e+r[0].length):-1},b:function(n,t,e){var r=y.exec(t.slice(e));return r?(n.m=b[r[0].toLowerCase()],e+r[0].length):-1},B:function(n,t,e){var r=v.exec(t.slice(e));return r?(n.m=g[r[0].toLowerCase()],e+r[0].length):-1},c:function(n,e,r){return N(n,t,e,r)},d:rg,e:rg,f:fg,H:ug,I:ug,j:ig,L:cg,m:eg,M:og,p:function(n,t,e){var r=f.exec(t.slice(e));return r?(n.p=s[r[0].toLowerCase()],e+r[0].length):-1},Q:lg,s:hg,S:ag,u:Wv,U:Zv,V:Qv,w:$v,W:Jv,x:function(n,t,r){return N(n,e,t,r)},X:function(n,t,e){return N(n,r,t,e)},y:ng,Y:Kv,Z:tg,\"%\":sg};function w(n,t){return function(e){var r,i,u,o=[],a=-1,c=0,f=n.length;for(e instanceof Date||(e=new Date(+e));++a<f;)37===n.charCodeAt(a)&&(o.push(n.slice(c,a)),null!=(i=Bv[r=n.charAt(++a)])?r=n.charAt(++a):i=\"e\"===r?\" \":\"0\",(u=t[r])&&(r=u(e,i)),o.push(r),c=a+1);return o.push(n.slice(c,a)),o.join(\"\")}}function M(n,t){return function(e){var r,i,u=Ov(1900);if(N(u,n,e+=\"\",0)!=e.length)return null;if(\"Q\"in u)return new Date(u.Q);if(\"p\"in u&&(u.H=u.H%12+12*u.p),\"V\"in u){if(u.V<1||u.V>53)return null;\"w\"in u||(u.w=1),\"Z\"in u?(i=(r=zv(Ov(u.y))).getUTCDay(),r=i>4||0===i?hv.ceil(r):hv(r),r=cv.offset(r,7*(u.V-1)),u.y=r.getUTCFullYear(),u.m=r.getUTCMonth(),u.d=r.getUTCDate()+(u.w+6)%7):(i=(r=t(Ov(u.y))).getDay(),r=i>4||0===i?Lp.ceil(r):Lp(r),r=zp.offset(r,7*(u.V-1)),u.y=r.getFullYear(),u.m=r.getMonth(),u.d=r.getDate()+(u.w+6)%7)}else(\"W\"in u||\"U\"in u)&&(\"w\"in u||(u.w=\"u\"in u?u.u%7:\"W\"in u?1:0),i=\"Z\"in u?zv(Ov(u.y)).getUTCDay():t(Ov(u.y)).getDay(),u.m=0,u.d=\"W\"in u?(u.w+6)%7+7*u.W-(i+5)%7:u.w+7*u.U-(i+6)%7);return\"Z\"in u?(u.H+=u.Z/100|0,u.M+=u.Z%100,zv(u)):t(u)}}function N(n,t,e,r){for(var i,u,o=0,a=t.length,c=e.length;o<a;){if(r>=c)return-1;if(37===(i=t.charCodeAt(o++))){if(i=t.charAt(o++),!(u=x[i in Bv?t.charAt(o++):i])||(r=u(n,e,r))<0)return-1}else if(i!=e.charCodeAt(r++))return-1}return r}return _.x=w(e,_),_.X=w(r,_),_.c=w(t,_),m.x=w(e,m),m.X=w(r,m),m.c=w(t,m),{format:function(n){var t=w(n+=\"\",_);return t.toString=function(){return n},t},parse:function(n){var t=M(n+=\"\",Pv);return t.toString=function(){return n},t},utcFormat:function(n){var t=w(n+=\"\",m);return t.toString=function(){return n},t},utcParse:function(n){var t=M(n,zv);return t.toString=function(){return n},t}}}var Dv,Lv,qv,Uv,jv,Bv={\"-\":\"\",_:\" \",0:\"0\"},Yv=/^\\s*\\d+/,Fv=/^%/,Iv=/[\\\\^$*+?|[\\]().{}]/g;function Hv(n,t,e){var r=n<0?\"-\":\"\",i=(r?-n:n)+\"\",u=i.length;return r+(u<e?new Array(e-u+1).join(t)+i:i)}function Xv(n){return n.replace(Iv,\"\\\\$&\")}function Gv(n){return new RegExp(\"^(?:\"+n.map(Xv).join(\"|\")+\")\",\"i\")}function Vv(n){for(var t={},e=-1,r=n.length;++e<r;)t[n[e].toLowerCase()]=e;return t}function $v(n,t,e){var r=Yv.exec(t.slice(e,e+1));return r?(n.w=+r[0],e+r[0].length):-1}function Wv(n,t,e){var r=Yv.exec(t.slice(e,e+1));return r?(n.u=+r[0],e+r[0].length):-1}function Zv(n,t,e){var r=Yv.exec(t.slice(e,e+2));return r?(n.U=+r[0],e+r[0].length):-1}function Qv(n,t,e){var r=Yv.exec(t.slice(e,e+2));return r?(n.V=+r[0],e+r[0].length):-1}function Jv(n,t,e){var r=Yv.exec(t.slice(e,e+2));return r?(n.W=+r[0],e+r[0].length):-1}function Kv(n,t,e){var r=Yv.exec(t.slice(e,e+4));return r?(n.y=+r[0],e+r[0].length):-1}function ng(n,t,e){var r=Yv.exec(t.slice(e,e+2));return r?(n.y=+r[0]+(+r[0]>68?1900:2e3),e+r[0].length):-1}function tg(n,t,e){var r=/^(Z)|([+-]\\d\\d)(?::?(\\d\\d))?/.exec(t.slice(e,e+6));return r?(n.Z=r[1]?0:-(r[2]+(r[3]||\"00\")),e+r[0].length):-1}function eg(n,t,e){var r=Yv.exec(t.slice(e,e+2));return r?(n.m=r[0]-1,e+r[0].length):-1}function rg(n,t,e){var r=Yv.exec(t.slice(e,e+2));return r?(n.d=+r[0],e+r[0].length):-1}function ig(n,t,e){var r=Yv.exec(t.slice(e,e+3));return r?(n.m=0,n.d=+r[0],e+r[0].length):-1}function ug(n,t,e){var r=Yv.exec(t.slice(e,e+2));return r?(n.H=+r[0],e+r[0].length):-1}function og(n,t,e){var r=Yv.exec(t.slice(e,e+2));return r?(n.M=+r[0],e+r[0].length):-1}function ag(n,t,e){var r=Yv.exec(t.slice(e,e+2));return r?(n.S=+r[0],e+r[0].length):-1}function cg(n,t,e){var r=Yv.exec(t.slice(e,e+3));return r?(n.L=+r[0],e+r[0].length):-1}function fg(n,t,e){var r=Yv.exec(t.slice(e,e+6));return r?(n.L=Math.floor(r[0]/1e3),e+r[0].length):-1}function sg(n,t,e){var r=Fv.exec(t.slice(e,e+1));return r?e+r[0].length:-1}function lg(n,t,e){var r=Yv.exec(t.slice(e));return r?(n.Q=+r[0],e+r[0].length):-1}function hg(n,t,e){var r=Yv.exec(t.slice(e));return r?(n.Q=1e3*+r[0],e+r[0].length):-1}function dg(n,t){return Hv(n.getDate(),t,2)}function pg(n,t){return Hv(n.getHours(),t,2)}function vg(n,t){return Hv(n.getHours()%12||12,t,2)}function gg(n,t){return Hv(1+zp.count(Kp(n),n),t,3)}function yg(n,t){return Hv(n.getMilliseconds(),t,3)}function bg(n,t){return yg(n,t)+\"000\"}function _g(n,t){return Hv(n.getMonth()+1,t,2)}function mg(n,t){return Hv(n.getMinutes(),t,2)}function xg(n,t){return Hv(n.getSeconds(),t,2)}function wg(n){var t=n.getDay();return 0===t?7:t}function Mg(n,t){return Hv(Dp.count(Kp(n),n),t,2)}function Ng(n,t){var e=n.getDay();return n=e>=4||0===e?jp(n):jp.ceil(n),Hv(jp.count(Kp(n),n)+(4===Kp(n).getDay()),t,2)}function Ag(n){return n.getDay()}function Tg(n,t){return Hv(Lp.count(Kp(n),n),t,2)}function Sg(n,t){return Hv(n.getFullYear()%100,t,2)}function kg(n,t){return Hv(n.getFullYear()%1e4,t,4)}function Eg(n){var t=n.getTimezoneOffset();return(t>0?\"-\":(t*=-1,\"+\"))+Hv(t/60|0,\"0\",2)+Hv(t%60,\"0\",2)}function Cg(n,t){return Hv(n.getUTCDate(),t,2)}function Pg(n,t){return Hv(n.getUTCHours(),t,2)}function zg(n,t){return Hv(n.getUTCHours()%12||12,t,2)}function Og(n,t){return Hv(1+cv.count(Ev(n),n),t,3)}function Rg(n,t){return Hv(n.getUTCMilliseconds(),t,3)}function Dg(n,t){return Rg(n,t)+\"000\"}function Lg(n,t){return Hv(n.getUTCMonth()+1,t,2)}function qg(n,t){return Hv(n.getUTCMinutes(),t,2)}function Ug(n,t){return Hv(n.getUTCSeconds(),t,2)}function jg(n){var t=n.getUTCDay();return 0===t?7:t}function Bg(n,t){return Hv(lv.count(Ev(n),n),t,2)}function Yg(n,t){var e=n.getUTCDay();return n=e>=4||0===e?vv(n):vv.ceil(n),Hv(vv.count(Ev(n),n)+(4===Ev(n).getUTCDay()),t,2)}function Fg(n){return n.getUTCDay()}function Ig(n,t){return Hv(hv.count(Ev(n),n),t,2)}function Hg(n,t){return Hv(n.getUTCFullYear()%100,t,2)}function Xg(n,t){return Hv(n.getUTCFullYear()%1e4,t,4)}function Gg(){return\"+0000\"}function Vg(){return\"%\"}function $g(n){return+n}function Wg(n){return Math.floor(+n/1e3)}function Zg(n){return Dv=Rv(n),Lv=Dv.format,qv=Dv.parse,Uv=Dv.utcFormat,jv=Dv.utcParse,Dv}Zg({dateTime:\"%x, %X\",date:\"%-m/%-d/%Y\",time:\"%-I:%M:%S %p\",periods:[\"AM\",\"PM\"],days:[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"],shortDays:[\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\"],months:[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"],shortMonths:[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"]});var Qg=Date.prototype.toISOString?function(n){return n.toISOString()}:Uv(\"%Y-%m-%dT%H:%M:%S.%LZ\");var Jg=+new Date(\"2000-01-01T00:00:00.000Z\")?function(n){var t=new Date(n);return isNaN(t)?null:t}:jv(\"%Y-%m-%dT%H:%M:%S.%LZ\"),Kg=1e3,ny=60*Kg,ty=60*ny,ey=24*ty,ry=7*ey,iy=30*ey,uy=365*ey;function oy(n){return new Date(n)}function ay(n){return n instanceof Date?+n:+new Date(+n)}function cy(n,t,e,r,u,o,a,c,f){var s=Yd(Rd,Rd),l=s.invert,h=s.domain,d=f(\".%L\"),p=f(\":%S\"),v=f(\"%I:%M\"),g=f(\"%I %p\"),y=f(\"%a %d\"),b=f(\"%b %d\"),_=f(\"%B\"),m=f(\"%Y\"),x=[[a,1,Kg],[a,5,5*Kg],[a,15,15*Kg],[a,30,30*Kg],[o,1,ny],[o,5,5*ny],[o,15,15*ny],[o,30,30*ny],[u,1,ty],[u,3,3*ty],[u,6,6*ty],[u,12,12*ty],[r,1,ey],[r,2,2*ey],[e,1,ry],[t,1,iy],[t,3,3*iy],[n,1,uy]];function w(i){return(a(i)<i?d:o(i)<i?p:u(i)<i?v:r(i)<i?g:t(i)<i?e(i)<i?y:b:n(i)<i?_:m)(i)}function M(t,e,r,u){if(null==t&&(t=10),\"number\"==typeof t){var o=Math.abs(r-e)/t,a=i(function(n){return n[2]}).right(x,o);a===x.length?(u=k(e/uy,r/uy,t),t=n):a?(u=(a=x[o/x[a-1][2]<x[a][2]/o?a-1:a])[1],t=a[0]):(u=Math.max(k(e,r,t),1),t=c)}return null==u?t:t.every(u)}return s.invert=function(n){return new Date(l(n))},s.domain=function(n){return arguments.length?h(Ad.call(n,ay)):h().map(oy)},s.ticks=function(n,t){var e,r=h(),i=r[0],u=r[r.length-1],o=u<i;return o&&(e=i,i=u,u=e),e=(e=M(n,i,u,t))?e.range(i,u+1):[],o?e.reverse():e},s.tickFormat=function(n,t){return null==t?w:f(t)},s.nice=function(n,t){var e=h();return(n=M(n,e[0],e[e.length-1],t))?h(Gd(e,n)):s},s.copy=function(){return jd(s,cy(n,t,e,r,u,o,a,c,f))},s}var fy=function(){return wd.apply(cy(Kp,Zp,Dp,zp,Ep,Tp,Mp,bp,Lv).domain([new Date(2e3,0,1),new Date(2e3,0,2)]),arguments)},sy=function(){return wd.apply(cy(Ev,Tv,lv,cv,uv,ev,Mp,bp,Uv).domain([Date.UTC(2e3,0,1),Date.UTC(2e3,0,2)]),arguments)};function ly(){var n,t,e,r,i,u=0,o=1,a=Rd,c=!1;function f(t){return isNaN(t=+t)?i:a(0===e?.5:(t=(r(t)-n)*e,c?Math.max(0,Math.min(1,t)):t))}return f.domain=function(i){return arguments.length?(n=r(u=+i[0]),t=r(o=+i[1]),e=n===t?0:1/(t-n),f):[u,o]},f.clamp=function(n){return arguments.length?(c=!!n,f):c},f.interpolator=function(n){return arguments.length?(a=n,f):a},f.unknown=function(n){return arguments.length?(i=n,f):i},function(i){return r=i,n=i(u),t=i(o),e=n===t?0:1/(t-n),f}}function hy(n,t){return t.domain(n.domain()).interpolator(n.interpolator()).clamp(n.clamp()).unknown(n.unknown())}function dy(){var n=Id(ly()(Rd));return n.copy=function(){return hy(n,dy())},Md.apply(n,arguments)}function py(){var n=Kd(ly()).domain([1,10]);return n.copy=function(){return hy(n,py()).base(n.base())},Md.apply(n,arguments)}function vy(){var n=rp(ly());return n.copy=function(){return hy(n,vy()).constant(n.constant())},Md.apply(n,arguments)}function gy(){var n=cp(ly());return n.copy=function(){return hy(n,gy()).exponent(n.exponent())},Md.apply(n,arguments)}function yy(){return gy.apply(null,arguments).exponent(.5)}function by(){var n=[],t=Rd;function e(e){if(!isNaN(e=+e))return t((c(n,e)-1)/(n.length-1))}return e.domain=function(t){if(!arguments.length)return n.slice();n=[];for(var i,u=0,o=t.length;u<o;++u)null==(i=t[u])||isNaN(i=+i)||n.push(i);return n.sort(r),e},e.interpolator=function(n){return arguments.length?(t=n,e):t},e.copy=function(){return by(t).domain(n)},Md.apply(e,arguments)}function _y(){var n,t,e,r,i,u,o,a=0,c=.5,f=1,s=Rd,l=!1;function h(n){return isNaN(n=+n)?o:(n=.5+((n=+u(n))-t)*(n<t?r:i),s(l?Math.max(0,Math.min(1,n)):n))}return h.domain=function(o){return arguments.length?(n=u(a=+o[0]),t=u(c=+o[1]),e=u(f=+o[2]),r=n===t?0:.5/(t-n),i=t===e?0:.5/(e-t),h):[a,c,f]},h.clamp=function(n){return arguments.length?(l=!!n,h):l},h.interpolator=function(n){return arguments.length?(s=n,h):s},h.unknown=function(n){return arguments.length?(o=n,h):o},function(o){return u=o,n=o(a),t=o(c),e=o(f),r=n===t?0:.5/(t-n),i=t===e?0:.5/(e-t),h}}function my(){var n=Id(_y()(Rd));return n.copy=function(){return hy(n,my())},Md.apply(n,arguments)}function xy(){var n=Kd(_y()).domain([.1,1,10]);return n.copy=function(){return hy(n,xy()).base(n.base())},Md.apply(n,arguments)}function wy(){var n=rp(_y());return n.copy=function(){return hy(n,wy()).constant(n.constant())},Md.apply(n,arguments)}function My(){var n=cp(_y());return n.copy=function(){return hy(n,My()).exponent(n.exponent())},Md.apply(n,arguments)}function Ny(){return My.apply(null,arguments).exponent(.5)}var Ay=function(n){for(var t=n.length/6|0,e=new Array(t),r=0;r<t;)e[r]=\"#\"+n.slice(6*r,6*++r);return e},Ty=Ay(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\"),Sy=Ay(\"7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666\"),ky=Ay(\"1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666\"),Ey=Ay(\"a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928\"),Cy=Ay(\"fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2\"),Py=Ay(\"b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc\"),zy=Ay(\"e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999\"),Oy=Ay(\"66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3\"),Ry=Ay(\"8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f\"),Dy=function(n){return qt(n[n.length-1])},Ly=new Array(3).concat(\"d8b365f5f5f55ab4ac\",\"a6611adfc27d80cdc1018571\",\"a6611adfc27df5f5f580cdc1018571\",\"8c510ad8b365f6e8c3c7eae55ab4ac01665e\",\"8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e\",\"8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e\",\"8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e\",\"5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30\",\"5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30\").map(Ay),qy=Dy(Ly),Uy=new Array(3).concat(\"af8dc3f7f7f77fbf7b\",\"7b3294c2a5cfa6dba0008837\",\"7b3294c2a5cff7f7f7a6dba0008837\",\"762a83af8dc3e7d4e8d9f0d37fbf7b1b7837\",\"762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837\",\"762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837\",\"762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837\",\"40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b\",\"40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b\").map(Ay),jy=Dy(Uy),By=new Array(3).concat(\"e9a3c9f7f7f7a1d76a\",\"d01c8bf1b6dab8e1864dac26\",\"d01c8bf1b6daf7f7f7b8e1864dac26\",\"c51b7de9a3c9fde0efe6f5d0a1d76a4d9221\",\"c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221\",\"c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221\",\"c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221\",\"8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419\",\"8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419\").map(Ay),Yy=Dy(By),Fy=new Array(3).concat(\"998ec3f7f7f7f1a340\",\"5e3c99b2abd2fdb863e66101\",\"5e3c99b2abd2f7f7f7fdb863e66101\",\"542788998ec3d8daebfee0b6f1a340b35806\",\"542788998ec3d8daebf7f7f7fee0b6f1a340b35806\",\"5427888073acb2abd2d8daebfee0b6fdb863e08214b35806\",\"5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806\",\"2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08\",\"2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08\").map(Ay),Iy=Dy(Fy),Hy=new Array(3).concat(\"ef8a62f7f7f767a9cf\",\"ca0020f4a58292c5de0571b0\",\"ca0020f4a582f7f7f792c5de0571b0\",\"b2182bef8a62fddbc7d1e5f067a9cf2166ac\",\"b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac\",\"b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac\",\"b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac\",\"67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061\",\"67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061\").map(Ay),Xy=Dy(Hy),Gy=new Array(3).concat(\"ef8a62ffffff999999\",\"ca0020f4a582bababa404040\",\"ca0020f4a582ffffffbababa404040\",\"b2182bef8a62fddbc7e0e0e09999994d4d4d\",\"b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d\",\"b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d\",\"b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d\",\"67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a\",\"67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a\").map(Ay),Vy=Dy(Gy),$y=new Array(3).concat(\"fc8d59ffffbf91bfdb\",\"d7191cfdae61abd9e92c7bb6\",\"d7191cfdae61ffffbfabd9e92c7bb6\",\"d73027fc8d59fee090e0f3f891bfdb4575b4\",\"d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4\",\"d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4\",\"d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4\",\"a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695\",\"a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695\").map(Ay),Wy=Dy($y),Zy=new Array(3).concat(\"fc8d59ffffbf91cf60\",\"d7191cfdae61a6d96a1a9641\",\"d7191cfdae61ffffbfa6d96a1a9641\",\"d73027fc8d59fee08bd9ef8b91cf601a9850\",\"d73027fc8d59fee08bffffbfd9ef8b91cf601a9850\",\"d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850\",\"d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850\",\"a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837\",\"a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837\").map(Ay),Qy=Dy(Zy),Jy=new Array(3).concat(\"fc8d59ffffbf99d594\",\"d7191cfdae61abdda42b83ba\",\"d7191cfdae61ffffbfabdda42b83ba\",\"d53e4ffc8d59fee08be6f59899d5943288bd\",\"d53e4ffc8d59fee08bffffbfe6f59899d5943288bd\",\"d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd\",\"d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd\",\"9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2\",\"9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2\").map(Ay),Ky=Dy(Jy),nb=new Array(3).concat(\"e5f5f999d8c92ca25f\",\"edf8fbb2e2e266c2a4238b45\",\"edf8fbb2e2e266c2a42ca25f006d2c\",\"edf8fbccece699d8c966c2a42ca25f006d2c\",\"edf8fbccece699d8c966c2a441ae76238b45005824\",\"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824\",\"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b\").map(Ay),tb=Dy(nb),eb=new Array(3).concat(\"e0ecf49ebcda8856a7\",\"edf8fbb3cde38c96c688419d\",\"edf8fbb3cde38c96c68856a7810f7c\",\"edf8fbbfd3e69ebcda8c96c68856a7810f7c\",\"edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b\",\"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b\",\"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b\").map(Ay),rb=Dy(eb),ib=new Array(3).concat(\"e0f3dba8ddb543a2ca\",\"f0f9e8bae4bc7bccc42b8cbe\",\"f0f9e8bae4bc7bccc443a2ca0868ac\",\"f0f9e8ccebc5a8ddb57bccc443a2ca0868ac\",\"f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081\").map(Ay),ub=Dy(ib),ob=new Array(3).concat(\"fee8c8fdbb84e34a33\",\"fef0d9fdcc8afc8d59d7301f\",\"fef0d9fdcc8afc8d59e34a33b30000\",\"fef0d9fdd49efdbb84fc8d59e34a33b30000\",\"fef0d9fdd49efdbb84fc8d59ef6548d7301f990000\",\"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000\",\"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000\").map(Ay),ab=Dy(ob),cb=new Array(3).concat(\"ece2f0a6bddb1c9099\",\"f6eff7bdc9e167a9cf02818a\",\"f6eff7bdc9e167a9cf1c9099016c59\",\"f6eff7d0d1e6a6bddb67a9cf1c9099016c59\",\"f6eff7d0d1e6a6bddb67a9cf3690c002818a016450\",\"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450\",\"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636\").map(Ay),fb=Dy(cb),sb=new Array(3).concat(\"ece7f2a6bddb2b8cbe\",\"f1eef6bdc9e174a9cf0570b0\",\"f1eef6bdc9e174a9cf2b8cbe045a8d\",\"f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d\",\"f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858\").map(Ay),lb=Dy(sb),hb=new Array(3).concat(\"e7e1efc994c7dd1c77\",\"f1eef6d7b5d8df65b0ce1256\",\"f1eef6d7b5d8df65b0dd1c77980043\",\"f1eef6d4b9dac994c7df65b0dd1c77980043\",\"f1eef6d4b9dac994c7df65b0e7298ace125691003f\",\"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f\",\"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f\").map(Ay),db=Dy(hb),pb=new Array(3).concat(\"fde0ddfa9fb5c51b8a\",\"feebe2fbb4b9f768a1ae017e\",\"feebe2fbb4b9f768a1c51b8a7a0177\",\"feebe2fcc5c0fa9fb5f768a1c51b8a7a0177\",\"feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a\").map(Ay),vb=Dy(pb),gb=new Array(3).concat(\"edf8b17fcdbb2c7fb8\",\"ffffcca1dab441b6c4225ea8\",\"ffffcca1dab441b6c42c7fb8253494\",\"ffffccc7e9b47fcdbb41b6c42c7fb8253494\",\"ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58\").map(Ay),yb=Dy(gb),bb=new Array(3).concat(\"f7fcb9addd8e31a354\",\"ffffccc2e69978c679238443\",\"ffffccc2e69978c67931a354006837\",\"ffffccd9f0a3addd8e78c67931a354006837\",\"ffffccd9f0a3addd8e78c67941ab5d238443005a32\",\"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32\",\"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529\").map(Ay),_b=Dy(bb),mb=new Array(3).concat(\"fff7bcfec44fd95f0e\",\"ffffd4fed98efe9929cc4c02\",\"ffffd4fed98efe9929d95f0e993404\",\"ffffd4fee391fec44ffe9929d95f0e993404\",\"ffffd4fee391fec44ffe9929ec7014cc4c028c2d04\",\"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04\",\"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506\").map(Ay),xb=Dy(mb),wb=new Array(3).concat(\"ffeda0feb24cf03b20\",\"ffffb2fecc5cfd8d3ce31a1c\",\"ffffb2fecc5cfd8d3cf03b20bd0026\",\"ffffb2fed976feb24cfd8d3cf03b20bd0026\",\"ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026\").map(Ay),Mb=Dy(wb),Nb=new Array(3).concat(\"deebf79ecae13182bd\",\"eff3ffbdd7e76baed62171b5\",\"eff3ffbdd7e76baed63182bd08519c\",\"eff3ffc6dbef9ecae16baed63182bd08519c\",\"eff3ffc6dbef9ecae16baed64292c62171b5084594\",\"f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594\",\"f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b\").map(Ay),Ab=Dy(Nb),Tb=new Array(3).concat(\"e5f5e0a1d99b31a354\",\"edf8e9bae4b374c476238b45\",\"edf8e9bae4b374c47631a354006d2c\",\"edf8e9c7e9c0a1d99b74c47631a354006d2c\",\"edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32\",\"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32\",\"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b\").map(Ay),Sb=Dy(Tb),kb=new Array(3).concat(\"f0f0f0bdbdbd636363\",\"f7f7f7cccccc969696525252\",\"f7f7f7cccccc969696636363252525\",\"f7f7f7d9d9d9bdbdbd969696636363252525\",\"f7f7f7d9d9d9bdbdbd969696737373525252252525\",\"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525\",\"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000\").map(Ay),Eb=Dy(kb),Cb=new Array(3).concat(\"efedf5bcbddc756bb1\",\"f2f0f7cbc9e29e9ac86a51a3\",\"f2f0f7cbc9e29e9ac8756bb154278f\",\"f2f0f7dadaebbcbddc9e9ac8756bb154278f\",\"f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486\",\"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486\",\"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d\").map(Ay),Pb=Dy(Cb),zb=new Array(3).concat(\"fee0d2fc9272de2d26\",\"fee5d9fcae91fb6a4acb181d\",\"fee5d9fcae91fb6a4ade2d26a50f15\",\"fee5d9fcbba1fc9272fb6a4ade2d26a50f15\",\"fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d\").map(Ay),Ob=Dy(zb),Rb=new Array(3).concat(\"fee6cefdae6be6550d\",\"feeddefdbe85fd8d3cd94701\",\"feeddefdbe85fd8d3ce6550da63603\",\"feeddefdd0a2fdae6bfd8d3ce6550da63603\",\"feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704\").map(Ay),Db=Dy(Rb),Lb=be(At(300,.5,0),At(-240,.5,1)),qb=be(At(-100,.75,.35),At(80,1.5,.8)),Ub=be(At(260,.75,.35),At(80,1.5,.8)),jb=At(),Bb=function(n){(n<0||n>1)&&(n-=Math.floor(n));var t=Math.abs(n-.5);return jb.h=360*n-100,jb.s=1.5-1.5*t,jb.l=.8-.9*t,jb+\"\"},Yb=Xn(),Fb=Math.PI/3,Ib=2*Math.PI/3,Hb=function(n){var t;return n=(.5-n)*Math.PI,Yb.r=255*(t=Math.sin(n))*t,Yb.g=255*(t=Math.sin(n+Fb))*t,Yb.b=255*(t=Math.sin(n+Ib))*t,Yb+\"\"};function Xb(n){var t=n.length;return function(e){return n[Math.max(0,Math.min(t-1,Math.floor(e*t)))]}}var Gb=Xb(Ay(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\")),Vb=Xb(Ay(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\")),$b=Xb(Ay(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\")),Wb=Xb(Ay(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\")),Zb=function(n){return function(){return n}},Qb=Math.abs,Jb=Math.atan2,Kb=Math.cos,n_=Math.max,t_=Math.min,e_=Math.sin,r_=Math.sqrt,i_=1e-12,u_=Math.PI,o_=u_/2,a_=2*u_;function c_(n){return n>=1?o_:n<=-1?-o_:Math.asin(n)}function f_(n){return n.innerRadius}function s_(n){return n.outerRadius}function l_(n){return n.startAngle}function h_(n){return n.endAngle}function d_(n){return n&&n.padAngle}function p_(n,t,e,r,i,u,o){var a=n-e,c=t-r,f=(o?u:-u)/r_(a*a+c*c),s=f*c,l=-f*a,h=n+s,d=t+l,p=e+s,v=r+l,g=(h+p)/2,y=(d+v)/2,b=p-h,_=v-d,m=b*b+_*_,x=i-u,w=h*v-p*d,M=(_<0?-1:1)*r_(n_(0,x*x*m-w*w)),N=(w*_-b*M)/m,A=(-w*b-_*M)/m,T=(w*_+b*M)/m,S=(-w*b+_*M)/m,k=N-g,E=A-y,C=T-g,P=S-y;return k*k+E*E>C*C+P*P&&(N=T,A=S),{cx:N,cy:A,x01:-s,y01:-l,x11:N*(i/x-1),y11:A*(i/x-1)}}var v_=function(){var n=f_,t=s_,e=Zb(0),r=null,i=l_,u=h_,o=d_,a=null;function c(){var c,f,s,l=+n.apply(this,arguments),h=+t.apply(this,arguments),d=i.apply(this,arguments)-o_,p=u.apply(this,arguments)-o_,v=Qb(p-d),g=p>d;if(a||(a=c=Fi()),h<l&&(f=h,h=l,l=f),h>i_)if(v>a_-i_)a.moveTo(h*Kb(d),h*e_(d)),a.arc(0,0,h,d,p,!g),l>i_&&(a.moveTo(l*Kb(p),l*e_(p)),a.arc(0,0,l,p,d,g));else{var y,b,_=d,m=p,x=d,w=p,M=v,N=v,A=o.apply(this,arguments)/2,T=A>i_&&(r?+r.apply(this,arguments):r_(l*l+h*h)),S=t_(Qb(h-l)/2,+e.apply(this,arguments)),k=S,E=S;if(T>i_){var C=c_(T/l*e_(A)),P=c_(T/h*e_(A));(M-=2*C)>i_?(x+=C*=g?1:-1,w-=C):(M=0,x=w=(d+p)/2),(N-=2*P)>i_?(_+=P*=g?1:-1,m-=P):(N=0,_=m=(d+p)/2)}var z=h*Kb(_),O=h*e_(_),R=l*Kb(w),D=l*e_(w);if(S>i_){var L,q=h*Kb(m),U=h*e_(m),j=l*Kb(x),B=l*e_(x);if(v<u_&&(L=function(n,t,e,r,i,u,o,a){var c=e-n,f=r-t,s=o-i,l=a-u,h=l*c-s*f;if(!(h*h<i_))return[n+(h=(s*(t-u)-l*(n-i))/h)*c,t+h*f]}(z,O,j,B,q,U,R,D))){var Y=z-L[0],F=O-L[1],I=q-L[0],H=U-L[1],X=1/e_(((s=(Y*I+F*H)/(r_(Y*Y+F*F)*r_(I*I+H*H)))>1?0:s<-1?u_:Math.acos(s))/2),G=r_(L[0]*L[0]+L[1]*L[1]);k=t_(S,(l-G)/(X-1)),E=t_(S,(h-G)/(X+1))}}N>i_?E>i_?(y=p_(j,B,z,O,h,E,g),b=p_(q,U,R,D,h,E,g),a.moveTo(y.cx+y.x01,y.cy+y.y01),E<S?a.arc(y.cx,y.cy,E,Jb(y.y01,y.x01),Jb(b.y01,b.x01),!g):(a.arc(y.cx,y.cy,E,Jb(y.y01,y.x01),Jb(y.y11,y.x11),!g),a.arc(0,0,h,Jb(y.cy+y.y11,y.cx+y.x11),Jb(b.cy+b.y11,b.cx+b.x11),!g),a.arc(b.cx,b.cy,E,Jb(b.y11,b.x11),Jb(b.y01,b.x01),!g))):(a.moveTo(z,O),a.arc(0,0,h,_,m,!g)):a.moveTo(z,O),l>i_&&M>i_?k>i_?(y=p_(R,D,q,U,l,-k,g),b=p_(z,O,j,B,l,-k,g),a.lineTo(y.cx+y.x01,y.cy+y.y01),k<S?a.arc(y.cx,y.cy,k,Jb(y.y01,y.x01),Jb(b.y01,b.x01),!g):(a.arc(y.cx,y.cy,k,Jb(y.y01,y.x01),Jb(y.y11,y.x11),!g),a.arc(0,0,l,Jb(y.cy+y.y11,y.cx+y.x11),Jb(b.cy+b.y11,b.cx+b.x11),g),a.arc(b.cx,b.cy,k,Jb(b.y11,b.x11),Jb(b.y01,b.x01),!g))):a.arc(0,0,l,w,x,g):a.lineTo(R,D)}else a.moveTo(0,0);if(a.closePath(),c)return a=null,c+\"\"||null}return c.centroid=function(){var e=(+n.apply(this,arguments)+ +t.apply(this,arguments))/2,r=(+i.apply(this,arguments)+ +u.apply(this,arguments))/2-u_/2;return[Kb(r)*e,e_(r)*e]},c.innerRadius=function(t){return arguments.length?(n=\"function\"==typeof t?t:Zb(+t),c):n},c.outerRadius=function(n){return arguments.length?(t=\"function\"==typeof n?n:Zb(+n),c):t},c.cornerRadius=function(n){return arguments.length?(e=\"function\"==typeof n?n:Zb(+n),c):e},c.padRadius=function(n){return arguments.length?(r=null==n?null:\"function\"==typeof n?n:Zb(+n),c):r},c.startAngle=function(n){return arguments.length?(i=\"function\"==typeof n?n:Zb(+n),c):i},c.endAngle=function(n){return arguments.length?(u=\"function\"==typeof n?n:Zb(+n),c):u},c.padAngle=function(n){return arguments.length?(o=\"function\"==typeof n?n:Zb(+n),c):o},c.context=function(n){return arguments.length?(a=null==n?null:n,c):a},c};function g_(n){this._context=n}g_.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._point=0},lineEnd:function(){(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(n,t){switch(n=+n,t=+t,this._point){case 0:this._point=1,this._line?this._context.lineTo(n,t):this._context.moveTo(n,t);break;case 1:this._point=2;default:this._context.lineTo(n,t)}}};var y_=function(n){return new g_(n)};function b_(n){return n[0]}function __(n){return n[1]}var m_=function(){var n=b_,t=__,e=Zb(!0),r=null,i=y_,u=null;function o(o){var a,c,f,s=o.length,l=!1;for(null==r&&(u=i(f=Fi())),a=0;a<=s;++a)!(a<s&&e(c=o[a],a,o))===l&&((l=!l)?u.lineStart():u.lineEnd()),l&&u.point(+n(c,a,o),+t(c,a,o));if(f)return u=null,f+\"\"||null}return o.x=function(t){return arguments.length?(n=\"function\"==typeof t?t:Zb(+t),o):n},o.y=function(n){return arguments.length?(t=\"function\"==typeof n?n:Zb(+n),o):t},o.defined=function(n){return arguments.length?(e=\"function\"==typeof n?n:Zb(!!n),o):e},o.curve=function(n){return arguments.length?(i=n,null!=r&&(u=i(r)),o):i},o.context=function(n){return arguments.length?(null==n?r=u=null:u=i(r=n),o):r},o},x_=function(){var n=b_,t=null,e=Zb(0),r=__,i=Zb(!0),u=null,o=y_,a=null;function c(c){var f,s,l,h,d,p=c.length,v=!1,g=new Array(p),y=new Array(p);for(null==u&&(a=o(d=Fi())),f=0;f<=p;++f){if(!(f<p&&i(h=c[f],f,c))===v)if(v=!v)s=f,a.areaStart(),a.lineStart();else{for(a.lineEnd(),a.lineStart(),l=f-1;l>=s;--l)a.point(g[l],y[l]);a.lineEnd(),a.areaEnd()}v&&(g[f]=+n(h,f,c),y[f]=+e(h,f,c),a.point(t?+t(h,f,c):g[f],r?+r(h,f,c):y[f]))}if(d)return a=null,d+\"\"||null}function f(){return m_().defined(i).curve(o).context(u)}return c.x=function(e){return arguments.length?(n=\"function\"==typeof e?e:Zb(+e),t=null,c):n},c.x0=function(t){return arguments.length?(n=\"function\"==typeof t?t:Zb(+t),c):n},c.x1=function(n){return arguments.length?(t=null==n?null:\"function\"==typeof n?n:Zb(+n),c):t},c.y=function(n){return arguments.length?(e=\"function\"==typeof n?n:Zb(+n),r=null,c):e},c.y0=function(n){return arguments.length?(e=\"function\"==typeof n?n:Zb(+n),c):e},c.y1=function(n){return arguments.length?(r=null==n?null:\"function\"==typeof n?n:Zb(+n),c):r},c.lineX0=c.lineY0=function(){return f().x(n).y(e)},c.lineY1=function(){return f().x(n).y(r)},c.lineX1=function(){return f().x(t).y(e)},c.defined=function(n){return arguments.length?(i=\"function\"==typeof n?n:Zb(!!n),c):i},c.curve=function(n){return arguments.length?(o=n,null!=u&&(a=o(u)),c):o},c.context=function(n){return arguments.length?(null==n?u=a=null:a=o(u=n),c):u},c},w_=function(n,t){return t<n?-1:t>n?1:t>=n?0:NaN},M_=function(n){return n},N_=function(){var n=M_,t=w_,e=null,r=Zb(0),i=Zb(a_),u=Zb(0);function o(o){var a,c,f,s,l,h=o.length,d=0,p=new Array(h),v=new Array(h),g=+r.apply(this,arguments),y=Math.min(a_,Math.max(-a_,i.apply(this,arguments)-g)),b=Math.min(Math.abs(y)/h,u.apply(this,arguments)),_=b*(y<0?-1:1);for(a=0;a<h;++a)(l=v[p[a]=a]=+n(o[a],a,o))>0&&(d+=l);for(null!=t?p.sort(function(n,e){return t(v[n],v[e])}):null!=e&&p.sort(function(n,t){return e(o[n],o[t])}),a=0,f=d?(y-h*_)/d:0;a<h;++a,g=s)c=p[a],s=g+((l=v[c])>0?l*f:0)+_,v[c]={data:o[c],index:a,value:l,startAngle:g,endAngle:s,padAngle:b};return v}return o.value=function(t){return arguments.length?(n=\"function\"==typeof t?t:Zb(+t),o):n},o.sortValues=function(n){return arguments.length?(t=n,e=null,o):t},o.sort=function(n){return arguments.length?(e=n,t=null,o):e},o.startAngle=function(n){return arguments.length?(r=\"function\"==typeof n?n:Zb(+n),o):r},o.endAngle=function(n){return arguments.length?(i=\"function\"==typeof n?n:Zb(+n),o):i},o.padAngle=function(n){return arguments.length?(u=\"function\"==typeof n?n:Zb(+n),o):u},o},A_=S_(y_);function T_(n){this._curve=n}function S_(n){function t(t){return new T_(n(t))}return t._curve=n,t}function k_(n){var t=n.curve;return n.angle=n.x,delete n.x,n.radius=n.y,delete n.y,n.curve=function(n){return arguments.length?t(S_(n)):t()._curve},n}T_.prototype={areaStart:function(){this._curve.areaStart()},areaEnd:function(){this._curve.areaEnd()},lineStart:function(){this._curve.lineStart()},lineEnd:function(){this._curve.lineEnd()},point:function(n,t){this._curve.point(t*Math.sin(n),t*-Math.cos(n))}};var E_=function(){return k_(m_().curve(A_))},C_=function(){var n=x_().curve(A_),t=n.curve,e=n.lineX0,r=n.lineX1,i=n.lineY0,u=n.lineY1;return n.angle=n.x,delete n.x,n.startAngle=n.x0,delete n.x0,n.endAngle=n.x1,delete n.x1,n.radius=n.y,delete n.y,n.innerRadius=n.y0,delete n.y0,n.outerRadius=n.y1,delete n.y1,n.lineStartAngle=function(){return k_(e())},delete n.lineX0,n.lineEndAngle=function(){return k_(r())},delete n.lineX1,n.lineInnerRadius=function(){return k_(i())},delete n.lineY0,n.lineOuterRadius=function(){return k_(u())},delete n.lineY1,n.curve=function(n){return arguments.length?t(S_(n)):t()._curve},n},P_=function(n,t){return[(t=+t)*Math.cos(n-=Math.PI/2),t*Math.sin(n)]},z_=Array.prototype.slice;function O_(n){return n.source}function R_(n){return n.target}function D_(n){var t=O_,e=R_,r=b_,i=__,u=null;function o(){var o,a=z_.call(arguments),c=t.apply(this,a),f=e.apply(this,a);if(u||(u=o=Fi()),n(u,+r.apply(this,(a[0]=c,a)),+i.apply(this,a),+r.apply(this,(a[0]=f,a)),+i.apply(this,a)),o)return u=null,o+\"\"||null}return o.source=function(n){return arguments.length?(t=n,o):t},o.target=function(n){return arguments.length?(e=n,o):e},o.x=function(n){return arguments.length?(r=\"function\"==typeof n?n:Zb(+n),o):r},o.y=function(n){return arguments.length?(i=\"function\"==typeof n?n:Zb(+n),o):i},o.context=function(n){return arguments.length?(u=null==n?null:n,o):u},o}function L_(n,t,e,r,i){n.moveTo(t,e),n.bezierCurveTo(t=(t+r)/2,e,t,i,r,i)}function q_(n,t,e,r,i){n.moveTo(t,e),n.bezierCurveTo(t,e=(e+i)/2,r,e,r,i)}function U_(n,t,e,r,i){var u=P_(t,e),o=P_(t,e=(e+i)/2),a=P_(r,e),c=P_(r,i);n.moveTo(u[0],u[1]),n.bezierCurveTo(o[0],o[1],a[0],a[1],c[0],c[1])}function j_(){return D_(L_)}function B_(){return D_(q_)}function Y_(){var n=D_(U_);return n.angle=n.x,delete n.x,n.radius=n.y,delete n.y,n}var F_={draw:function(n,t){var e=Math.sqrt(t/u_);n.moveTo(e,0),n.arc(0,0,e,0,a_)}},I_={draw:function(n,t){var e=Math.sqrt(t/5)/2;n.moveTo(-3*e,-e),n.lineTo(-e,-e),n.lineTo(-e,-3*e),n.lineTo(e,-3*e),n.lineTo(e,-e),n.lineTo(3*e,-e),n.lineTo(3*e,e),n.lineTo(e,e),n.lineTo(e,3*e),n.lineTo(-e,3*e),n.lineTo(-e,e),n.lineTo(-3*e,e),n.closePath()}},H_=Math.sqrt(1/3),X_=2*H_,G_={draw:function(n,t){var e=Math.sqrt(t/X_),r=e*H_;n.moveTo(0,-e),n.lineTo(r,0),n.lineTo(0,e),n.lineTo(-r,0),n.closePath()}},V_=Math.sin(u_/10)/Math.sin(7*u_/10),$_=Math.sin(a_/10)*V_,W_=-Math.cos(a_/10)*V_,Z_={draw:function(n,t){var e=Math.sqrt(.8908130915292852*t),r=$_*e,i=W_*e;n.moveTo(0,-e),n.lineTo(r,i);for(var u=1;u<5;++u){var o=a_*u/5,a=Math.cos(o),c=Math.sin(o);n.lineTo(c*e,-a*e),n.lineTo(a*r-c*i,c*r+a*i)}n.closePath()}},Q_={draw:function(n,t){var e=Math.sqrt(t),r=-e/2;n.rect(r,r,e,e)}},J_=Math.sqrt(3),K_={draw:function(n,t){var e=-Math.sqrt(t/(3*J_));n.moveTo(0,2*e),n.lineTo(-J_*e,-e),n.lineTo(J_*e,-e),n.closePath()}},nm=Math.sqrt(3)/2,tm=1/Math.sqrt(12),em=3*(tm/2+1),rm={draw:function(n,t){var e=Math.sqrt(t/em),r=e/2,i=e*tm,u=r,o=e*tm+e,a=-u,c=o;n.moveTo(r,i),n.lineTo(u,o),n.lineTo(a,c),n.lineTo(-.5*r-nm*i,nm*r+-.5*i),n.lineTo(-.5*u-nm*o,nm*u+-.5*o),n.lineTo(-.5*a-nm*c,nm*a+-.5*c),n.lineTo(-.5*r+nm*i,-.5*i-nm*r),n.lineTo(-.5*u+nm*o,-.5*o-nm*u),n.lineTo(-.5*a+nm*c,-.5*c-nm*a),n.closePath()}},im=[F_,I_,G_,Q_,Z_,K_,rm],um=function(){var n=Zb(F_),t=Zb(64),e=null;function r(){var r;if(e||(e=r=Fi()),n.apply(this,arguments).draw(e,+t.apply(this,arguments)),r)return e=null,r+\"\"||null}return r.type=function(t){return arguments.length?(n=\"function\"==typeof t?t:Zb(t),r):n},r.size=function(n){return arguments.length?(t=\"function\"==typeof n?n:Zb(+n),r):t},r.context=function(n){return arguments.length?(e=null==n?null:n,r):e},r},om=function(){};function am(n,t,e){n._context.bezierCurveTo((2*n._x0+n._x1)/3,(2*n._y0+n._y1)/3,(n._x0+2*n._x1)/3,(n._y0+2*n._y1)/3,(n._x0+4*n._x1+t)/6,(n._y0+4*n._y1+e)/6)}function cm(n){this._context=n}cm.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._y0=this._y1=NaN,this._point=0},lineEnd:function(){switch(this._point){case 3:am(this,this._x1,this._y1);case 2:this._context.lineTo(this._x1,this._y1)}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(n,t){switch(n=+n,t=+t,this._point){case 0:this._point=1,this._line?this._context.lineTo(n,t):this._context.moveTo(n,t);break;case 1:this._point=2;break;case 2:this._point=3,this._context.lineTo((5*this._x0+this._x1)/6,(5*this._y0+this._y1)/6);default:am(this,n,t)}this._x0=this._x1,this._x1=n,this._y0=this._y1,this._y1=t}};var fm=function(n){return new cm(n)};function sm(n){this._context=n}sm.prototype={areaStart:om,areaEnd:om,lineStart:function(){this._x0=this._x1=this._x2=this._x3=this._x4=this._y0=this._y1=this._y2=this._y3=this._y4=NaN,this._point=0},lineEnd:function(){switch(this._point){case 1:this._context.moveTo(this._x2,this._y2),this._context.closePath();break;case 2:this._context.moveTo((this._x2+2*this._x3)/3,(this._y2+2*this._y3)/3),this._context.lineTo((this._x3+2*this._x2)/3,(this._y3+2*this._y2)/3),this._context.closePath();break;case 3:this.point(this._x2,this._y2),this.point(this._x3,this._y3),this.point(this._x4,this._y4)}},point:function(n,t){switch(n=+n,t=+t,this._point){case 0:this._point=1,this._x2=n,this._y2=t;break;case 1:this._point=2,this._x3=n,this._y3=t;break;case 2:this._point=3,this._x4=n,this._y4=t,this._context.moveTo((this._x0+4*this._x1+n)/6,(this._y0+4*this._y1+t)/6);break;default:am(this,n,t)}this._x0=this._x1,this._x1=n,this._y0=this._y1,this._y1=t}};var lm=function(n){return new sm(n)};function hm(n){this._context=n}hm.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._y0=this._y1=NaN,this._point=0},lineEnd:function(){(this._line||0!==this._line&&3===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(n,t){switch(n=+n,t=+t,this._point){case 0:this._point=1;break;case 1:this._point=2;break;case 2:this._point=3;var e=(this._x0+4*this._x1+n)/6,r=(this._y0+4*this._y1+t)/6;this._line?this._context.lineTo(e,r):this._context.moveTo(e,r);break;case 3:this._point=4;default:am(this,n,t)}this._x0=this._x1,this._x1=n,this._y0=this._y1,this._y1=t}};var dm=function(n){return new hm(n)};function pm(n,t){this._basis=new cm(n),this._beta=t}pm.prototype={lineStart:function(){this._x=[],this._y=[],this._basis.lineStart()},lineEnd:function(){var n=this._x,t=this._y,e=n.length-1;if(e>0)for(var r,i=n[0],u=t[0],o=n[e]-i,a=t[e]-u,c=-1;++c<=e;)r=c/e,this._basis.point(this._beta*n[c]+(1-this._beta)*(i+r*o),this._beta*t[c]+(1-this._beta)*(u+r*a));this._x=this._y=null,this._basis.lineEnd()},point:function(n,t){this._x.push(+n),this._y.push(+t)}};var vm=function n(t){function e(n){return 1===t?new cm(n):new pm(n,t)}return e.beta=function(t){return n(+t)},e}(.85);function gm(n,t,e){n._context.bezierCurveTo(n._x1+n._k*(n._x2-n._x0),n._y1+n._k*(n._y2-n._y0),n._x2+n._k*(n._x1-t),n._y2+n._k*(n._y1-e),n._x2,n._y2)}function ym(n,t){this._context=n,this._k=(1-t)/6}ym.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._point=0},lineEnd:function(){switch(this._point){case 2:this._context.lineTo(this._x2,this._y2);break;case 3:gm(this,this._x1,this._y1)}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(n,t){switch(n=+n,t=+t,this._point){case 0:this._point=1,this._line?this._context.lineTo(n,t):this._context.moveTo(n,t);break;case 1:this._point=2,this._x1=n,this._y1=t;break;case 2:this._point=3;default:gm(this,n,t)}this._x0=this._x1,this._x1=this._x2,this._x2=n,this._y0=this._y1,this._y1=this._y2,this._y2=t}};var bm=function n(t){function e(n){return new ym(n,t)}return e.tension=function(t){return n(+t)},e}(0);function _m(n,t){this._context=n,this._k=(1-t)/6}_m.prototype={areaStart:om,areaEnd:om,lineStart:function(){this._x0=this._x1=this._x2=this._x3=this._x4=this._x5=this._y0=this._y1=this._y2=this._y3=this._y4=this._y5=NaN,this._point=0},lineEnd:function(){switch(this._point){case 1:this._context.moveTo(this._x3,this._y3),this._context.closePath();break;case 2:this._context.lineTo(this._x3,this._y3),this._context.closePath();break;case 3:this.point(this._x3,this._y3),this.point(this._x4,this._y4),this.point(this._x5,this._y5)}},point:function(n,t){switch(n=+n,t=+t,this._point){case 0:this._point=1,this._x3=n,this._y3=t;break;case 1:this._point=2,this._context.moveTo(this._x4=n,this._y4=t);break;case 2:this._point=3,this._x5=n,this._y5=t;break;default:gm(this,n,t)}this._x0=this._x1,this._x1=this._x2,this._x2=n,this._y0=this._y1,this._y1=this._y2,this._y2=t}};var mm=function n(t){function e(n){return new _m(n,t)}return e.tension=function(t){return n(+t)},e}(0);function xm(n,t){this._context=n,this._k=(1-t)/6}xm.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._point=0},lineEnd:function(){(this._line||0!==this._line&&3===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(n,t){switch(n=+n,t=+t,this._point){case 0:this._point=1;break;case 1:this._point=2;break;case 2:this._point=3,this._line?this._context.lineTo(this._x2,this._y2):this._context.moveTo(this._x2,this._y2);break;case 3:this._point=4;default:gm(this,n,t)}this._x0=this._x1,this._x1=this._x2,this._x2=n,this._y0=this._y1,this._y1=this._y2,this._y2=t}};var wm=function n(t){function e(n){return new xm(n,t)}return e.tension=function(t){return n(+t)},e}(0);function Mm(n,t,e){var r=n._x1,i=n._y1,u=n._x2,o=n._y2;if(n._l01_a>i_){var a=2*n._l01_2a+3*n._l01_a*n._l12_a+n._l12_2a,c=3*n._l01_a*(n._l01_a+n._l12_a);r=(r*a-n._x0*n._l12_2a+n._x2*n._l01_2a)/c,i=(i*a-n._y0*n._l12_2a+n._y2*n._l01_2a)/c}if(n._l23_a>i_){var f=2*n._l23_2a+3*n._l23_a*n._l12_a+n._l12_2a,s=3*n._l23_a*(n._l23_a+n._l12_a);u=(u*f+n._x1*n._l23_2a-t*n._l12_2a)/s,o=(o*f+n._y1*n._l23_2a-e*n._l12_2a)/s}n._context.bezierCurveTo(r,i,u,o,n._x2,n._y2)}function Nm(n,t){this._context=n,this._alpha=t}Nm.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._l01_a=this._l12_a=this._l23_a=this._l01_2a=this._l12_2a=this._l23_2a=this._point=0},lineEnd:function(){switch(this._point){case 2:this._context.lineTo(this._x2,this._y2);break;case 3:this.point(this._x2,this._y2)}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(n,t){if(n=+n,t=+t,this._point){var e=this._x2-n,r=this._y2-t;this._l23_a=Math.sqrt(this._l23_2a=Math.pow(e*e+r*r,this._alpha))}switch(this._point){case 0:this._point=1,this._line?this._context.lineTo(n,t):this._context.moveTo(n,t);break;case 1:this._point=2;break;case 2:this._point=3;default:Mm(this,n,t)}this._l01_a=this._l12_a,this._l12_a=this._l23_a,this._l01_2a=this._l12_2a,this._l12_2a=this._l23_2a,this._x0=this._x1,this._x1=this._x2,this._x2=n,this._y0=this._y1,this._y1=this._y2,this._y2=t}};var Am=function n(t){function e(n){return t?new Nm(n,t):new ym(n,0)}return e.alpha=function(t){return n(+t)},e}(.5);function Tm(n,t){this._context=n,this._alpha=t}Tm.prototype={areaStart:om,areaEnd:om,lineStart:function(){this._x0=this._x1=this._x2=this._x3=this._x4=this._x5=this._y0=this._y1=this._y2=this._y3=this._y4=this._y5=NaN,this._l01_a=this._l12_a=this._l23_a=this._l01_2a=this._l12_2a=this._l23_2a=this._point=0},lineEnd:function(){switch(this._point){case 1:this._context.moveTo(this._x3,this._y3),this._context.closePath();break;case 2:this._context.lineTo(this._x3,this._y3),this._context.closePath();break;case 3:this.point(this._x3,this._y3),this.point(this._x4,this._y4),this.point(this._x5,this._y5)}},point:function(n,t){if(n=+n,t=+t,this._point){var e=this._x2-n,r=this._y2-t;this._l23_a=Math.sqrt(this._l23_2a=Math.pow(e*e+r*r,this._alpha))}switch(this._point){case 0:this._point=1,this._x3=n,this._y3=t;break;case 1:this._point=2,this._context.moveTo(this._x4=n,this._y4=t);break;case 2:this._point=3,this._x5=n,this._y5=t;break;default:Mm(this,n,t)}this._l01_a=this._l12_a,this._l12_a=this._l23_a,this._l01_2a=this._l12_2a,this._l12_2a=this._l23_2a,this._x0=this._x1,this._x1=this._x2,this._x2=n,this._y0=this._y1,this._y1=this._y2,this._y2=t}};var Sm=function n(t){function e(n){return t?new Tm(n,t):new _m(n,0)}return e.alpha=function(t){return n(+t)},e}(.5);function km(n,t){this._context=n,this._alpha=t}km.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._l01_a=this._l12_a=this._l23_a=this._l01_2a=this._l12_2a=this._l23_2a=this._point=0},lineEnd:function(){(this._line||0!==this._line&&3===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(n,t){if(n=+n,t=+t,this._point){var e=this._x2-n,r=this._y2-t;this._l23_a=Math.sqrt(this._l23_2a=Math.pow(e*e+r*r,this._alpha))}switch(this._point){case 0:this._point=1;break;case 1:this._point=2;break;case 2:this._point=3,this._line?this._context.lineTo(this._x2,this._y2):this._context.moveTo(this._x2,this._y2);break;case 3:this._point=4;default:Mm(this,n,t)}this._l01_a=this._l12_a,this._l12_a=this._l23_a,this._l01_2a=this._l12_2a,this._l12_2a=this._l23_2a,this._x0=this._x1,this._x1=this._x2,this._x2=n,this._y0=this._y1,this._y1=this._y2,this._y2=t}};var Em=function n(t){function e(n){return t?new km(n,t):new xm(n,0)}return e.alpha=function(t){return n(+t)},e}(.5);function Cm(n){this._context=n}Cm.prototype={areaStart:om,areaEnd:om,lineStart:function(){this._point=0},lineEnd:function(){this._point&&this._context.closePath()},point:function(n,t){n=+n,t=+t,this._point?this._context.lineTo(n,t):(this._point=1,this._context.moveTo(n,t))}};var Pm=function(n){return new Cm(n)};function zm(n){return n<0?-1:1}function Om(n,t,e){var r=n._x1-n._x0,i=t-n._x1,u=(n._y1-n._y0)/(r||i<0&&-0),o=(e-n._y1)/(i||r<0&&-0),a=(u*i+o*r)/(r+i);return(zm(u)+zm(o))*Math.min(Math.abs(u),Math.abs(o),.5*Math.abs(a))||0}function Rm(n,t){var e=n._x1-n._x0;return e?(3*(n._y1-n._y0)/e-t)/2:t}function Dm(n,t,e){var r=n._x0,i=n._y0,u=n._x1,o=n._y1,a=(u-r)/3;n._context.bezierCurveTo(r+a,i+a*t,u-a,o-a*e,u,o)}function Lm(n){this._context=n}function qm(n){this._context=new Um(n)}function Um(n){this._context=n}function jm(n){return new Lm(n)}function Bm(n){return new qm(n)}function Ym(n){this._context=n}function Fm(n){var t,e,r=n.length-1,i=new Array(r),u=new Array(r),o=new Array(r);for(i[0]=0,u[0]=2,o[0]=n[0]+2*n[1],t=1;t<r-1;++t)i[t]=1,u[t]=4,o[t]=4*n[t]+2*n[t+1];for(i[r-1]=2,u[r-1]=7,o[r-1]=8*n[r-1]+n[r],t=1;t<r;++t)e=i[t]/u[t-1],u[t]-=e,o[t]-=e*o[t-1];for(i[r-1]=o[r-1]/u[r-1],t=r-2;t>=0;--t)i[t]=(o[t]-i[t+1])/u[t];for(u[r-1]=(n[r]+i[r-1])/2,t=0;t<r-1;++t)u[t]=2*n[t+1]-i[t+1];return[i,u]}Lm.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._y0=this._y1=this._t0=NaN,this._point=0},lineEnd:function(){switch(this._point){case 2:this._context.lineTo(this._x1,this._y1);break;case 3:Dm(this,this._t0,Rm(this,this._t0))}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(n,t){var e=NaN;if(t=+t,(n=+n)!==this._x1||t!==this._y1){switch(this._point){case 0:this._point=1,this._line?this._context.lineTo(n,t):this._context.moveTo(n,t);break;case 1:this._point=2;break;case 2:this._point=3,Dm(this,Rm(this,e=Om(this,n,t)),e);break;default:Dm(this,this._t0,e=Om(this,n,t))}this._x0=this._x1,this._x1=n,this._y0=this._y1,this._y1=t,this._t0=e}}},(qm.prototype=Object.create(Lm.prototype)).point=function(n,t){Lm.prototype.point.call(this,t,n)},Um.prototype={moveTo:function(n,t){this._context.moveTo(t,n)},closePath:function(){this._context.closePath()},lineTo:function(n,t){this._context.lineTo(t,n)},bezierCurveTo:function(n,t,e,r,i,u){this._context.bezierCurveTo(t,n,r,e,u,i)}},Ym.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x=[],this._y=[]},lineEnd:function(){var n=this._x,t=this._y,e=n.length;if(e)if(this._line?this._context.lineTo(n[0],t[0]):this._context.moveTo(n[0],t[0]),2===e)this._context.lineTo(n[1],t[1]);else for(var r=Fm(n),i=Fm(t),u=0,o=1;o<e;++u,++o)this._context.bezierCurveTo(r[0][u],i[0][u],r[1][u],i[1][u],n[o],t[o]);(this._line||0!==this._line&&1===e)&&this._context.closePath(),this._line=1-this._line,this._x=this._y=null},point:function(n,t){this._x.push(+n),this._y.push(+t)}};var Im=function(n){return new Ym(n)};function Hm(n,t){this._context=n,this._t=t}Hm.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x=this._y=NaN,this._point=0},lineEnd:function(){0<this._t&&this._t<1&&2===this._point&&this._context.lineTo(this._x,this._y),(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line>=0&&(this._t=1-this._t,this._line=1-this._line)},point:function(n,t){switch(n=+n,t=+t,this._point){case 0:this._point=1,this._line?this._context.lineTo(n,t):this._context.moveTo(n,t);break;case 1:this._point=2;default:if(this._t<=0)this._context.lineTo(this._x,t),this._context.lineTo(n,t);else{var e=this._x*(1-this._t)+n*this._t;this._context.lineTo(e,this._y),this._context.lineTo(e,t)}}this._x=n,this._y=t}};var Xm=function(n){return new Hm(n,.5)};function Gm(n){return new Hm(n,0)}function Vm(n){return new Hm(n,1)}var $m=function(n,t){if((i=n.length)>1)for(var e,r,i,u=1,o=n[t[0]],a=o.length;u<i;++u)for(r=o,o=n[t[u]],e=0;e<a;++e)o[e][1]+=o[e][0]=isNaN(r[e][1])?r[e][0]:r[e][1]},Wm=function(n){for(var t=n.length,e=new Array(t);--t>=0;)e[t]=t;return e};function Zm(n,t){return n[t]}var Qm=function(){var n=Zb([]),t=Wm,e=$m,r=Zm;function i(i){var u,o,a=n.apply(this,arguments),c=i.length,f=a.length,s=new Array(f);for(u=0;u<f;++u){for(var l,h=a[u],d=s[u]=new Array(c),p=0;p<c;++p)d[p]=l=[0,+r(i[p],h,p,i)],l.data=i[p];d.key=h}for(u=0,o=t(s);u<f;++u)s[o[u]].index=u;return e(s,o),s}return i.keys=function(t){return arguments.length?(n=\"function\"==typeof t?t:Zb(z_.call(t)),i):n},i.value=function(n){return arguments.length?(r=\"function\"==typeof n?n:Zb(+n),i):r},i.order=function(n){return arguments.length?(t=null==n?Wm:\"function\"==typeof n?n:Zb(z_.call(n)),i):t},i.offset=function(n){return arguments.length?(e=null==n?$m:n,i):e},i},Jm=function(n,t){if((r=n.length)>0){for(var e,r,i,u=0,o=n[0].length;u<o;++u){for(i=e=0;e<r;++e)i+=n[e][u][1]||0;if(i)for(e=0;e<r;++e)n[e][u][1]/=i}$m(n,t)}},Km=function(n,t){if((a=n.length)>1)for(var e,r,i,u,o,a,c=0,f=n[t[0]].length;c<f;++c)for(u=o=0,e=0;e<a;++e)(i=(r=n[t[e]][c])[1]-r[0])>=0?(r[0]=u,r[1]=u+=i):i<0?(r[1]=o,r[0]=o+=i):r[0]=u},nx=function(n,t){if((e=n.length)>0){for(var e,r=0,i=n[t[0]],u=i.length;r<u;++r){for(var o=0,a=0;o<e;++o)a+=n[o][r][1]||0;i[r][1]+=i[r][0]=-a/2}$m(n,t)}},tx=function(n,t){if((i=n.length)>0&&(r=(e=n[t[0]]).length)>0){for(var e,r,i,u=0,o=1;o<r;++o){for(var a=0,c=0,f=0;a<i;++a){for(var s=n[t[a]],l=s[o][1]||0,h=(l-(s[o-1][1]||0))/2,d=0;d<a;++d){var p=n[t[d]];h+=(p[o][1]||0)-(p[o-1][1]||0)}c+=l,f+=h*l}e[o-1][1]+=e[o-1][0]=u,c&&(u-=f/c)}e[o-1][1]+=e[o-1][0]=u,$m(n,t)}},ex=function(n){var t=n.map(rx);return Wm(n).sort(function(n,e){return t[n]-t[e]})};function rx(n){for(var t,e=-1,r=0,i=n.length,u=-1/0;++e<i;)(t=+n[e][1])>u&&(u=t,r=e);return r}var ix=function(n){var t=n.map(ux);return Wm(n).sort(function(n,e){return t[n]-t[e]})};function ux(n){for(var t,e=0,r=-1,i=n.length;++r<i;)(t=+n[r][1])&&(e+=t);return e}var ox=function(n){return ix(n).reverse()},ax=function(n){var t,e,r=n.length,i=n.map(ux),u=ex(n),o=0,a=0,c=[],f=[];for(t=0;t<r;++t)e=u[t],o<a?(o+=i[e],c.push(e)):(a+=i[e],f.push(e));return f.reverse().concat(c)},cx=function(n){return Wm(n).reverse()},fx=function(n){return function(){return n}};function sx(n){return n[0]}function lx(n){return n[1]}function hx(){this._=null}function dx(n){n.U=n.C=n.L=n.R=n.P=n.N=null}function px(n,t){var e=t,r=t.R,i=e.U;i?i.L===e?i.L=r:i.R=r:n._=r,r.U=i,e.U=r,e.R=r.L,e.R&&(e.R.U=e),r.L=e}function vx(n,t){var e=t,r=t.L,i=e.U;i?i.L===e?i.L=r:i.R=r:n._=r,r.U=i,e.U=r,e.L=r.R,e.L&&(e.L.U=e),r.R=e}function gx(n){for(;n.L;)n=n.L;return n}hx.prototype={constructor:hx,insert:function(n,t){var e,r,i;if(n){if(t.P=n,t.N=n.N,n.N&&(n.N.P=t),n.N=t,n.R){for(n=n.R;n.L;)n=n.L;n.L=t}else n.R=t;e=n}else this._?(n=gx(this._),t.P=null,t.N=n,n.P=n.L=t,e=n):(t.P=t.N=null,this._=t,e=null);for(t.L=t.R=null,t.U=e,t.C=!0,n=t;e&&e.C;)e===(r=e.U).L?(i=r.R)&&i.C?(e.C=i.C=!1,r.C=!0,n=r):(n===e.R&&(px(this,e),e=(n=e).U),e.C=!1,r.C=!0,vx(this,r)):(i=r.L)&&i.C?(e.C=i.C=!1,r.C=!0,n=r):(n===e.L&&(vx(this,e),e=(n=e).U),e.C=!1,r.C=!0,px(this,r)),e=n.U;this._.C=!1},remove:function(n){n.N&&(n.N.P=n.P),n.P&&(n.P.N=n.N),n.N=n.P=null;var t,e,r,i=n.U,u=n.L,o=n.R;if(e=u?o?gx(o):u:o,i?i.L===n?i.L=e:i.R=e:this._=e,u&&o?(r=e.C,e.C=n.C,e.L=u,u.U=e,e!==o?(i=e.U,e.U=n.U,n=e.R,i.L=n,e.R=o,o.U=e):(e.U=i,i=e,n=e.R)):(r=n.C,n=e),n&&(n.U=i),!r)if(n&&n.C)n.C=!1;else{do{if(n===this._)break;if(n===i.L){if((t=i.R).C&&(t.C=!1,i.C=!0,px(this,i),t=i.R),t.L&&t.L.C||t.R&&t.R.C){t.R&&t.R.C||(t.L.C=!1,t.C=!0,vx(this,t),t=i.R),t.C=i.C,i.C=t.R.C=!1,px(this,i),n=this._;break}}else if((t=i.L).C&&(t.C=!1,i.C=!0,vx(this,i),t=i.L),t.L&&t.L.C||t.R&&t.R.C){t.L&&t.L.C||(t.R.C=!1,t.C=!0,px(this,t),t=i.L),t.C=i.C,i.C=t.L.C=!1,vx(this,i),n=this._;break}t.C=!0,n=i,i=i.U}while(!n.C);n&&(n.C=!1)}}};var yx=hx;function bx(n,t,e,r){var i=[null,null],u=Fx.push(i)-1;return i.left=n,i.right=t,e&&mx(i,n,t,e),r&&mx(i,t,n,r),Bx[n.index].halfedges.push(u),Bx[t.index].halfedges.push(u),i}function _x(n,t,e){var r=[t,e];return r.left=n,r}function mx(n,t,e,r){n[0]||n[1]?n.left===e?n[1]=r:n[0]=r:(n[0]=r,n.left=t,n.right=e)}function xx(n,t,e,r,i){var u,o=n[0],a=n[1],c=o[0],f=o[1],s=0,l=1,h=a[0]-c,d=a[1]-f;if(u=t-c,h||!(u>0)){if(u/=h,h<0){if(u<s)return;u<l&&(l=u)}else if(h>0){if(u>l)return;u>s&&(s=u)}if(u=r-c,h||!(u<0)){if(u/=h,h<0){if(u>l)return;u>s&&(s=u)}else if(h>0){if(u<s)return;u<l&&(l=u)}if(u=e-f,d||!(u>0)){if(u/=d,d<0){if(u<s)return;u<l&&(l=u)}else if(d>0){if(u>l)return;u>s&&(s=u)}if(u=i-f,d||!(u<0)){if(u/=d,d<0){if(u>l)return;u>s&&(s=u)}else if(d>0){if(u<s)return;u<l&&(l=u)}return!(s>0||l<1)||(s>0&&(n[0]=[c+s*h,f+s*d]),l<1&&(n[1]=[c+l*h,f+l*d]),!0)}}}}}function wx(n,t,e,r,i){var u=n[1];if(u)return!0;var o,a,c=n[0],f=n.left,s=n.right,l=f[0],h=f[1],d=s[0],p=s[1],v=(l+d)/2,g=(h+p)/2;if(p===h){if(v<t||v>=r)return;if(l>d){if(c){if(c[1]>=i)return}else c=[v,e];u=[v,i]}else{if(c){if(c[1]<e)return}else c=[v,i];u=[v,e]}}else if(a=g-(o=(l-d)/(p-h))*v,o<-1||o>1)if(l>d){if(c){if(c[1]>=i)return}else c=[(e-a)/o,e];u=[(i-a)/o,i]}else{if(c){if(c[1]<e)return}else c=[(i-a)/o,i];u=[(e-a)/o,e]}else if(h<p){if(c){if(c[0]>=r)return}else c=[t,o*t+a];u=[r,o*r+a]}else{if(c){if(c[0]<t)return}else c=[r,o*r+a];u=[t,o*t+a]}return n[0]=c,n[1]=u,!0}function Mx(n,t){var e=n.site,r=t.left,i=t.right;return e===i&&(i=r,r=e),i?Math.atan2(i[1]-r[1],i[0]-r[0]):(e===r?(r=t[1],i=t[0]):(r=t[0],i=t[1]),Math.atan2(r[0]-i[0],i[1]-r[1]))}function Nx(n,t){return t[+(t.left!==n.site)]}function Ax(n,t){return t[+(t.left===n.site)]}var Tx,Sx=[];function kx(){dx(this),this.x=this.y=this.arc=this.site=this.cy=null}function Ex(n){var t=n.P,e=n.N;if(t&&e){var r=t.site,i=n.site,u=e.site;if(r!==u){var o=i[0],a=i[1],c=r[0]-o,f=r[1]-a,s=u[0]-o,l=u[1]-a,h=2*(c*l-f*s);if(!(h>=-Hx)){var d=c*c+f*f,p=s*s+l*l,v=(l*d-f*p)/h,g=(c*p-s*d)/h,y=Sx.pop()||new kx;y.arc=n,y.site=i,y.x=v+o,y.y=(y.cy=g+a)+Math.sqrt(v*v+g*g),n.circle=y;for(var b=null,_=Yx._;_;)if(y.y<_.y||y.y===_.y&&y.x<=_.x){if(!_.L){b=_.P;break}_=_.L}else{if(!_.R){b=_;break}_=_.R}Yx.insert(b,y),b||(Tx=y)}}}}function Cx(n){var t=n.circle;t&&(t.P||(Tx=t.N),Yx.remove(t),Sx.push(t),dx(t),n.circle=null)}var Px=[];function zx(){dx(this),this.edge=this.site=this.circle=null}function Ox(n){var t=Px.pop()||new zx;return t.site=n,t}function Rx(n){Cx(n),jx.remove(n),Px.push(n),dx(n)}function Dx(n){var t=n.circle,e=t.x,r=t.cy,i=[e,r],u=n.P,o=n.N,a=[n];Rx(n);for(var c=u;c.circle&&Math.abs(e-c.circle.x)<Ix&&Math.abs(r-c.circle.cy)<Ix;)u=c.P,a.unshift(c),Rx(c),c=u;a.unshift(c),Cx(c);for(var f=o;f.circle&&Math.abs(e-f.circle.x)<Ix&&Math.abs(r-f.circle.cy)<Ix;)o=f.N,a.push(f),Rx(f),f=o;a.push(f),Cx(f);var s,l=a.length;for(s=1;s<l;++s)f=a[s],c=a[s-1],mx(f.edge,c.site,f.site,i);c=a[0],(f=a[l-1]).edge=bx(c.site,f.site,null,i),Ex(c),Ex(f)}function Lx(n){for(var t,e,r,i,u=n[0],o=n[1],a=jx._;a;)if((r=qx(a,o)-u)>Ix)a=a.L;else{if(!((i=u-Ux(a,o))>Ix)){r>-Ix?(t=a.P,e=a):i>-Ix?(t=a,e=a.N):t=e=a;break}if(!a.R){t=a;break}a=a.R}!function(n){Bx[n.index]={site:n,halfedges:[]}}(n);var c=Ox(n);if(jx.insert(t,c),t||e){if(t===e)return Cx(t),e=Ox(t.site),jx.insert(c,e),c.edge=e.edge=bx(t.site,c.site),Ex(t),void Ex(e);if(e){Cx(t),Cx(e);var f=t.site,s=f[0],l=f[1],h=n[0]-s,d=n[1]-l,p=e.site,v=p[0]-s,g=p[1]-l,y=2*(h*g-d*v),b=h*h+d*d,_=v*v+g*g,m=[(g*b-d*_)/y+s,(h*_-v*b)/y+l];mx(e.edge,f,p,m),c.edge=bx(f,n,null,m),e.edge=bx(n,p,null,m),Ex(t),Ex(e)}else c.edge=bx(t.site,c.site)}}function qx(n,t){var e=n.site,r=e[0],i=e[1],u=i-t;if(!u)return r;var o=n.P;if(!o)return-1/0;var a=(e=o.site)[0],c=e[1],f=c-t;if(!f)return a;var s=a-r,l=1/u-1/f,h=s/f;return l?(-h+Math.sqrt(h*h-2*l*(s*s/(-2*f)-c+f/2+i-u/2)))/l+r:(r+a)/2}function Ux(n,t){var e=n.N;if(e)return qx(e,t);var r=n.site;return r[1]===t?r[0]:1/0}var jx,Bx,Yx,Fx,Ix=1e-6,Hx=1e-12;function Xx(n,t){return t[1]-n[1]||t[0]-n[0]}function Gx(n,t){var e,r,i,u=n.sort(Xx).pop();for(Fx=[],Bx=new Array(n.length),jx=new yx,Yx=new yx;;)if(i=Tx,u&&(!i||u[1]<i.y||u[1]===i.y&&u[0]<i.x))u[0]===e&&u[1]===r||(Lx(u),e=u[0],r=u[1]),u=n.pop();else{if(!i)break;Dx(i.arc)}if(function(){for(var n,t,e,r,i=0,u=Bx.length;i<u;++i)if((n=Bx[i])&&(r=(t=n.halfedges).length)){var o=new Array(r),a=new Array(r);for(e=0;e<r;++e)o[e]=e,a[e]=Mx(n,Fx[t[e]]);for(o.sort(function(n,t){return a[t]-a[n]}),e=0;e<r;++e)a[e]=t[o[e]];for(e=0;e<r;++e)t[e]=a[e]}}(),t){var o=+t[0][0],a=+t[0][1],c=+t[1][0],f=+t[1][1];!function(n,t,e,r){for(var i,u=Fx.length;u--;)wx(i=Fx[u],n,t,e,r)&&xx(i,n,t,e,r)&&(Math.abs(i[0][0]-i[1][0])>Ix||Math.abs(i[0][1]-i[1][1])>Ix)||delete Fx[u]}(o,a,c,f),function(n,t,e,r){var i,u,o,a,c,f,s,l,h,d,p,v,g=Bx.length,y=!0;for(i=0;i<g;++i)if(u=Bx[i]){for(o=u.site,a=(c=u.halfedges).length;a--;)Fx[c[a]]||c.splice(a,1);for(a=0,f=c.length;a<f;)p=(d=Ax(u,Fx[c[a]]))[0],v=d[1],l=(s=Nx(u,Fx[c[++a%f]]))[0],h=s[1],(Math.abs(p-l)>Ix||Math.abs(v-h)>Ix)&&(c.splice(a,0,Fx.push(_x(o,d,Math.abs(p-n)<Ix&&r-v>Ix?[n,Math.abs(l-n)<Ix?h:r]:Math.abs(v-r)<Ix&&e-p>Ix?[Math.abs(h-r)<Ix?l:e,r]:Math.abs(p-e)<Ix&&v-t>Ix?[e,Math.abs(l-e)<Ix?h:t]:Math.abs(v-t)<Ix&&p-n>Ix?[Math.abs(h-t)<Ix?l:n,t]:null))-1),++f);f&&(y=!1)}if(y){var b,_,m,x=1/0;for(i=0,y=null;i<g;++i)(u=Bx[i])&&(m=(b=(o=u.site)[0]-n)*b+(_=o[1]-t)*_)<x&&(x=m,y=u);if(y){var w=[n,t],M=[n,r],N=[e,r],A=[e,t];y.halfedges.push(Fx.push(_x(o=y.site,w,M))-1,Fx.push(_x(o,M,N))-1,Fx.push(_x(o,N,A))-1,Fx.push(_x(o,A,w))-1)}}for(i=0;i<g;++i)(u=Bx[i])&&(u.halfedges.length||delete Bx[i])}(o,a,c,f)}this.edges=Fx,this.cells=Bx,jx=Yx=Fx=Bx=null}Gx.prototype={constructor:Gx,polygons:function(){var n=this.edges;return this.cells.map(function(t){var e=t.halfedges.map(function(e){return Nx(t,n[e])});return e.data=t.site.data,e})},triangles:function(){var n=[],t=this.edges;return this.cells.forEach(function(e,r){if(u=(i=e.halfedges).length)for(var i,u,o,a,c,f,s=e.site,l=-1,h=t[i[u-1]],d=h.left===s?h.right:h.left;++l<u;)o=d,d=(h=t[i[l]]).left===s?h.right:h.left,o&&d&&r<o.index&&r<d.index&&(c=o,f=d,((a=s)[0]-f[0])*(c[1]-a[1])-(a[0]-c[0])*(f[1]-a[1])<0)&&n.push([s.data,o.data,d.data])}),n},links:function(){return this.edges.filter(function(n){return n.right}).map(function(n){return{source:n.left.data,target:n.right.data}})},find:function(n,t,e){for(var r,i,u=this,o=u._found||0,a=u.cells.length;!(i=u.cells[o]);)if(++o>=a)return null;var c=n-i.site[0],f=t-i.site[1],s=c*c+f*f;do{i=u.cells[r=o],o=null,i.halfedges.forEach(function(e){var r=u.edges[e],a=r.left;if(a!==i.site&&a||(a=r.right)){var c=n-a[0],f=t-a[1],l=c*c+f*f;l<s&&(s=l,o=a.index)}})}while(null!==o);return u._found=r,null==e||s<=e*e?i.site:null}};var Vx=function(){var n=sx,t=lx,e=null;function r(r){return new Gx(r.map(function(e,i){var u=[Math.round(n(e,i,r)/Ix)*Ix,Math.round(t(e,i,r)/Ix)*Ix];return u.index=i,u.data=e,u}),e)}return r.polygons=function(n){return r(n).polygons()},r.links=function(n){return r(n).links()},r.triangles=function(n){return r(n).triangles()},r.x=function(t){return arguments.length?(n=\"function\"==typeof t?t:fx(+t),r):n},r.y=function(n){return arguments.length?(t=\"function\"==typeof n?n:fx(+n),r):t},r.extent=function(n){return arguments.length?(e=null==n?null:[[+n[0][0],+n[0][1]],[+n[1][0],+n[1][1]]],r):e&&[[e[0][0],e[0][1]],[e[1][0],e[1][1]]]},r.size=function(n){return arguments.length?(e=null==n?null:[[0,0],[+n[0],+n[1]]],r):e&&[e[1][0]-e[0][0],e[1][1]-e[0][1]]},r},$x=function(n){return function(){return n}};function Wx(n,t,e){this.target=n,this.type=t,this.transform=e}function Zx(n,t,e){this.k=n,this.x=t,this.y=e}Zx.prototype={constructor:Zx,scale:function(n){return 1===n?this:new Zx(this.k*n,this.x,this.y)},translate:function(n,t){return 0===n&0===t?this:new Zx(this.k,this.x+this.k*n,this.y+this.k*t)},apply:function(n){return[n[0]*this.k+this.x,n[1]*this.k+this.y]},applyX:function(n){return n*this.k+this.x},applyY:function(n){return n*this.k+this.y},invert:function(n){return[(n[0]-this.x)/this.k,(n[1]-this.y)/this.k]},invertX:function(n){return(n-this.x)/this.k},invertY:function(n){return(n-this.y)/this.k},rescaleX:function(n){return n.copy().domain(n.range().map(this.invertX,this).map(n.invert,n))},rescaleY:function(n){return n.copy().domain(n.range().map(this.invertY,this).map(n.invert,n))},toString:function(){return\"translate(\"+this.x+\",\"+this.y+\") scale(\"+this.k+\")\"}};var Qx=new Zx(1,0,0);function Jx(n){return n.__zoom||Qx}function Kx(){pn.event.stopImmediatePropagation()}Jx.prototype=Zx.prototype;var nw=function(){pn.event.preventDefault(),pn.event.stopImmediatePropagation()};function tw(){return!pn.event.button}function ew(){var n,t,e=this;return e instanceof SVGElement?(n=(e=e.ownerSVGElement||e).width.baseVal.value,t=e.height.baseVal.value):(n=e.clientWidth,t=e.clientHeight),[[0,0],[n,t]]}function rw(){return this.__zoom||Qx}function iw(){return-pn.event.deltaY*(pn.event.deltaMode?120:1)/500}function uw(){return\"ontouchstart\"in this}function ow(n,t,e){var r=n.invertX(t[0][0])-e[0][0],i=n.invertX(t[1][0])-e[1][0],u=n.invertY(t[0][1])-e[0][1],o=n.invertY(t[1][1])-e[1][1];return n.translate(i>r?(r+i)/2:Math.min(0,r)||Math.max(0,i),o>u?(u+o)/2:Math.min(0,u)||Math.max(0,o))}var aw=function(){var n,t,e=tw,r=ew,i=ow,u=iw,o=uw,a=[0,1/0],c=[[-1/0,-1/0],[1/0,1/0]],f=250,s=ce,l=[],h=dn(\"start\",\"zoom\",\"end\"),d=500,p=150,v=0;function g(n){n.property(\"__zoom\",rw).on(\"wheel.zoom\",M).on(\"mousedown.zoom\",N).on(\"dblclick.zoom\",A).filter(o).on(\"touchstart.zoom\",T).on(\"touchmove.zoom\",S).on(\"touchend.zoom touchcancel.zoom\",k).style(\"touch-action\",\"none\").style(\"-webkit-tap-highlight-color\",\"rgba(0,0,0,0)\")}function y(n,t){return(t=Math.max(a[0],Math.min(a[1],t)))===n.k?n:new Zx(t,n.x,n.y)}function b(n,t,e){var r=t[0]-e[0]*n.k,i=t[1]-e[1]*n.k;return r===n.x&&i===n.y?n:new Zx(n.k,r,i)}function _(n){return[(+n[0][0]+ +n[1][0])/2,(+n[0][1]+ +n[1][1])/2]}function m(n,t,e){n.on(\"start.zoom\",function(){x(this,arguments).start()}).on(\"interrupt.zoom end.zoom\",function(){x(this,arguments).end()}).tween(\"zoom\",function(){var n=arguments,i=x(this,n),u=r.apply(this,n),o=e||_(u),a=Math.max(u[1][0]-u[0][0],u[1][1]-u[0][1]),c=this.__zoom,f=\"function\"==typeof t?t.apply(this,n):t,l=s(c.invert(o).concat(a/c.k),f.invert(o).concat(a/f.k));return function(n){if(1===n)n=f;else{var t=l(n),e=a/t[2];n=new Zx(e,o[0]-t[0]*e,o[1]-t[1]*e)}i.zoom(null,n)}})}function x(n,t){for(var e,r=0,i=l.length;r<i;++r)if((e=l[r]).that===n)return e;return new w(n,t)}function w(n,t){this.that=n,this.args=t,this.index=-1,this.active=0,this.extent=r.apply(n,t)}function M(){if(e.apply(this,arguments)){var n=x(this,arguments),t=this.__zoom,r=Math.max(a[0],Math.min(a[1],t.k*Math.pow(2,u.apply(this,arguments)))),o=Object(pn.mouse)(this);if(n.wheel)n.mouse[0][0]===o[0]&&n.mouse[0][1]===o[1]||(n.mouse[1]=t.invert(n.mouse[0]=o)),clearTimeout(n.wheel);else{if(t.k===r)return;n.mouse=[o,t.invert(o)],tr(this),n.start()}nw(),n.wheel=setTimeout(function(){n.wheel=null,n.end()},p),n.zoom(\"mouse\",i(b(y(t,r),n.mouse[0],n.mouse[1]),n.extent,c))}}function N(){if(!t&&e.apply(this,arguments)){var n=x(this,arguments),r=Object(pn.select)(pn.event.view).on(\"mousemove.zoom\",function(){if(nw(),!n.moved){var t=pn.event.clientX-o,e=pn.event.clientY-a;n.moved=t*t+e*e>v}n.zoom(\"mouse\",i(b(n.that.__zoom,n.mouse[0]=Object(pn.mouse)(n.that),n.mouse[1]),n.extent,c))},!0).on(\"mouseup.zoom\",function(){r.on(\"mousemove.zoom mouseup.zoom\",null),bn(pn.event.view,n.moved),nw(),n.end()},!0),u=Object(pn.mouse)(this),o=pn.event.clientX,a=pn.event.clientY;yn(pn.event.view),Kx(),n.mouse=[u,this.__zoom.invert(u)],tr(this),n.start()}}function A(){if(e.apply(this,arguments)){var n=this.__zoom,t=Object(pn.mouse)(this),u=n.invert(t),o=n.k*(pn.event.shiftKey?.5:2),a=i(b(y(n,o),t,u),r.apply(this,arguments),c);nw(),f>0?Object(pn.select)(this).transition().duration(f).call(m,a,t):Object(pn.select)(this).call(g.transform,a)}}function T(){if(e.apply(this,arguments)){var t,r,i,u,o=x(this,arguments),a=pn.event.changedTouches,c=a.length;for(Kx(),r=0;r<c;++r)i=a[r],u=[u=Object(pn.touch)(this,a,i.identifier),this.__zoom.invert(u),i.identifier],o.touch0?o.touch1||(o.touch1=u):(o.touch0=u,t=!0);if(n&&(n=clearTimeout(n),!o.touch1))return o.end(),void((u=Object(pn.select)(this).on(\"dblclick.zoom\"))&&u.apply(this,arguments));t&&(n=setTimeout(function(){n=null},d),tr(this),o.start())}}function S(){var t,e,r,u,o=x(this,arguments),a=pn.event.changedTouches,f=a.length;for(nw(),n&&(n=clearTimeout(n)),t=0;t<f;++t)e=a[t],r=Object(pn.touch)(this,a,e.identifier),o.touch0&&o.touch0[2]===e.identifier?o.touch0[0]=r:o.touch1&&o.touch1[2]===e.identifier&&(o.touch1[0]=r);if(e=o.that.__zoom,o.touch1){var s=o.touch0[0],l=o.touch0[1],h=o.touch1[0],d=o.touch1[1],p=(p=h[0]-s[0])*p+(p=h[1]-s[1])*p,v=(v=d[0]-l[0])*v+(v=d[1]-l[1])*v;e=y(e,Math.sqrt(p/v)),r=[(s[0]+h[0])/2,(s[1]+h[1])/2],u=[(l[0]+d[0])/2,(l[1]+d[1])/2]}else{if(!o.touch0)return;r=o.touch0[0],u=o.touch0[1]}o.zoom(\"touch\",i(b(e,r,u),o.extent,c))}function k(){var n,e,r=x(this,arguments),i=pn.event.changedTouches,u=i.length;for(Kx(),t&&clearTimeout(t),t=setTimeout(function(){t=null},d),n=0;n<u;++n)e=i[n],r.touch0&&r.touch0[2]===e.identifier?delete r.touch0:r.touch1&&r.touch1[2]===e.identifier&&delete r.touch1;r.touch1&&!r.touch0&&(r.touch0=r.touch1,delete r.touch1),r.touch0?r.touch0[1]=this.__zoom.invert(r.touch0[0]):r.end()}return g.transform=function(n,t){var e=n.selection?n.selection():n;e.property(\"__zoom\",rw),n!==e?m(n,t):e.interrupt().each(function(){x(this,arguments).start().zoom(null,\"function\"==typeof t?t.apply(this,arguments):t).end()})},g.scaleBy=function(n,t){g.scaleTo(n,function(){return this.__zoom.k*(\"function\"==typeof t?t.apply(this,arguments):t)})},g.scaleTo=function(n,t){g.transform(n,function(){var n=r.apply(this,arguments),e=this.__zoom,u=_(n),o=e.invert(u),a=\"function\"==typeof t?t.apply(this,arguments):t;return i(b(y(e,a),u,o),n,c)})},g.translateBy=function(n,t,e){g.transform(n,function(){return i(this.__zoom.translate(\"function\"==typeof t?t.apply(this,arguments):t,\"function\"==typeof e?e.apply(this,arguments):e),r.apply(this,arguments),c)})},g.translateTo=function(n,t,e){g.transform(n,function(){var n=r.apply(this,arguments),u=this.__zoom,o=_(n);return i(Qx.translate(o[0],o[1]).scale(u.k).translate(\"function\"==typeof t?-t.apply(this,arguments):-t,\"function\"==typeof e?-e.apply(this,arguments):-e),n,c)})},w.prototype={start:function(){return 1==++this.active&&(this.index=l.push(this)-1,this.emit(\"start\")),this},zoom:function(n,t){return this.mouse&&\"mouse\"!==n&&(this.mouse[1]=t.invert(this.mouse[0])),this.touch0&&\"touch\"!==n&&(this.touch0[1]=t.invert(this.touch0[0])),this.touch1&&\"touch\"!==n&&(this.touch1[1]=t.invert(this.touch1[0])),this.that.__zoom=t,this.emit(\"zoom\"),this},end:function(){return 0==--this.active&&(l.splice(this.index,1),this.index=-1,this.emit(\"end\")),this},emit:function(n){Object(pn.customEvent)(new Wx(g,n,this.that.__zoom),h.apply,h,[n,this.that,this.args])}},g.wheelDelta=function(n){return arguments.length?(u=\"function\"==typeof n?n:$x(+n),g):u},g.filter=function(n){return arguments.length?(e=\"function\"==typeof n?n:$x(!!n),g):e},g.touchable=function(n){return arguments.length?(o=\"function\"==typeof n?n:$x(!!n),g):o},g.extent=function(n){return arguments.length?(r=\"function\"==typeof n?n:$x([[+n[0][0],+n[0][1]],[+n[1][0],+n[1][1]]]),g):r},g.scaleExtent=function(n){return arguments.length?(a[0]=+n[0],a[1]=+n[1],g):[a[0],a[1]]},g.translateExtent=function(n){return arguments.length?(c[0][0]=+n[0][0],c[1][0]=+n[1][0],c[0][1]=+n[0][1],c[1][1]=+n[1][1],g):[[c[0][0],c[0][1]],[c[1][0],c[1][1]]]},g.constrain=function(n){return arguments.length?(i=n,g):i},g.duration=function(n){return arguments.length?(f=+n,g):f},g.interpolate=function(n){return arguments.length?(s=n,g):s},g.on=function(){var n=h.on.apply(h,arguments);return n===h?g:n},g.clickDistance=function(n){return arguments.length?(v=(n=+n)*n,g):Math.sqrt(v)},g};e.d(t,\"version\",function(){return\"5.9.1\"}),e.d(t,\"bisect\",function(){return c}),e.d(t,\"bisectRight\",function(){return o}),e.d(t,\"bisectLeft\",function(){return a}),e.d(t,\"ascending\",function(){return r}),e.d(t,\"bisector\",function(){return i}),e.d(t,\"cross\",function(){return l}),e.d(t,\"descending\",function(){return h}),e.d(t,\"deviation\",function(){return v}),e.d(t,\"extent\",function(){return g}),e.d(t,\"histogram\",function(){return C}),e.d(t,\"thresholdFreedmanDiaconis\",function(){return z}),e.d(t,\"thresholdScott\",function(){return O}),e.d(t,\"thresholdSturges\",function(){return E}),e.d(t,\"max\",function(){return R}),e.d(t,\"mean\",function(){return D}),e.d(t,\"median\",function(){return L}),e.d(t,\"merge\",function(){return q}),e.d(t,\"min\",function(){return U}),e.d(t,\"pairs\",function(){return f}),e.d(t,\"permute\",function(){return j}),e.d(t,\"quantile\",function(){return P}),e.d(t,\"range\",function(){return w}),e.d(t,\"scan\",function(){return B}),e.d(t,\"shuffle\",function(){return Y}),e.d(t,\"sum\",function(){return F}),e.d(t,\"ticks\",function(){return T}),e.d(t,\"tickIncrement\",function(){return S}),e.d(t,\"tickStep\",function(){return k}),e.d(t,\"transpose\",function(){return I}),e.d(t,\"variance\",function(){return p}),e.d(t,\"zip\",function(){return X}),e.d(t,\"axisTop\",function(){return rn}),e.d(t,\"axisRight\",function(){return un}),e.d(t,\"axisBottom\",function(){return on}),e.d(t,\"axisLeft\",function(){return an}),e.d(t,\"brush\",function(){return Ti}),e.d(t,\"brushX\",function(){return Ni}),e.d(t,\"brushY\",function(){return Ai}),e.d(t,\"brushSelection\",function(){return Mi}),e.d(t,\"chord\",function(){return Ri}),e.d(t,\"ribbon\",function(){return $i}),e.d(t,\"nest\",function(){return Ji}),e.d(t,\"set\",function(){return ou}),e.d(t,\"map\",function(){return Qi}),e.d(t,\"keys\",function(){return au}),e.d(t,\"values\",function(){return cu}),e.d(t,\"entries\",function(){return fu}),e.d(t,\"color\",function(){return Yn}),e.d(t,\"rgb\",function(){return Xn}),e.d(t,\"hsl\",function(){return Wn}),e.d(t,\"lab\",function(){return ft}),e.d(t,\"hcl\",function(){return yt}),e.d(t,\"lch\",function(){return gt}),e.d(t,\"gray\",function(){return ct}),e.d(t,\"cubehelix\",function(){return At}),e.d(t,\"contours\",function(){return _u}),e.d(t,\"contourDensity\",function(){return Au}),e.d(t,\"dispatch\",function(){return dn}),e.d(t,\"drag\",function(){return An}),e.d(t,\"dragDisable\",function(){return yn}),e.d(t,\"dragEnable\",function(){return bn}),e.d(t,\"dsvFormat\",function(){return Du}),e.d(t,\"csvParse\",function(){return qu}),e.d(t,\"csvParseRows\",function(){return Uu}),e.d(t,\"csvFormat\",function(){return ju}),e.d(t,\"csvFormatBody\",function(){return Bu}),e.d(t,\"csvFormatRows\",function(){return Yu}),e.d(t,\"tsvParse\",function(){return Iu}),e.d(t,\"tsvParseRows\",function(){return Hu}),e.d(t,\"tsvFormat\",function(){return Xu}),e.d(t,\"tsvFormatBody\",function(){return Gu}),e.d(t,\"tsvFormatRows\",function(){return Vu}),e.d(t,\"autoType\",function(){return $u}),e.d(t,\"easeLinear\",function(){return lr}),e.d(t,\"easeQuad\",function(){return pr}),e.d(t,\"easeQuadIn\",function(){return hr}),e.d(t,\"easeQuadOut\",function(){return dr}),e.d(t,\"easeQuadInOut\",function(){return pr}),e.d(t,\"easeCubic\",function(){return yr}),e.d(t,\"easeCubicIn\",function(){return vr}),e.d(t,\"easeCubicOut\",function(){return gr}),e.d(t,\"easeCubicInOut\",function(){return yr}),e.d(t,\"easePoly\",function(){return mr}),e.d(t,\"easePolyIn\",function(){return br}),e.d(t,\"easePolyOut\",function(){return _r}),e.d(t,\"easePolyInOut\",function(){return mr}),e.d(t,\"easeSin\",function(){return Ar}),e.d(t,\"easeSinIn\",function(){return Mr}),e.d(t,\"easeSinOut\",function(){return Nr}),e.d(t,\"easeSinInOut\",function(){return Ar}),e.d(t,\"easeExp\",function(){return kr}),e.d(t,\"easeExpIn\",function(){return Tr}),e.d(t,\"easeExpOut\",function(){return Sr}),e.d(t,\"easeExpInOut\",function(){return kr}),e.d(t,\"easeCircle\",function(){return Pr}),e.d(t,\"easeCircleIn\",function(){return Er}),e.d(t,\"easeCircleOut\",function(){return Cr}),e.d(t,\"easeCircleInOut\",function(){return Pr}),e.d(t,\"easeBounce\",function(){return Ir}),e.d(t,\"easeBounceIn\",function(){return Fr}),e.d(t,\"easeBounceOut\",function(){return Ir}),e.d(t,\"easeBounceInOut\",function(){return Hr}),e.d(t,\"easeBack\",function(){return Vr}),e.d(t,\"easeBackIn\",function(){return Xr}),e.d(t,\"easeBackOut\",function(){return Gr}),e.d(t,\"easeBackInOut\",function(){return Vr}),e.d(t,\"easeElastic\",function(){return Zr}),e.d(t,\"easeElasticIn\",function(){return Wr}),e.d(t,\"easeElasticOut\",function(){return Zr}),e.d(t,\"easeElasticInOut\",function(){return Qr}),e.d(t,\"blob\",function(){return Zu}),e.d(t,\"buffer\",function(){return Ju}),e.d(t,\"dsv\",function(){return eo}),e.d(t,\"csv\",function(){return ro}),e.d(t,\"tsv\",function(){return io}),e.d(t,\"image\",function(){return uo}),e.d(t,\"json\",function(){return ao}),e.d(t,\"text\",function(){return no}),e.d(t,\"xml\",function(){return fo}),e.d(t,\"html\",function(){return so}),e.d(t,\"svg\",function(){return lo}),e.d(t,\"forceCenter\",function(){return ho}),e.d(t,\"forceCollide\",function(){return To}),e.d(t,\"forceLink\",function(){return Eo}),e.d(t,\"forceManyBody\",function(){return Do}),e.d(t,\"forceRadial\",function(){return Lo}),e.d(t,\"forceSimulation\",function(){return Ro}),e.d(t,\"forceX\",function(){return qo}),e.d(t,\"forceY\",function(){return Uo}),e.d(t,\"formatDefaultLocale\",function(){return na}),e.d(t,\"format\",function(){return Go}),e.d(t,\"formatPrefix\",function(){return Vo}),e.d(t,\"formatLocale\",function(){return Ko}),e.d(t,\"formatSpecifier\",function(){return Fo}),e.d(t,\"precisionFixed\",function(){return ta}),e.d(t,\"precisionPrefix\",function(){return ea}),e.d(t,\"precisionRound\",function(){return ra}),e.d(t,\"geoArea\",function(){return Wa}),e.d(t,\"geoBounds\",function(){return Yc}),e.d(t,\"geoCentroid\",function(){return Kc}),e.d(t,\"geoCircle\",function(){return lf}),e.d(t,\"geoClipAntimeridian\",function(){return wf}),e.d(t,\"geoClipCircle\",function(){return Mf}),e.d(t,\"geoClipExtent\",function(){return Pf}),e.d(t,\"geoClipRectangle\",function(){return Sf}),e.d(t,\"geoContains\",function(){return Wf}),e.d(t,\"geoDistance\",function(){return Bf}),e.d(t,\"geoGraticule\",function(){return Jf}),e.d(t,\"geoGraticule10\",function(){return Kf}),e.d(t,\"geoInterpolate\",function(){return is}),e.d(t,\"geoLength\",function(){return qf}),e.d(t,\"geoPath\",function(){return el}),e.d(t,\"geoAlbers\",function(){return xl}),e.d(t,\"geoAlbersUsa\",function(){return wl}),e.d(t,\"geoAzimuthalEqualArea\",function(){return Tl}),e.d(t,\"geoAzimuthalEqualAreaRaw\",function(){return Al}),e.d(t,\"geoAzimuthalEquidistant\",function(){return kl}),e.d(t,\"geoAzimuthalEquidistantRaw\",function(){return Sl}),e.d(t,\"geoConicConformal\",function(){return Rl}),e.d(t,\"geoConicConformalRaw\",function(){return Ol}),e.d(t,\"geoConicEqualArea\",function(){return ml}),e.d(t,\"geoConicEqualAreaRaw\",function(){return _l}),e.d(t,\"geoConicEquidistant\",function(){return Ul}),e.d(t,\"geoConicEquidistantRaw\",function(){return ql}),e.d(t,\"geoEqualEarth\",function(){return Xl}),e.d(t,\"geoEqualEarthRaw\",function(){return Hl}),e.d(t,\"geoEquirectangular\",function(){return Ll}),e.d(t,\"geoEquirectangularRaw\",function(){return Dl}),e.d(t,\"geoGnomonic\",function(){return Vl}),e.d(t,\"geoGnomonicRaw\",function(){return Gl}),e.d(t,\"geoIdentity\",function(){return Wl}),e.d(t,\"geoProjection\",function(){return gl}),e.d(t,\"geoProjectionMutator\",function(){return yl}),e.d(t,\"geoMercator\",function(){return Cl}),e.d(t,\"geoMercatorRaw\",function(){return El}),e.d(t,\"geoNaturalEarth1\",function(){return Ql}),e.d(t,\"geoNaturalEarth1Raw\",function(){return Zl}),e.d(t,\"geoOrthographic\",function(){return Kl}),e.d(t,\"geoOrthographicRaw\",function(){return Jl}),e.d(t,\"geoStereographic\",function(){return th}),e.d(t,\"geoStereographicRaw\",function(){return nh}),e.d(t,\"geoTransverseMercator\",function(){return rh}),e.d(t,\"geoTransverseMercatorRaw\",function(){return eh}),e.d(t,\"geoRotation\",function(){return cf}),e.d(t,\"geoStream\",function(){return Ya}),e.d(t,\"geoTransform\",function(){return rl}),e.d(t,\"cluster\",function(){return ah}),e.d(t,\"hierarchy\",function(){return fh}),e.d(t,\"pack\",function(){return Oh}),e.d(t,\"packSiblings\",function(){return kh}),e.d(t,\"packEnclose\",function(){return vh}),e.d(t,\"partition\",function(){return jh}),e.d(t,\"stratify\",function(){return Xh}),e.d(t,\"tree\",function(){return Jh}),e.d(t,\"treemap\",function(){return rd}),e.d(t,\"treemapBinary\",function(){return id}),e.d(t,\"treemapDice\",function(){return Uh}),e.d(t,\"treemapSlice\",function(){return Kh}),e.d(t,\"treemapSliceDice\",function(){return ud}),e.d(t,\"treemapSquarify\",function(){return ed}),e.d(t,\"treemapResquarify\",function(){return od}),e.d(t,\"interpolate\",function(){return Zt}),e.d(t,\"interpolateArray\",function(){return jt}),e.d(t,\"interpolateBasis\",function(){return kt}),e.d(t,\"interpolateBasisClosed\",function(){return Et}),e.d(t,\"interpolateDate\",function(){return Bt}),e.d(t,\"interpolateDiscrete\",function(){return Qt}),e.d(t,\"interpolateHue\",function(){return Jt}),e.d(t,\"interpolateNumber\",function(){return Yt}),e.d(t,\"interpolateObject\",function(){return Ft}),e.d(t,\"interpolateRound\",function(){return Kt}),e.d(t,\"interpolateString\",function(){return Wt}),e.d(t,\"interpolateTransformCss\",function(){return ie}),e.d(t,\"interpolateTransformSvg\",function(){return ue}),e.d(t,\"interpolateZoom\",function(){return ce}),e.d(t,\"interpolateRgb\",function(){return Dt}),e.d(t,\"interpolateRgbBasis\",function(){return qt}),e.d(t,\"interpolateRgbBasisClosed\",function(){return Ut}),e.d(t,\"interpolateHsl\",function(){return se}),e.d(t,\"interpolateHslLong\",function(){return le}),e.d(t,\"interpolateLab\",function(){return he}),e.d(t,\"interpolateHcl\",function(){return pe}),e.d(t,\"interpolateHclLong\",function(){return ve}),e.d(t,\"interpolateCubehelix\",function(){return ye}),e.d(t,\"interpolateCubehelixLong\",function(){return be}),e.d(t,\"piecewise\",function(){return _e}),e.d(t,\"quantize\",function(){return we}),e.d(t,\"path\",function(){return Fi}),e.d(t,\"polygonArea\",function(){return ad}),e.d(t,\"polygonCentroid\",function(){return cd}),e.d(t,\"polygonHull\",function(){return hd}),e.d(t,\"polygonContains\",function(){return dd}),e.d(t,\"polygonLength\",function(){return pd}),e.d(t,\"quadtree\",function(){return mo}),e.d(t,\"randomUniform\",function(){return gd}),e.d(t,\"randomNormal\",function(){return yd}),e.d(t,\"randomLogNormal\",function(){return bd}),e.d(t,\"randomBates\",function(){return md}),e.d(t,\"randomIrwinHall\",function(){return _d}),e.d(t,\"randomExponential\",function(){return xd}),e.d(t,\"scaleBand\",function(){return Ed}),e.d(t,\"scalePoint\",function(){return Cd}),e.d(t,\"scaleIdentity\",function(){return Xd}),e.d(t,\"scaleLinear\",function(){return Hd}),e.d(t,\"scaleLog\",function(){return np}),e.d(t,\"scaleSymlog\",function(){return ip}),e.d(t,\"scaleOrdinal\",function(){return kd}),e.d(t,\"scaleImplicit\",function(){return Sd}),e.d(t,\"scalePow\",function(){return fp}),e.d(t,\"scaleSqrt\",function(){return sp}),e.d(t,\"scaleQuantile\",function(){return lp}),e.d(t,\"scaleQuantize\",function(){return hp}),e.d(t,\"scaleThreshold\",function(){return dp}),e.d(t,\"scaleTime\",function(){return fy}),e.d(t,\"scaleUtc\",function(){return sy}),e.d(t,\"scaleSequential\",function(){return dy}),e.d(t,\"scaleSequentialLog\",function(){return py}),e.d(t,\"scaleSequentialPow\",function(){return gy}),e.d(t,\"scaleSequentialSqrt\",function(){return yy}),e.d(t,\"scaleSequentialSymlog\",function(){return vy}),e.d(t,\"scaleSequentialQuantile\",function(){return by}),e.d(t,\"scaleDiverging\",function(){return my}),e.d(t,\"scaleDivergingLog\",function(){return xy}),e.d(t,\"scaleDivergingPow\",function(){return My}),e.d(t,\"scaleDivergingSqrt\",function(){return Ny}),e.d(t,\"scaleDivergingSymlog\",function(){return wy}),e.d(t,\"tickFormat\",function(){return Fd}),e.d(t,\"schemeCategory10\",function(){return Ty}),e.d(t,\"schemeAccent\",function(){return Sy}),e.d(t,\"schemeDark2\",function(){return ky}),e.d(t,\"schemePaired\",function(){return Ey}),e.d(t,\"schemePastel1\",function(){return Cy}),e.d(t,\"schemePastel2\",function(){return Py}),e.d(t,\"schemeSet1\",function(){return zy}),e.d(t,\"schemeSet2\",function(){return Oy}),e.d(t,\"schemeSet3\",function(){return Ry}),e.d(t,\"interpolateBrBG\",function(){return qy}),e.d(t,\"schemeBrBG\",function(){return Ly}),e.d(t,\"interpolatePRGn\",function(){return jy}),e.d(t,\"schemePRGn\",function(){return Uy}),e.d(t,\"interpolatePiYG\",function(){return Yy}),e.d(t,\"schemePiYG\",function(){return By}),e.d(t,\"interpolatePuOr\",function(){return Iy}),e.d(t,\"schemePuOr\",function(){return Fy}),e.d(t,\"interpolateRdBu\",function(){return Xy}),e.d(t,\"schemeRdBu\",function(){return Hy}),e.d(t,\"interpolateRdGy\",function(){return Vy}),e.d(t,\"schemeRdGy\",function(){return Gy}),e.d(t,\"interpolateRdYlBu\",function(){return Wy}),e.d(t,\"schemeRdYlBu\",function(){return $y}),e.d(t,\"interpolateRdYlGn\",function(){return Qy}),e.d(t,\"schemeRdYlGn\",function(){return Zy}),e.d(t,\"interpolateSpectral\",function(){return Ky}),e.d(t,\"schemeSpectral\",function(){return Jy}),e.d(t,\"interpolateBuGn\",function(){return tb}),e.d(t,\"schemeBuGn\",function(){return nb}),e.d(t,\"interpolateBuPu\",function(){return rb}),e.d(t,\"schemeBuPu\",function(){return eb}),e.d(t,\"interpolateGnBu\",function(){return ub}),e.d(t,\"schemeGnBu\",function(){return ib}),e.d(t,\"interpolateOrRd\",function(){return ab}),e.d(t,\"schemeOrRd\",function(){return ob}),e.d(t,\"interpolatePuBuGn\",function(){return fb}),e.d(t,\"schemePuBuGn\",function(){return cb}),e.d(t,\"interpolatePuBu\",function(){return lb}),e.d(t,\"schemePuBu\",function(){return sb}),e.d(t,\"interpolatePuRd\",function(){return db}),e.d(t,\"schemePuRd\",function(){return hb}),e.d(t,\"interpolateRdPu\",function(){return vb}),e.d(t,\"schemeRdPu\",function(){return pb}),e.d(t,\"interpolateYlGnBu\",function(){return yb}),e.d(t,\"schemeYlGnBu\",function(){return gb}),e.d(t,\"interpolateYlGn\",function(){return _b}),e.d(t,\"schemeYlGn\",function(){return bb}),e.d(t,\"interpolateYlOrBr\",function(){return xb}),e.d(t,\"schemeYlOrBr\",function(){return mb}),e.d(t,\"interpolateYlOrRd\",function(){return Mb}),e.d(t,\"schemeYlOrRd\",function(){return wb}),e.d(t,\"interpolateBlues\",function(){return Ab}),e.d(t,\"schemeBlues\",function(){return Nb}),e.d(t,\"interpolateGreens\",function(){return Sb}),e.d(t,\"schemeGreens\",function(){return Tb}),e.d(t,\"interpolateGreys\",function(){return Eb}),e.d(t,\"schemeGreys\",function(){return kb}),e.d(t,\"interpolatePurples\",function(){return Pb}),e.d(t,\"schemePurples\",function(){return Cb}),e.d(t,\"interpolateReds\",function(){return Ob}),e.d(t,\"schemeReds\",function(){return zb}),e.d(t,\"interpolateOranges\",function(){return Db}),e.d(t,\"schemeOranges\",function(){return Rb}),e.d(t,\"interpolateCubehelixDefault\",function(){return Lb}),e.d(t,\"interpolateRainbow\",function(){return Bb}),e.d(t,\"interpolateWarm\",function(){return qb}),e.d(t,\"interpolateCool\",function(){return Ub}),e.d(t,\"interpolateSinebow\",function(){return Hb}),e.d(t,\"interpolateViridis\",function(){return Gb}),e.d(t,\"interpolateMagma\",function(){return Vb}),e.d(t,\"interpolateInferno\",function(){return $b}),e.d(t,\"interpolatePlasma\",function(){return Wb}),e.d(t,\"create\",function(){return pn.create}),e.d(t,\"creator\",function(){return pn.creator}),e.d(t,\"local\",function(){return pn.local}),e.d(t,\"matcher\",function(){return pn.matcher}),e.d(t,\"mouse\",function(){return pn.mouse}),e.d(t,\"namespace\",function(){return pn.namespace}),e.d(t,\"namespaces\",function(){return pn.namespaces}),e.d(t,\"clientPoint\",function(){return pn.clientPoint}),e.d(t,\"select\",function(){return pn.select}),e.d(t,\"selectAll\",function(){return pn.selectAll}),e.d(t,\"selection\",function(){return pn.selection}),e.d(t,\"selector\",function(){return pn.selector}),e.d(t,\"selectorAll\",function(){return pn.selectorAll}),e.d(t,\"style\",function(){return pn.style}),e.d(t,\"touch\",function(){return pn.touch}),e.d(t,\"touches\",function(){return pn.touches}),e.d(t,\"window\",function(){return pn.window}),e.d(t,\"event\",function(){return pn.event}),e.d(t,\"customEvent\",function(){return pn.customEvent}),e.d(t,\"arc\",function(){return v_}),e.d(t,\"area\",function(){return x_}),e.d(t,\"line\",function(){return m_}),e.d(t,\"pie\",function(){return N_}),e.d(t,\"areaRadial\",function(){return C_}),e.d(t,\"radialArea\",function(){return C_}),e.d(t,\"lineRadial\",function(){return E_}),e.d(t,\"radialLine\",function(){return E_}),e.d(t,\"pointRadial\",function(){return P_}),e.d(t,\"linkHorizontal\",function(){return j_}),e.d(t,\"linkVertical\",function(){return B_}),e.d(t,\"linkRadial\",function(){return Y_}),e.d(t,\"symbol\",function(){return um}),e.d(t,\"symbols\",function(){return im}),e.d(t,\"symbolCircle\",function(){return F_}),e.d(t,\"symbolCross\",function(){return I_}),e.d(t,\"symbolDiamond\",function(){return G_}),e.d(t,\"symbolSquare\",function(){return Q_}),e.d(t,\"symbolStar\",function(){return Z_}),e.d(t,\"symbolTriangle\",function(){return K_}),e.d(t,\"symbolWye\",function(){return rm}),e.d(t,\"curveBasisClosed\",function(){return lm}),e.d(t,\"curveBasisOpen\",function(){return dm}),e.d(t,\"curveBasis\",function(){return fm}),e.d(t,\"curveBundle\",function(){return vm}),e.d(t,\"curveCardinalClosed\",function(){return mm}),e.d(t,\"curveCardinalOpen\",function(){return wm}),e.d(t,\"curveCardinal\",function(){return bm}),e.d(t,\"curveCatmullRomClosed\",function(){return Sm}),e.d(t,\"curveCatmullRomOpen\",function(){return Em}),e.d(t,\"curveCatmullRom\",function(){return Am}),e.d(t,\"curveLinearClosed\",function(){return Pm}),e.d(t,\"curveLinear\",function(){return y_}),e.d(t,\"curveMonotoneX\",function(){return jm}),e.d(t,\"curveMonotoneY\",function(){return Bm}),e.d(t,\"curveNatural\",function(){return Im}),e.d(t,\"curveStep\",function(){return Xm}),e.d(t,\"curveStepAfter\",function(){return Vm}),e.d(t,\"curveStepBefore\",function(){return Gm}),e.d(t,\"stack\",function(){return Qm}),e.d(t,\"stackOffsetExpand\",function(){return Jm}),e.d(t,\"stackOffsetDiverging\",function(){return Km}),e.d(t,\"stackOffsetNone\",function(){return $m}),e.d(t,\"stackOffsetSilhouette\",function(){return nx}),e.d(t,\"stackOffsetWiggle\",function(){return tx}),e.d(t,\"stackOrderAppearance\",function(){return ex}),e.d(t,\"stackOrderAscending\",function(){return ix}),e.d(t,\"stackOrderDescending\",function(){return ox}),e.d(t,\"stackOrderInsideOut\",function(){return ax}),e.d(t,\"stackOrderNone\",function(){return Wm}),e.d(t,\"stackOrderReverse\",function(){return cx}),e.d(t,\"timeInterval\",function(){return gp}),e.d(t,\"timeMillisecond\",function(){return bp}),e.d(t,\"timeMilliseconds\",function(){return _p}),e.d(t,\"utcMillisecond\",function(){return bp}),e.d(t,\"utcMilliseconds\",function(){return _p}),e.d(t,\"timeSecond\",function(){return Mp}),e.d(t,\"timeSeconds\",function(){return Np}),e.d(t,\"utcSecond\",function(){return Mp}),e.d(t,\"utcSeconds\",function(){return Np}),e.d(t,\"timeMinute\",function(){return Tp}),e.d(t,\"timeMinutes\",function(){return Sp}),e.d(t,\"timeHour\",function(){return Ep}),e.d(t,\"timeHours\",function(){return Cp}),e.d(t,\"timeDay\",function(){return zp}),e.d(t,\"timeDays\",function(){return Op}),e.d(t,\"timeWeek\",function(){return Dp}),e.d(t,\"timeWeeks\",function(){return Fp}),e.d(t,\"timeSunday\",function(){return Dp}),e.d(t,\"timeSundays\",function(){return Fp}),e.d(t,\"timeMonday\",function(){return Lp}),e.d(t,\"timeMondays\",function(){return Ip}),e.d(t,\"timeTuesday\",function(){return qp}),e.d(t,\"timeTuesdays\",function(){return Hp}),e.d(t,\"timeWednesday\",function(){return Up}),e.d(t,\"timeWednesdays\",function(){return Xp}),e.d(t,\"timeThursday\",function(){return jp}),e.d(t,\"timeThursdays\",function(){return Gp}),e.d(t,\"timeFriday\",function(){return Bp}),e.d(t,\"timeFridays\",function(){return Vp}),e.d(t,\"timeSaturday\",function(){return Yp}),e.d(t,\"timeSaturdays\",function(){return $p}),e.d(t,\"timeMonth\",function(){return Zp}),e.d(t,\"timeMonths\",function(){return Qp}),e.d(t,\"timeYear\",function(){return Kp}),e.d(t,\"timeYears\",function(){return nv}),e.d(t,\"utcMinute\",function(){return ev}),e.d(t,\"utcMinutes\",function(){return rv}),e.d(t,\"utcHour\",function(){return uv}),e.d(t,\"utcHours\",function(){return ov}),e.d(t,\"utcDay\",function(){return cv}),e.d(t,\"utcDays\",function(){return fv}),e.d(t,\"utcWeek\",function(){return lv}),e.d(t,\"utcWeeks\",function(){return bv}),e.d(t,\"utcSunday\",function(){return lv}),e.d(t,\"utcSundays\",function(){return bv}),e.d(t,\"utcMonday\",function(){return hv}),e.d(t,\"utcMondays\",function(){return _v}),e.d(t,\"utcTuesday\",function(){return dv}),e.d(t,\"utcTuesdays\",function(){return mv}),e.d(t,\"utcWednesday\",function(){return pv}),e.d(t,\"utcWednesdays\",function(){return xv}),e.d(t,\"utcThursday\",function(){return vv}),e.d(t,\"utcThursdays\",function(){return wv}),e.d(t,\"utcFriday\",function(){return gv}),e.d(t,\"utcFridays\",function(){return Mv}),e.d(t,\"utcSaturday\",function(){return yv}),e.d(t,\"utcSaturdays\",function(){return Nv}),e.d(t,\"utcMonth\",function(){return Tv}),e.d(t,\"utcMonths\",function(){return Sv}),e.d(t,\"utcYear\",function(){return Ev}),e.d(t,\"utcYears\",function(){return Cv}),e.d(t,\"timeFormatDefaultLocale\",function(){return Zg}),e.d(t,\"timeFormat\",function(){return Lv}),e.d(t,\"timeParse\",function(){return qv}),e.d(t,\"utcFormat\",function(){return Uv}),e.d(t,\"utcParse\",function(){return jv}),e.d(t,\"timeFormatLocale\",function(){return Rv}),e.d(t,\"isoFormat\",function(){return Qg}),e.d(t,\"isoParse\",function(){return Jg}),e.d(t,\"now\",function(){return ze}),e.d(t,\"timer\",function(){return De}),e.d(t,\"timerFlush\",function(){return Le}),e.d(t,\"timeout\",function(){return Be}),e.d(t,\"interval\",function(){return Ye}),e.d(t,\"transition\",function(){return cr}),e.d(t,\"active\",function(){return ti}),e.d(t,\"interrupt\",function(){return tr}),e.d(t,\"voronoi\",function(){return Vx}),e.d(t,\"zoom\",function(){return aw}),e.d(t,\"zoomTransform\",function(){return Jx}),e.d(t,\"zoomIdentity\",function(){return Qx})}]);","extractedComments":[]}